
Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
<<<<<<< HEAD
  0 .text         00001d4c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000090  00800060  00001d4c  00001de0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001e  008000f0  008000f0  00001e70  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001e70  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001ea0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000368  00000000  00000000  00001edc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003ddf  00000000  00000000  00002244  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000015d3  00000000  00000000  00006023  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000225a  00000000  00000000  000075f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000006e4  00000000  00000000  00009850  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000141a  00000000  00000000  00009f34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000206b  00000000  00000000  0000b34e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000260  00000000  00000000  0000d3b9  2**0
=======
  0 .text         00001e64  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000008e  00800060  00001e64  00001ef8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001e  008000ee  008000ee  00001f86  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001f86  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001fb8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000378  00000000  00000000  00001ff4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003e6a  00000000  00000000  0000236c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000015de  00000000  00000000  000061d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000235f  00000000  00000000  000077b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000724  00000000  00000000  00009b14  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000014db  00000000  00000000  0000a238  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001f96  00000000  00000000  0000b713  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000270  00000000  00000000  0000d6a9  2**0
>>>>>>> main
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
<<<<<<< HEAD
       4:	0c 94 aa 09 	jmp	0x1354	; 0x1354 <__vector_1>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 a5 0b 	jmp	0x174a	; 0x174a <__vector_5>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 fd 09 	jmp	0x13fa	; 0x13fa <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 57 0a 	jmp	0x14ae	; 0x14ae <__vector_11>
=======
       4:	0c 94 36 0a 	jmp	0x146c	; 0x146c <__vector_1>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 31 0c 	jmp	0x1862	; 0x1862 <__vector_5>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 89 0a 	jmp	0x1512	; 0x1512 <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 e3 0a 	jmp	0x15c6	; 0x15c6 <__vector_11>
>>>>>>> main
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
<<<<<<< HEAD
      66:	ec e4       	ldi	r30, 0x4C	; 76
      68:	fd e1       	ldi	r31, 0x1D	; 29
=======
      66:	e4 e6       	ldi	r30, 0x64	; 100
      68:	fe e1       	ldi	r31, 0x1E	; 30
>>>>>>> main
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 3e       	cpi	r26, 0xEE	; 238
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	21 e0       	ldi	r18, 0x01	; 1
      78:	ae ee       	ldi	r26, 0xEE	; 238
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ac 30       	cpi	r26, 0x0C	; 12
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
<<<<<<< HEAD
      86:	0e 94 1c 04 	call	0x838	; 0x838 <main>
      8a:	0c 94 a4 0e 	jmp	0x1d48	; 0x1d48 <_exit>
=======
      86:	0e 94 4e 04 	call	0x89c	; 0x89c <main>
      8a:	0c 94 30 0f 	jmp	0x1e60	; 0x1e60 <_exit>
>>>>>>> main

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <app_init>:
extern float64_t obstcaleDistance;
extern Uchar8_t moreThan70Flag;

void app_init()
{
	HLCD_vidInit();
      92:	0e 94 52 03 	call	0x6a4	; 0x6a4 <HLCD_vidInit>
	PUSH_BTN_intialize();
      96:	0e 94 db 01 	call	0x3b6	; 0x3b6 <PUSH_BTN_intialize>
	TIMER_TMR2NormalModeInit(ENABLED);
      9a:	80 e0       	ldi	r24, 0x00	; 0
<<<<<<< HEAD
      9c:	0e 94 7b 0a 	call	0x14f6	; 0x14f6 <TIMER_TMR2NormalModeInit>
=======
      9c:	0e 94 07 0b 	call	0x160e	; 0x160e <TIMER_TMR2NormalModeInit>
>>>>>>> main
	ultrasonic_vInit();
      a0:	0e 94 1f 02 	call	0x43e	; 0x43e <ultrasonic_vInit>
      a4:	08 95       	ret

000000a6 <app_main>:
}

void app_main()
{
      a6:	cf 92       	push	r12
      a8:	df 92       	push	r13
      aa:	ef 92       	push	r14
      ac:	ff 92       	push	r15
	switch(state)
      ae:	80 91 f5 00 	lds	r24, 0x00F5	; 0x8000f5 <state>
      b2:	81 30       	cpi	r24, 0x01	; 1
      b4:	71 f0       	breq	.+28     	; 0xd2 <app_main+0x2c>
      b6:	38 f0       	brcs	.+14     	; 0xc6 <app_main+0x20>
      b8:	82 30       	cpi	r24, 0x02	; 2
      ba:	09 f4       	brne	.+2      	; 0xbe <app_main+0x18>
      bc:	62 c0       	rjmp	.+196    	; 0x182 <app_main+0xdc>
      be:	83 30       	cpi	r24, 0x03	; 3
      c0:	09 f4       	brne	.+2      	; 0xc4 <app_main+0x1e>
      c2:	65 c0       	rjmp	.+202    	; 0x18e <app_main+0xe8>
      c4:	6b c0       	rjmp	.+214    	; 0x19c <app_main+0xf6>
	{
		case SET_DEFAULT_ROTATION :
		{
			setDefaultRotation();
      c6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <setDefaultRotation>
			state = CAR_SCANING;
      ca:	81 e0       	ldi	r24, 0x01	; 1
      cc:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <state>
			break;
      d0:	65 c0       	rjmp	.+202    	; 0x19c <app_main+0xf6>
		} 
		case CAR_SCANING :
		{
			ultrasonic_vGetDistance(&obstcaleDistance);
      d2:	8f ee       	ldi	r24, 0xEF	; 239
      d4:	90 e0       	ldi	r25, 0x00	; 0
<<<<<<< HEAD
      d6:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <ultrasonic_vGetDistance>
			HLCD_ClrDisplay();
      da:	0e 94 c0 03 	call	0x780	; 0x780 <HLCD_ClrDisplay>
			HLCD_WriteInt(obstcaleDistance);
      de:	60 91 f1 00 	lds	r22, 0x00F1	; 0x8000f1 <obstcaleDistance>
      e2:	70 91 f2 00 	lds	r23, 0x00F2	; 0x8000f2 <obstcaleDistance+0x1>
      e6:	80 91 f3 00 	lds	r24, 0x00F3	; 0x8000f3 <obstcaleDistance+0x2>
      ea:	90 91 f4 00 	lds	r25, 0x00F4	; 0x8000f4 <obstcaleDistance+0x3>
      ee:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <__fixunssfsi>
      f2:	cb 01       	movw	r24, r22
      f4:	0e 94 ff 03 	call	0x7fe	; 0x7fe <HLCD_WriteInt>
			if(obstcaleDistance > 70)
      f8:	c0 90 f1 00 	lds	r12, 0x00F1	; 0x8000f1 <obstcaleDistance>
      fc:	d0 90 f2 00 	lds	r13, 0x00F2	; 0x8000f2 <obstcaleDistance+0x1>
     100:	e0 90 f3 00 	lds	r14, 0x00F3	; 0x8000f3 <obstcaleDistance+0x2>
     104:	f0 90 f4 00 	lds	r15, 0x00F4	; 0x8000f4 <obstcaleDistance+0x3>
     108:	20 e0       	ldi	r18, 0x00	; 0
     10a:	30 e0       	ldi	r19, 0x00	; 0
     10c:	4c e8       	ldi	r20, 0x8C	; 140
     10e:	52 e4       	ldi	r21, 0x42	; 66
     110:	c7 01       	movw	r24, r14
     112:	b6 01       	movw	r22, r12
     114:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__gesf2>
     118:	18 16       	cp	r1, r24
     11a:	44 f4       	brge	.+16     	; 0x12c <app_main+0x86>
=======
      d6:	0e 94 2a 02 	call	0x454	; 0x454 <ultrasonic_vGetDistance>
			if(obstcaleDistance > 70)
      da:	c0 90 ef 00 	lds	r12, 0x00EF	; 0x8000ef <obstcaleDistance>
      de:	d0 90 f0 00 	lds	r13, 0x00F0	; 0x8000f0 <obstcaleDistance+0x1>
      e2:	e0 90 f1 00 	lds	r14, 0x00F1	; 0x8000f1 <obstcaleDistance+0x2>
      e6:	f0 90 f2 00 	lds	r15, 0x00F2	; 0x8000f2 <obstcaleDistance+0x3>
      ea:	20 e0       	ldi	r18, 0x00	; 0
      ec:	30 e0       	ldi	r19, 0x00	; 0
      ee:	4c e8       	ldi	r20, 0x8C	; 140
      f0:	52 e4       	ldi	r21, 0x42	; 66
      f2:	c7 01       	movw	r24, r14
      f4:	b6 01       	movw	r22, r12
      f6:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <__gesf2>
      fa:	18 16       	cp	r1, r24
      fc:	24 f4       	brge	.+8      	; 0x106 <app_main+0x60>
>>>>>>> main
			{
				state = MORE_THAN_70_CM;
      fe:	82 e0       	ldi	r24, 0x02	; 2
     100:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <state>
     104:	4b c0       	rjmp	.+150    	; 0x19c <app_main+0xf6>
			}
			else if(obstcaleDistance <= 70 && obstcaleDistance > 30)
<<<<<<< HEAD
     12c:	20 e0       	ldi	r18, 0x00	; 0
     12e:	30 e0       	ldi	r19, 0x00	; 0
     130:	4c e8       	ldi	r20, 0x8C	; 140
     132:	52 e4       	ldi	r21, 0x42	; 66
     134:	c7 01       	movw	r24, r14
     136:	b6 01       	movw	r22, r12
     138:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <__cmpsf2>
     13c:	18 16       	cp	r1, r24
     13e:	74 f0       	brlt	.+28     	; 0x15c <app_main+0xb6>
     140:	20 e0       	ldi	r18, 0x00	; 0
     142:	30 e0       	ldi	r19, 0x00	; 0
     144:	40 ef       	ldi	r20, 0xF0	; 240
     146:	51 e4       	ldi	r21, 0x41	; 65
     148:	c7 01       	movw	r24, r14
     14a:	b6 01       	movw	r22, r12
     14c:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__gesf2>
     150:	18 16       	cp	r1, r24
     152:	24 f4       	brge	.+8      	; 0x15c <app_main+0xb6>
=======
     106:	20 e0       	ldi	r18, 0x00	; 0
     108:	30 e0       	ldi	r19, 0x00	; 0
     10a:	4c e8       	ldi	r20, 0x8C	; 140
     10c:	52 e4       	ldi	r21, 0x42	; 66
     10e:	c7 01       	movw	r24, r14
     110:	b6 01       	movw	r22, r12
     112:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__cmpsf2>
     116:	18 16       	cp	r1, r24
     118:	74 f0       	brlt	.+28     	; 0x136 <app_main+0x90>
     11a:	20 e0       	ldi	r18, 0x00	; 0
     11c:	30 e0       	ldi	r19, 0x00	; 0
     11e:	40 ef       	ldi	r20, 0xF0	; 240
     120:	51 e4       	ldi	r21, 0x41	; 65
     122:	c7 01       	movw	r24, r14
     124:	b6 01       	movw	r22, r12
     126:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <__gesf2>
     12a:	18 16       	cp	r1, r24
     12c:	24 f4       	brge	.+8      	; 0x136 <app_main+0x90>
>>>>>>> main
			{
				state = MORE_THAN_30_CM;
     12e:	83 e0       	ldi	r24, 0x03	; 3
     130:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <state>
     134:	33 c0       	rjmp	.+102    	; 0x19c <app_main+0xf6>
			}
			else if(obstcaleDistance <= 30 && obstcaleDistance > 20)
<<<<<<< HEAD
     15c:	20 e0       	ldi	r18, 0x00	; 0
     15e:	30 e0       	ldi	r19, 0x00	; 0
     160:	40 ef       	ldi	r20, 0xF0	; 240
     162:	51 e4       	ldi	r21, 0x41	; 65
     164:	c7 01       	movw	r24, r14
     166:	b6 01       	movw	r22, r12
     168:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <__cmpsf2>
     16c:	18 16       	cp	r1, r24
     16e:	74 f0       	brlt	.+28     	; 0x18c <app_main+0xe6>
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	30 e0       	ldi	r19, 0x00	; 0
     174:	40 ea       	ldi	r20, 0xA0	; 160
     176:	51 e4       	ldi	r21, 0x41	; 65
     178:	c7 01       	movw	r24, r14
     17a:	b6 01       	movw	r22, r12
     17c:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__gesf2>
     180:	18 16       	cp	r1, r24
     182:	24 f4       	brge	.+8      	; 0x18c <app_main+0xe6>
=======
     136:	20 e0       	ldi	r18, 0x00	; 0
     138:	30 e0       	ldi	r19, 0x00	; 0
     13a:	40 ef       	ldi	r20, 0xF0	; 240
     13c:	51 e4       	ldi	r21, 0x41	; 65
     13e:	c7 01       	movw	r24, r14
     140:	b6 01       	movw	r22, r12
     142:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__cmpsf2>
     146:	18 16       	cp	r1, r24
     148:	74 f0       	brlt	.+28     	; 0x166 <app_main+0xc0>
     14a:	20 e0       	ldi	r18, 0x00	; 0
     14c:	30 e0       	ldi	r19, 0x00	; 0
     14e:	40 ea       	ldi	r20, 0xA0	; 160
     150:	51 e4       	ldi	r21, 0x41	; 65
     152:	c7 01       	movw	r24, r14
     154:	b6 01       	movw	r22, r12
     156:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <__gesf2>
     15a:	18 16       	cp	r1, r24
     15c:	24 f4       	brge	.+8      	; 0x166 <app_main+0xc0>
>>>>>>> main
			{
				state = MORE_THAN_20_CM;
     15e:	84 e0       	ldi	r24, 0x04	; 4
     160:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <state>
     164:	1b c0       	rjmp	.+54     	; 0x19c <app_main+0xf6>
			}
			else if(obstcaleDistance < 20)
<<<<<<< HEAD
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	40 ea       	ldi	r20, 0xA0	; 160
     192:	51 e4       	ldi	r21, 0x41	; 65
     194:	c7 01       	movw	r24, r14
     196:	b6 01       	movw	r22, r12
     198:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <__cmpsf2>
     19c:	88 23       	and	r24, r24
     19e:	44 f4       	brge	.+16     	; 0x1b0 <app_main+0x10a>
=======
     166:	20 e0       	ldi	r18, 0x00	; 0
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	40 ea       	ldi	r20, 0xA0	; 160
     16c:	51 e4       	ldi	r21, 0x41	; 65
     16e:	c7 01       	movw	r24, r14
     170:	b6 01       	movw	r22, r12
     172:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__cmpsf2>
     176:	88 23       	and	r24, r24
     178:	8c f4       	brge	.+34     	; 0x19c <app_main+0xf6>
>>>>>>> main
			{
				state = LESS_THAN_20_CM;
<<<<<<< HEAD
     1a8:	85 e0       	ldi	r24, 0x05	; 5
     1aa:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <state>
     1ae:	10 c0       	rjmp	.+32     	; 0x1d0 <app_main+0x12a>
			}
			else
			{
				HLCD_WriteInt(obstcaleDistance);
     1b0:	c7 01       	movw	r24, r14
     1b2:	b6 01       	movw	r22, r12
     1b4:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <__fixunssfsi>
     1b8:	cb 01       	movw	r24, r22
     1ba:	0e 94 ff 03 	call	0x7fe	; 0x7fe <HLCD_WriteInt>
     1be:	08 c0       	rjmp	.+16     	; 0x1d0 <app_main+0x12a>
			}
=======
     17a:	85 e0       	ldi	r24, 0x05	; 5
     17c:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <state>
     180:	0d c0       	rjmp	.+26     	; 0x19c <app_main+0xf6>
			
>>>>>>> main
			break;
		}
		case MORE_THAN_70_CM :
		{
			obstcaleMoreThan70();
     182:	0e 94 95 01 	call	0x32a	; 0x32a <obstcaleMoreThan70>
			state = CAR_SCANING;
     186:	81 e0       	ldi	r24, 0x01	; 1
     188:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <state>
			break;
     18c:	07 c0       	rjmp	.+14     	; 0x19c <app_main+0xf6>
		}
		case MORE_THAN_30_CM:
		{
			moreThan70Flag = 0;
     18e:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__data_end>
			obstcaleMoreThan30();
     192:	0e 94 ce 01 	call	0x39c	; 0x39c <obstcaleMoreThan30>
			state = CAR_SCANING;
     196:	81 e0       	ldi	r24, 0x01	; 1
     198:	80 93 f5 00 	sts	0x00F5, r24	; 0x8000f5 <state>
			break;
		}
	}
     19c:	ff 90       	pop	r15
     19e:	ef 90       	pop	r14
     1a0:	df 90       	pop	r13
     1a2:	cf 90       	pop	r12
     1a4:	08 95       	ret

000001a6 <setDefaultRotation>:


void setDefaultRotation()
{
	
	HLCD_gotoXY(0,0);
     1a6:	60 e0       	ldi	r22, 0x00	; 0
     1a8:	80 e0       	ldi	r24, 0x00	; 0
     1aa:	0e 94 05 04 	call	0x80a	; 0x80a <HLCD_gotoXY>
	HLCD_WriteString("Set Def. Rot.");
     1ae:	8d e8       	ldi	r24, 0x8D	; 141
     1b0:	90 e0       	ldi	r25, 0x00	; 0
     1b2:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
	HLCD_gotoXY(1,0);
     1b6:	60 e0       	ldi	r22, 0x00	; 0
     1b8:	81 e0       	ldi	r24, 0x01	; 1
     1ba:	0e 94 05 04 	call	0x80a	; 0x80a <HLCD_gotoXY>
	HLCD_WriteString("Right");
     1be:	8b e9       	ldi	r24, 0x9B	; 155
     1c0:	90 e0       	ldi	r25, 0x00	; 0
     1c2:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
	TMR_intDelay_ms(5000);
<<<<<<< HEAD
     1fa:	88 e8       	ldi	r24, 0x88	; 136
     1fc:	93 e1       	ldi	r25, 0x13	; 19
     1fe:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <TMR_intDelay_ms>
=======
     1c6:	88 e8       	ldi	r24, 0x88	; 136
     1c8:	93 e1       	ldi	r25, 0x13	; 19
     1ca:	0e 94 8b 0b 	call	0x1716	; 0x1716 <TMR_intDelay_ms>
>>>>>>> main
	while(u8_g_timeOut != 1)
     1ce:	35 c0       	rjmp	.+106    	; 0x23a <setDefaultRotation+0x94>
	{
		PUSH_BTN_read_state(0,&rotationBtnState);
     1d0:	63 ef       	ldi	r22, 0xF3	; 243
     1d2:	70 e0       	ldi	r23, 0x00	; 0
     1d4:	80 e0       	ldi	r24, 0x00	; 0
     1d6:	0e 94 de 01 	call	0x3bc	; 0x3bc <PUSH_BTN_read_state>
		if(rotationBtnState == PUSH_BTN_STATE_RELEASED)
     1da:	80 91 f3 00 	lds	r24, 0x00F3	; 0x8000f3 <rotationBtnState>
     1de:	81 30       	cpi	r24, 0x01	; 1
     1e0:	61 f5       	brne	.+88     	; 0x23a <setDefaultRotation+0x94>
     1e2:	05 c0       	rjmp	.+10     	; 0x1ee <setDefaultRotation+0x48>
		{
			while(rotationBtnState == PUSH_BTN_STATE_RELEASED)
			{
				PUSH_BTN_read_state(0,&rotationBtnState);
     1e4:	63 ef       	ldi	r22, 0xF3	; 243
     1e6:	70 e0       	ldi	r23, 0x00	; 0
     1e8:	80 e0       	ldi	r24, 0x00	; 0
     1ea:	0e 94 de 01 	call	0x3bc	; 0x3bc <PUSH_BTN_read_state>
	while(u8_g_timeOut != 1)
	{
		PUSH_BTN_read_state(0,&rotationBtnState);
		if(rotationBtnState == PUSH_BTN_STATE_RELEASED)
		{
			while(rotationBtnState == PUSH_BTN_STATE_RELEASED)
     1ee:	80 91 f3 00 	lds	r24, 0x00F3	; 0x8000f3 <rotationBtnState>
     1f2:	81 30       	cpi	r24, 0x01	; 1
     1f4:	b9 f3       	breq	.-18     	; 0x1e4 <setDefaultRotation+0x3e>
			{
				PUSH_BTN_read_state(0,&rotationBtnState);
			}
			if(rotationFlag == 0)
     1f6:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <rotationFlag>
     1fa:	81 11       	cpse	r24, r1
     1fc:	0f c0       	rjmp	.+30     	; 0x21c <setDefaultRotation+0x76>
			{
				rotationFlag = 1;
     1fe:	81 e0       	ldi	r24, 0x01	; 1
     200:	80 93 f4 00 	sts	0x00F4, r24	; 0x8000f4 <rotationFlag>
				rotation = DIRECTION_L;
     204:	82 e0       	ldi	r24, 0x02	; 2
     206:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				HLCD_gotoXY(1,0);
     20a:	60 e0       	ldi	r22, 0x00	; 0
     20c:	81 e0       	ldi	r24, 0x01	; 1
     20e:	0e 94 05 04 	call	0x80a	; 0x80a <HLCD_gotoXY>
				HLCD_WriteString("Left ");
     212:	81 ea       	ldi	r24, 0xA1	; 161
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
     21a:	0f c0       	rjmp	.+30     	; 0x23a <setDefaultRotation+0x94>
				
			}
			else if(rotationFlag == 1)
     21c:	81 30       	cpi	r24, 0x01	; 1
     21e:	69 f4       	brne	.+26     	; 0x23a <setDefaultRotation+0x94>
			{
				rotationFlag = 0;
     220:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <rotationFlag>
				rotation = DIRECTION_R;
     224:	83 e0       	ldi	r24, 0x03	; 3
     226:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
				HLCD_gotoXY(1,0);
     22a:	60 e0       	ldi	r22, 0x00	; 0
     22c:	81 e0       	ldi	r24, 0x01	; 1
     22e:	0e 94 05 04 	call	0x80a	; 0x80a <HLCD_gotoXY>
				HLCD_WriteString("Right ");
     232:	87 ea       	ldi	r24, 0xA7	; 167
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
	HLCD_gotoXY(0,0);
	HLCD_WriteString("Set Def. Rot.");
	HLCD_gotoXY(1,0);
	HLCD_WriteString("Right");
	TMR_intDelay_ms(5000);
	while(u8_g_timeOut != 1)
     23a:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <u8_g_timeOut>
     23e:	81 30       	cpi	r24, 0x01	; 1
     240:	39 f6       	brne	.-114    	; 0x1d0 <setDefaultRotation+0x2a>
				HLCD_gotoXY(1,0);
				HLCD_WriteString("Right ");
			}
		}
	}
	u8_g_timeOut = 0;
     242:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <u8_g_timeOut>
	TMR_intDelay_ms(2000);
<<<<<<< HEAD
     27a:	80 ed       	ldi	r24, 0xD0	; 208
     27c:	97 e0       	ldi	r25, 0x07	; 7
     27e:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <TMR_intDelay_ms>
=======
     246:	80 ed       	ldi	r24, 0xD0	; 208
     248:	97 e0       	ldi	r25, 0x07	; 7
     24a:	0e 94 8b 0b 	call	0x1716	; 0x1716 <TMR_intDelay_ms>
>>>>>>> main
	while(u8_g_timeOut !=1);
     24e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <u8_g_timeOut>
     252:	81 30       	cpi	r24, 0x01	; 1
     254:	e1 f7       	brne	.-8      	; 0x24e <setDefaultRotation+0xa8>
	u8_g_timeOut = 0;
     256:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <u8_g_timeOut>
     25a:	08 95       	ret

0000025c <LCD_update>:
{
	// motor 30
	LCD_update(SPEED_30,DIRECTION_F,obstcaleDistance);
}
void LCD_update(EN_speed en_a_speed,EN_direction en_a_direction,float64_t f64_a_distance)
{
     25c:	cf 92       	push	r12
     25e:	df 92       	push	r13
     260:	ef 92       	push	r14
     262:	ff 92       	push	r15
     264:	cf 93       	push	r28
     266:	df 93       	push	r29
     268:	d8 2f       	mov	r29, r24
     26a:	c6 2f       	mov	r28, r22
     26c:	69 01       	movw	r12, r18
     26e:	7a 01       	movw	r14, r20
	
	
	HLCD_gotoXY(0,0);
     270:	60 e0       	ldi	r22, 0x00	; 0
     272:	80 e0       	ldi	r24, 0x00	; 0
     274:	0e 94 05 04 	call	0x80a	; 0x80a <HLCD_gotoXY>
	HLCD_WriteString("Speed:");
     278:	8e ea       	ldi	r24, 0xAE	; 174
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
	HLCD_gotoXY(0,7);
     280:	67 e0       	ldi	r22, 0x07	; 7
     282:	80 e0       	ldi	r24, 0x00	; 0
     284:	0e 94 05 04 	call	0x80a	; 0x80a <HLCD_gotoXY>
	if(en_a_speed == SPEED_0 )
     288:	d1 11       	cpse	r29, r1
     28a:	05 c0       	rjmp	.+10     	; 0x296 <LCD_update+0x3a>
	{
		HLCD_WriteString("00% ");
     28c:	85 eb       	ldi	r24, 0xB5	; 181
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
     294:	0b c0       	rjmp	.+22     	; 0x2ac <LCD_update+0x50>
	}
	else if (en_a_speed == SPEED_30)
     296:	d1 30       	cpi	r29, 0x01	; 1
     298:	29 f4       	brne	.+10     	; 0x2a4 <LCD_update+0x48>
	{
		HLCD_WriteString("30% ");
     29a:	8a eb       	ldi	r24, 0xBA	; 186
     29c:	90 e0       	ldi	r25, 0x00	; 0
     29e:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
     2a2:	04 c0       	rjmp	.+8      	; 0x2ac <LCD_update+0x50>
	}
	else 
	{
		HLCD_WriteString("50% ");
     2a4:	8f eb       	ldi	r24, 0xBF	; 191
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
	}
	HLCD_gotoXY(0,11);
     2ac:	6b e0       	ldi	r22, 0x0B	; 11
     2ae:	80 e0       	ldi	r24, 0x00	; 0
     2b0:	0e 94 05 04 	call	0x80a	; 0x80a <HLCD_gotoXY>
	HLCD_WriteString("Dir: ");
     2b4:	84 ec       	ldi	r24, 0xC4	; 196
     2b6:	90 e0       	ldi	r25, 0x00	; 0
     2b8:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
	
	if(en_a_direction == DIRECTION_F)
     2bc:	c1 11       	cpse	r28, r1
     2be:	05 c0       	rjmp	.+10     	; 0x2ca <LCD_update+0x6e>
	{
		HLCD_WriteString("F");
     2c0:	8a ec       	ldi	r24, 0xCA	; 202
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
     2c8:	12 c0       	rjmp	.+36     	; 0x2ee <LCD_update+0x92>
	}
	else if(en_a_direction == DIRECTION_B)
     2ca:	c1 30       	cpi	r28, 0x01	; 1
     2cc:	29 f4       	brne	.+10     	; 0x2d8 <LCD_update+0x7c>
	{
		HLCD_WriteString("B");
     2ce:	8c ec       	ldi	r24, 0xCC	; 204
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
     2d6:	0b c0       	rjmp	.+22     	; 0x2ee <LCD_update+0x92>
	}
	else if(en_a_direction == DIRECTION_R)
     2d8:	c3 30       	cpi	r28, 0x03	; 3
     2da:	29 f4       	brne	.+10     	; 0x2e6 <LCD_update+0x8a>
	{
		HLCD_WriteString("R");
     2dc:	8e ec       	ldi	r24, 0xCE	; 206
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
     2e4:	04 c0       	rjmp	.+8      	; 0x2ee <LCD_update+0x92>
	}
    else
	{
		HLCD_WriteString("L");
     2e6:	80 ed       	ldi	r24, 0xD0	; 208
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
	}
	
	HLCD_gotoXY(1,0);
     2ee:	60 e0       	ldi	r22, 0x00	; 0
     2f0:	81 e0       	ldi	r24, 0x01	; 1
     2f2:	0e 94 05 04 	call	0x80a	; 0x80a <HLCD_gotoXY>
	HLCD_WriteString("Dist:");
     2f6:	82 ed       	ldi	r24, 0xD2	; 210
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
	HLCD_gotoXY(1,5);
<<<<<<< HEAD
     2c4:	65 e0       	ldi	r22, 0x05	; 5
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <HLCD_gotoXY>
	HLCD_WriteInt(obstcaleDistance);
     2cc:	60 91 f1 00 	lds	r22, 0x00F1	; 0x8000f1 <obstcaleDistance>
     2d0:	70 91 f2 00 	lds	r23, 0x00F2	; 0x8000f2 <obstcaleDistance+0x1>
     2d4:	80 91 f3 00 	lds	r24, 0x00F3	; 0x8000f3 <obstcaleDistance+0x2>
     2d8:	90 91 f4 00 	lds	r25, 0x00F4	; 0x8000f4 <obstcaleDistance+0x3>
     2dc:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <__fixunssfsi>
     2e0:	cb 01       	movw	r24, r22
     2e2:	0e 94 ff 03 	call	0x7fe	; 0x7fe <HLCD_WriteInt>
=======
     2fe:	65 e0       	ldi	r22, 0x05	; 5
     300:	81 e0       	ldi	r24, 0x01	; 1
     302:	0e 94 05 04 	call	0x80a	; 0x80a <HLCD_gotoXY>
	HLCD_WriteInt(f64_a_distance);
     306:	c7 01       	movw	r24, r14
     308:	b6 01       	movw	r22, r12
     30a:	0e 94 67 0d 	call	0x1ace	; 0x1ace <__fixunssfsi>
     30e:	cb 01       	movw	r24, r22
     310:	0e 94 31 04 	call	0x862	; 0x862 <HLCD_WriteInt>
>>>>>>> main
	HLCD_WriteString(" Cm");
     314:	88 ed       	ldi	r24, 0xD8	; 216
     316:	90 e0       	ldi	r25, 0x00	; 0
     318:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
	
     31c:	df 91       	pop	r29
     31e:	cf 91       	pop	r28
     320:	ff 90       	pop	r15
     322:	ef 90       	pop	r14
     324:	df 90       	pop	r13
     326:	cf 90       	pop	r12
     328:	08 95       	ret

0000032a <obstcaleMoreThan70>:


void obstcaleMoreThan70()
{
	
	if(moreThan70Flag == 0)
     32a:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__data_end>
     32e:	81 11       	cpse	r24, r1
     330:	13 c0       	rjmp	.+38     	; 0x358 <obstcaleMoreThan70+0x2e>
	{
		moreThan70Flag = 1;
     332:	81 e0       	ldi	r24, 0x01	; 1
     334:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__data_end>
		//start motor 30;
		LCD_update(SPEED_30,DIRECTION_F,obstcaleDistance);
     338:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <obstcaleDistance>
     33c:	30 91 f0 00 	lds	r19, 0x00F0	; 0x8000f0 <obstcaleDistance+0x1>
     340:	40 91 f1 00 	lds	r20, 0x00F1	; 0x8000f1 <obstcaleDistance+0x2>
     344:	50 91 f2 00 	lds	r21, 0x00F2	; 0x8000f2 <obstcaleDistance+0x3>
     348:	60 e0       	ldi	r22, 0x00	; 0
     34a:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_update>
		TMR_intDelay_ms(5000);
<<<<<<< HEAD
     30c:	88 e8       	ldi	r24, 0x88	; 136
     30e:	93 e1       	ldi	r25, 0x13	; 19
     310:	0e 94 ff 0a 	call	0x15fe	; 0x15fe <TMR_intDelay_ms>
     314:	08 95       	ret
=======
     34e:	88 e8       	ldi	r24, 0x88	; 136
     350:	93 e1       	ldi	r25, 0x13	; 19
     352:	0e 94 8b 0b 	call	0x1716	; 0x1716 <TMR_intDelay_ms>
     356:	08 95       	ret
		
>>>>>>> main
	}
	else if(moreThan70Flag == 1 && u8_g_timeOut == 1)
     358:	81 30       	cpi	r24, 0x01	; 1
     35a:	99 f4       	brne	.+38     	; 0x382 <obstcaleMoreThan70+0x58>
     35c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <u8_g_timeOut>
     360:	81 30       	cpi	r24, 0x01	; 1
     362:	79 f4       	brne	.+30     	; 0x382 <obstcaleMoreThan70+0x58>
	{
		//motor 50
		LCD_update(SPEED_50,DIRECTION_F,obstcaleDistance);
     364:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <obstcaleDistance>
     368:	30 91 f0 00 	lds	r19, 0x00F0	; 0x8000f0 <obstcaleDistance+0x1>
     36c:	40 91 f1 00 	lds	r20, 0x00F1	; 0x8000f1 <obstcaleDistance+0x2>
     370:	50 91 f2 00 	lds	r21, 0x00F2	; 0x8000f2 <obstcaleDistance+0x3>
     374:	60 e0       	ldi	r22, 0x00	; 0
     376:	82 e0       	ldi	r24, 0x02	; 2
     378:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_update>
		u8_g_timeOut =0;
     37c:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <u8_g_timeOut>
     380:	08 95       	ret
	}
 
      else LCD_update(SPEED_50,DIRECTION_F,obstcaleDistance);
     382:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <obstcaleDistance>
     386:	30 91 f0 00 	lds	r19, 0x00F0	; 0x8000f0 <obstcaleDistance+0x1>
     38a:	40 91 f1 00 	lds	r20, 0x00F1	; 0x8000f1 <obstcaleDistance+0x2>
     38e:	50 91 f2 00 	lds	r21, 0x00F2	; 0x8000f2 <obstcaleDistance+0x3>
     392:	60 e0       	ldi	r22, 0x00	; 0
     394:	82 e0       	ldi	r24, 0x02	; 2
     396:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_update>
     39a:	08 95       	ret

0000039c <obstcaleMoreThan30>:
}

void obstcaleMoreThan30()
{
	// motor 30
	LCD_update(SPEED_30,DIRECTION_F,obstcaleDistance);
     39c:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <obstcaleDistance>
     3a0:	30 91 f0 00 	lds	r19, 0x00F0	; 0x8000f0 <obstcaleDistance+0x1>
     3a4:	40 91 f1 00 	lds	r20, 0x00F1	; 0x8000f1 <obstcaleDistance+0x2>
     3a8:	50 91 f2 00 	lds	r21, 0x00F2	; 0x8000f2 <obstcaleDistance+0x3>
     3ac:	60 e0       	ldi	r22, 0x00	; 0
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	0e 94 2e 01 	call	0x25c	; 0x25c <LCD_update>
     3b4:	08 95       	ret

000003b6 <PUSH_BTN_intialize>:
     3b6:	0e 94 53 04 	call	0x8a6	; 0x8a6 <DIO_Init>
     3ba:	08 95       	ret

000003bc <PUSH_BTN_read_state>:
     3bc:	ef 92       	push	r14
     3be:	ff 92       	push	r15
     3c0:	0f 93       	push	r16
     3c2:	1f 93       	push	r17
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	1f 92       	push	r1
     3ca:	cd b7       	in	r28, 0x3d	; 61
     3cc:	de b7       	in	r29, 0x3e	; 62
     3ce:	7b 01       	movw	r14, r22
     3d0:	91 e0       	ldi	r25, 0x01	; 1
     3d2:	99 83       	std	Y+1, r25	; 0x01
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	8c 01       	movw	r16, r24
     3d8:	00 0f       	add	r16, r16
     3da:	11 1f       	adc	r17, r17
     3dc:	00 0f       	add	r16, r16
     3de:	11 1f       	adc	r17, r17
     3e0:	00 0f       	add	r16, r16
     3e2:	11 1f       	adc	r17, r17
     3e4:	08 1b       	sub	r16, r24
     3e6:	19 0b       	sbc	r17, r25
     3e8:	04 52       	subi	r16, 0x24	; 36
     3ea:	1f 4f       	sbci	r17, 0xFF	; 255
     3ec:	ae 01       	movw	r20, r28
     3ee:	4f 5f       	subi	r20, 0xFF	; 255
     3f0:	5f 4f       	sbci	r21, 0xFF	; 255
     3f2:	f8 01       	movw	r30, r16
     3f4:	61 81       	ldd	r22, Z+1	; 0x01
     3f6:	80 81       	ld	r24, Z
     3f8:	0e 94 69 07 	call	0xed2	; 0xed2 <DIO_read>
     3fc:	f8 01       	movw	r30, r16
     3fe:	86 81       	ldd	r24, Z+6	; 0x06
     400:	81 11       	cpse	r24, r1
     402:	0a c0       	rjmp	.+20     	; 0x418 <__EEPROM_REGION_LENGTH__+0x18>
     404:	89 81       	ldd	r24, Y+1	; 0x01
     406:	81 11       	cpse	r24, r1
     408:	04 c0       	rjmp	.+8      	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
     40a:	81 e0       	ldi	r24, 0x01	; 1
     40c:	f7 01       	movw	r30, r14
     40e:	80 83       	st	Z, r24
     410:	0e c0       	rjmp	.+28     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     412:	f7 01       	movw	r30, r14
     414:	10 82       	st	Z, r1
     416:	0b c0       	rjmp	.+22     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     418:	81 30       	cpi	r24, 0x01	; 1
     41a:	49 f4       	brne	.+18     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     41c:	89 81       	ldd	r24, Y+1	; 0x01
     41e:	81 11       	cpse	r24, r1
     420:	03 c0       	rjmp	.+6      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
     422:	f7 01       	movw	r30, r14
     424:	10 82       	st	Z, r1
     426:	03 c0       	rjmp	.+6      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     428:	81 e0       	ldi	r24, 0x01	; 1
     42a:	f7 01       	movw	r30, r14
     42c:	80 83       	st	Z, r24
     42e:	0f 90       	pop	r0
     430:	df 91       	pop	r29
     432:	cf 91       	pop	r28
     434:	1f 91       	pop	r17
     436:	0f 91       	pop	r16
     438:	ff 90       	pop	r15
     43a:	ef 90       	pop	r14
     43c:	08 95       	ret

0000043e <ultrasonic_vInit>:
};

void ultrasonic_vInit()
{
	
	DIO_Initpin(&(ultra.echopin));
     43e:	86 e6       	ldi	r24, 0x66	; 102
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	0e 94 9d 07 	call	0xf3a	; 0xf3a <DIO_Initpin>
	DIO_Initpin(&(ultra.triggerpin));
     446:	81 e6       	ldi	r24, 0x61	; 97
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	0e 94 9d 07 	call	0xf3a	; 0xf3a <DIO_Initpin>
	MCU_vEnableInterrupt();
<<<<<<< HEAD
     3d0:	0e 94 14 0a 	call	0x1428	; 0x1428 <MCU_vEnableInterrupt>
     3d4:	08 95       	ret
=======
     44e:	0e 94 a0 0a 	call	0x1540	; 0x1540 <MCU_vEnableInterrupt>
     452:	08 95       	ret
>>>>>>> main

00000454 <ultrasonic_vGetDistance>:
}

void ultrasonic_vGetDistance(float64_t *Copy_f64distance)
{
     454:	0f 93       	push	r16
     456:	1f 93       	push	r17
     458:	cf 93       	push	r28
     45a:	df 93       	push	r29
     45c:	00 d0       	rcall	.+0      	; 0x45e <ultrasonic_vGetDistance+0xa>
     45e:	cd b7       	in	r28, 0x3d	; 61
     460:	de b7       	in	r29, 0x3e	; 62
     462:	8c 01       	movw	r16, r24
	Uint32_t val = 0;
     464:	1a 82       	std	Y+2, r1	; 0x02
     466:	19 82       	std	Y+1, r1	; 0x01
	DIO_WritePin(DIO_PORTD,DIO_PIN1,DIO_HIGH);
     468:	40 e0       	ldi	r20, 0x00	; 0
     46a:	61 e0       	ldi	r22, 0x01	; 1
     46c:	83 e0       	ldi	r24, 0x03	; 3
     46e:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <DIO_WritePin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     472:	83 ec       	ldi	r24, 0xC3	; 195
     474:	99 e0       	ldi	r25, 0x09	; 9
     476:	01 97       	sbiw	r24, 0x01	; 1
     478:	f1 f7       	brne	.-4      	; 0x476 <ultrasonic_vGetDistance+0x22>
     47a:	00 c0       	rjmp	.+0      	; 0x47c <ultrasonic_vGetDistance+0x28>
     47c:	00 00       	nop
	_delay_ms(10);
	DIO_WritePin(DIO_PORTD,DIO_PIN1,DIO_LOW);
     47e:	41 e0       	ldi	r20, 0x01	; 1
     480:	61 e0       	ldi	r22, 0x01	; 1
     482:	83 e0       	ldi	r24, 0x03	; 3
     484:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <DIO_WritePin>
	ICU_RisingEdgeCapture();
<<<<<<< HEAD
     40a:	0e 94 94 09 	call	0x1328	; 0x1328 <ICU_RisingEdgeCapture>
=======
     488:	0e 94 20 0a 	call	0x1440	; 0x1440 <ICU_RisingEdgeCapture>
>>>>>>> main

	
	while(ICU_g_flag != 1);
     48c:	80 91 f8 00 	lds	r24, 0x00F8	; 0x8000f8 <ICU_g_flag>
     490:	81 30       	cpi	r24, 0x01	; 1
     492:	e1 f7       	brne	.-8      	; 0x48c <ultrasonic_vGetDistance+0x38>
	ICU_getValue(&val);
<<<<<<< HEAD
     416:	ce 01       	movw	r24, r28
     418:	01 96       	adiw	r24, 0x01	; 1
     41a:	0e 94 d8 08 	call	0x11b0	; 0x11b0 <ICU_getValue>
	
	*Copy_f64distance = val / 466.47;	
     41e:	69 81       	ldd	r22, Y+1	; 0x01
     420:	7a 81       	ldd	r23, Y+2	; 0x02
     422:	80 e0       	ldi	r24, 0x00	; 0
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <__floatunsisf>
     42a:	29 e2       	ldi	r18, 0x29	; 41
     42c:	3c e3       	ldi	r19, 0x3C	; 60
     42e:	49 ee       	ldi	r20, 0xE9	; 233
     430:	53 e4       	ldi	r21, 0x43	; 67
     432:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <__divsf3>
     436:	f8 01       	movw	r30, r16
     438:	60 83       	st	Z, r22
     43a:	71 83       	std	Z+1, r23	; 0x01
     43c:	82 83       	std	Z+2, r24	; 0x02
     43e:	93 83       	std	Z+3, r25	; 0x03
=======
     494:	ce 01       	movw	r24, r28
     496:	01 96       	adiw	r24, 0x01	; 1
     498:	0e 94 0a 09 	call	0x1214	; 0x1214 <ICU_getValue>
   
	*Copy_f64distance = (float)val / 466.47*8;	
     49c:	69 81       	ldd	r22, Y+1	; 0x01
     49e:	7a 81       	ldd	r23, Y+2	; 0x02
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <__floatunsisf>
     4a8:	29 e2       	ldi	r18, 0x29	; 41
     4aa:	3c e3       	ldi	r19, 0x3C	; 60
     4ac:	49 ee       	ldi	r20, 0xE9	; 233
     4ae:	53 e4       	ldi	r21, 0x43	; 67
     4b0:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <__divsf3>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	30 e0       	ldi	r19, 0x00	; 0
     4b8:	40 e0       	ldi	r20, 0x00	; 0
     4ba:	51 e4       	ldi	r21, 0x41	; 65
     4bc:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <__mulsf3>
     4c0:	f8 01       	movw	r30, r16
     4c2:	60 83       	st	Z, r22
     4c4:	71 83       	std	Z+1, r23	; 0x01
     4c6:	82 83       	std	Z+2, r24	; 0x02
     4c8:	93 83       	std	Z+3, r25	; 0x03
>>>>>>> main
	ICU_g_flag = 0;
     4ca:	10 92 f8 00 	sts	0x00F8, r1	; 0x8000f8 <ICU_g_flag>
}
     4ce:	0f 90       	pop	r0
     4d0:	0f 90       	pop	r0
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	08 95       	ret

000004dc <DIO_s8SETPinDir>:
     4dc:	80 32       	cpi	r24, 0x20	; 32
     4de:	c0 f5       	brcc	.+112    	; 0x550 <DIO_s8SETPinDir+0x74>
     4e0:	62 30       	cpi	r22, 0x02	; 2
     4e2:	c0 f5       	brcc	.+112    	; 0x554 <DIO_s8SETPinDir+0x78>
     4e4:	e8 2f       	mov	r30, r24
     4e6:	e6 95       	lsr	r30
     4e8:	e6 95       	lsr	r30
     4ea:	e6 95       	lsr	r30
     4ec:	87 70       	andi	r24, 0x07	; 7
     4ee:	61 11       	cpse	r22, r1
     4f0:	17 c0       	rjmp	.+46     	; 0x520 <DIO_s8SETPinDir+0x44>
     4f2:	f0 e0       	ldi	r31, 0x00	; 0
     4f4:	ee 0f       	add	r30, r30
     4f6:	ff 1f       	adc	r31, r31
     4f8:	e5 59       	subi	r30, 0x95	; 149
     4fa:	ff 4f       	sbci	r31, 0xFF	; 255
     4fc:	01 90       	ld	r0, Z+
     4fe:	f0 81       	ld	r31, Z
     500:	e0 2d       	mov	r30, r0
     502:	40 81       	ld	r20, Z
     504:	21 e0       	ldi	r18, 0x01	; 1
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	b9 01       	movw	r22, r18
     50a:	02 c0       	rjmp	.+4      	; 0x510 <DIO_s8SETPinDir+0x34>
     50c:	66 0f       	add	r22, r22
     50e:	77 1f       	adc	r23, r23
     510:	8a 95       	dec	r24
     512:	e2 f7       	brpl	.-8      	; 0x50c <DIO_s8SETPinDir+0x30>
     514:	cb 01       	movw	r24, r22
     516:	80 95       	com	r24
     518:	84 23       	and	r24, r20
     51a:	80 83       	st	Z, r24
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	08 95       	ret
     520:	61 30       	cpi	r22, 0x01	; 1
     522:	d1 f4       	brne	.+52     	; 0x558 <DIO_s8SETPinDir+0x7c>
     524:	f0 e0       	ldi	r31, 0x00	; 0
     526:	ee 0f       	add	r30, r30
     528:	ff 1f       	adc	r31, r31
     52a:	e5 59       	subi	r30, 0x95	; 149
     52c:	ff 4f       	sbci	r31, 0xFF	; 255
     52e:	01 90       	ld	r0, Z+
     530:	f0 81       	ld	r31, Z
     532:	e0 2d       	mov	r30, r0
     534:	40 81       	ld	r20, Z
     536:	21 e0       	ldi	r18, 0x01	; 1
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	b9 01       	movw	r22, r18
     53c:	02 c0       	rjmp	.+4      	; 0x542 <DIO_s8SETPinDir+0x66>
     53e:	66 0f       	add	r22, r22
     540:	77 1f       	adc	r23, r23
     542:	8a 95       	dec	r24
     544:	e2 f7       	brpl	.-8      	; 0x53e <DIO_s8SETPinDir+0x62>
     546:	cb 01       	movw	r24, r22
     548:	84 2b       	or	r24, r20
     54a:	80 83       	st	Z, r24
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	08 95       	ret
     550:	8f ef       	ldi	r24, 0xFF	; 255
     552:	08 95       	ret
     554:	8f ef       	ldi	r24, 0xFF	; 255
     556:	08 95       	ret
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	08 95       	ret

0000055c <DIO_s8SETPinVal>:
     55c:	80 32       	cpi	r24, 0x20	; 32
     55e:	c0 f5       	brcc	.+112    	; 0x5d0 <DIO_s8SETPinVal+0x74>
     560:	62 30       	cpi	r22, 0x02	; 2
     562:	c0 f5       	brcc	.+112    	; 0x5d4 <DIO_s8SETPinVal+0x78>
     564:	e8 2f       	mov	r30, r24
     566:	e6 95       	lsr	r30
     568:	e6 95       	lsr	r30
     56a:	e6 95       	lsr	r30
     56c:	87 70       	andi	r24, 0x07	; 7
     56e:	61 11       	cpse	r22, r1
     570:	17 c0       	rjmp	.+46     	; 0x5a0 <DIO_s8SETPinVal+0x44>
     572:	f0 e0       	ldi	r31, 0x00	; 0
     574:	ee 0f       	add	r30, r30
     576:	ff 1f       	adc	r31, r31
     578:	ed 58       	subi	r30, 0x8D	; 141
     57a:	ff 4f       	sbci	r31, 0xFF	; 255
     57c:	01 90       	ld	r0, Z+
     57e:	f0 81       	ld	r31, Z
     580:	e0 2d       	mov	r30, r0
     582:	40 81       	ld	r20, Z
     584:	21 e0       	ldi	r18, 0x01	; 1
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	b9 01       	movw	r22, r18
     58a:	02 c0       	rjmp	.+4      	; 0x590 <DIO_s8SETPinVal+0x34>
     58c:	66 0f       	add	r22, r22
     58e:	77 1f       	adc	r23, r23
     590:	8a 95       	dec	r24
     592:	e2 f7       	brpl	.-8      	; 0x58c <DIO_s8SETPinVal+0x30>
     594:	cb 01       	movw	r24, r22
     596:	80 95       	com	r24
     598:	84 23       	and	r24, r20
     59a:	80 83       	st	Z, r24
     59c:	80 e0       	ldi	r24, 0x00	; 0
     59e:	08 95       	ret
     5a0:	61 30       	cpi	r22, 0x01	; 1
     5a2:	d1 f4       	brne	.+52     	; 0x5d8 <DIO_s8SETPinVal+0x7c>
     5a4:	f0 e0       	ldi	r31, 0x00	; 0
     5a6:	ee 0f       	add	r30, r30
     5a8:	ff 1f       	adc	r31, r31
     5aa:	ed 58       	subi	r30, 0x8D	; 141
     5ac:	ff 4f       	sbci	r31, 0xFF	; 255
     5ae:	01 90       	ld	r0, Z+
     5b0:	f0 81       	ld	r31, Z
     5b2:	e0 2d       	mov	r30, r0
     5b4:	40 81       	ld	r20, Z
     5b6:	21 e0       	ldi	r18, 0x01	; 1
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	b9 01       	movw	r22, r18
     5bc:	02 c0       	rjmp	.+4      	; 0x5c2 <DIO_s8SETPinVal+0x66>
     5be:	66 0f       	add	r22, r22
     5c0:	77 1f       	adc	r23, r23
     5c2:	8a 95       	dec	r24
     5c4:	e2 f7       	brpl	.-8      	; 0x5be <DIO_s8SETPinVal+0x62>
     5c6:	cb 01       	movw	r24, r22
     5c8:	84 2b       	or	r24, r20
     5ca:	80 83       	st	Z, r24
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	08 95       	ret
     5d0:	8f ef       	ldi	r24, 0xFF	; 255
     5d2:	08 95       	ret
     5d4:	8f ef       	ldi	r24, 0xFF	; 255
     5d6:	08 95       	ret
     5d8:	80 e0       	ldi	r24, 0x00	; 0
     5da:	08 95       	ret

000005dc <HLCD_vidWritecmd>:
     5dc:	1f 93       	push	r17
     5de:	cf 93       	push	r28
     5e0:	df 93       	push	r29
     5e2:	d8 2f       	mov	r29, r24
     5e4:	60 e0       	ldi	r22, 0x00	; 0
     5e6:	82 e0       	ldi	r24, 0x02	; 2
     5e8:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     5ec:	60 e0       	ldi	r22, 0x00	; 0
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     5f4:	1d 2f       	mov	r17, r29
     5f6:	12 95       	swap	r17
     5f8:	1f 70       	andi	r17, 0x0F	; 15
     5fa:	c0 e0       	ldi	r28, 0x00	; 0
     5fc:	11 c0       	rjmp	.+34     	; 0x620 <HLCD_vidWritecmd+0x44>
     5fe:	ec 2f       	mov	r30, r28
     600:	f0 e0       	ldi	r31, 0x00	; 0
     602:	61 2f       	mov	r22, r17
     604:	70 e0       	ldi	r23, 0x00	; 0
     606:	0c 2e       	mov	r0, r28
     608:	02 c0       	rjmp	.+4      	; 0x60e <HLCD_vidWritecmd+0x32>
     60a:	75 95       	asr	r23
     60c:	67 95       	ror	r22
     60e:	0a 94       	dec	r0
     610:	e2 f7       	brpl	.-8      	; 0x60a <HLCD_vidWritecmd+0x2e>
     612:	61 70       	andi	r22, 0x01	; 1
     614:	e5 58       	subi	r30, 0x85	; 133
     616:	ff 4f       	sbci	r31, 0xFF	; 255
     618:	80 81       	ld	r24, Z
     61a:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     61e:	cf 5f       	subi	r28, 0xFF	; 255
     620:	c4 30       	cpi	r28, 0x04	; 4
     622:	68 f3       	brcs	.-38     	; 0x5fe <HLCD_vidWritecmd+0x22>
     624:	61 e0       	ldi	r22, 0x01	; 1
     626:	83 e0       	ldi	r24, 0x03	; 3
     628:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     62c:	89 ef       	ldi	r24, 0xF9	; 249
     62e:	90 e0       	ldi	r25, 0x00	; 0
     630:	01 97       	sbiw	r24, 0x01	; 1
     632:	f1 f7       	brne	.-4      	; 0x630 <HLCD_vidWritecmd+0x54>
     634:	00 c0       	rjmp	.+0      	; 0x636 <HLCD_vidWritecmd+0x5a>
     636:	00 00       	nop
     638:	60 e0       	ldi	r22, 0x00	; 0
     63a:	83 e0       	ldi	r24, 0x03	; 3
     63c:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     640:	92 e4       	ldi	r25, 0x42	; 66
     642:	9a 95       	dec	r25
     644:	f1 f7       	brne	.-4      	; 0x642 <HLCD_vidWritecmd+0x66>
     646:	00 c0       	rjmp	.+0      	; 0x648 <HLCD_vidWritecmd+0x6c>
     648:	df 70       	andi	r29, 0x0F	; 15
     64a:	c0 e0       	ldi	r28, 0x00	; 0
     64c:	11 c0       	rjmp	.+34     	; 0x670 <HLCD_vidWritecmd+0x94>
     64e:	ec 2f       	mov	r30, r28
     650:	f0 e0       	ldi	r31, 0x00	; 0
     652:	6d 2f       	mov	r22, r29
     654:	70 e0       	ldi	r23, 0x00	; 0
     656:	0c 2e       	mov	r0, r28
     658:	02 c0       	rjmp	.+4      	; 0x65e <HLCD_vidWritecmd+0x82>
     65a:	75 95       	asr	r23
     65c:	67 95       	ror	r22
     65e:	0a 94       	dec	r0
     660:	e2 f7       	brpl	.-8      	; 0x65a <HLCD_vidWritecmd+0x7e>
     662:	61 70       	andi	r22, 0x01	; 1
     664:	e5 58       	subi	r30, 0x85	; 133
     666:	ff 4f       	sbci	r31, 0xFF	; 255
     668:	80 81       	ld	r24, Z
     66a:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     66e:	cf 5f       	subi	r28, 0xFF	; 255
     670:	c4 30       	cpi	r28, 0x04	; 4
     672:	68 f3       	brcs	.-38     	; 0x64e <HLCD_vidWritecmd+0x72>
     674:	61 e0       	ldi	r22, 0x01	; 1
     676:	83 e0       	ldi	r24, 0x03	; 3
     678:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     67c:	89 ef       	ldi	r24, 0xF9	; 249
     67e:	90 e0       	ldi	r25, 0x00	; 0
     680:	01 97       	sbiw	r24, 0x01	; 1
     682:	f1 f7       	brne	.-4      	; 0x680 <HLCD_vidWritecmd+0xa4>
     684:	00 c0       	rjmp	.+0      	; 0x686 <HLCD_vidWritecmd+0xaa>
     686:	00 00       	nop
     688:	60 e0       	ldi	r22, 0x00	; 0
     68a:	83 e0       	ldi	r24, 0x03	; 3
     68c:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     690:	83 ef       	ldi	r24, 0xF3	; 243
     692:	91 e0       	ldi	r25, 0x01	; 1
     694:	01 97       	sbiw	r24, 0x01	; 1
     696:	f1 f7       	brne	.-4      	; 0x694 <HLCD_vidWritecmd+0xb8>
     698:	00 c0       	rjmp	.+0      	; 0x69a <HLCD_vidWritecmd+0xbe>
     69a:	00 00       	nop
     69c:	df 91       	pop	r29
     69e:	cf 91       	pop	r28
     6a0:	1f 91       	pop	r17
     6a2:	08 95       	ret

000006a4 <HLCD_vidInit>:
     6a4:	cf 93       	push	r28
     6a6:	c0 e0       	ldi	r28, 0x00	; 0
     6a8:	09 c0       	rjmp	.+18     	; 0x6bc <HLCD_vidInit+0x18>
     6aa:	ec 2f       	mov	r30, r28
     6ac:	f0 e0       	ldi	r31, 0x00	; 0
     6ae:	e5 58       	subi	r30, 0x85	; 133
     6b0:	ff 4f       	sbci	r31, 0xFF	; 255
     6b2:	61 e0       	ldi	r22, 0x01	; 1
     6b4:	80 81       	ld	r24, Z
     6b6:	0e 94 6e 02 	call	0x4dc	; 0x4dc <DIO_s8SETPinDir>
     6ba:	cf 5f       	subi	r28, 0xFF	; 255
     6bc:	c4 30       	cpi	r28, 0x04	; 4
     6be:	a8 f3       	brcs	.-22     	; 0x6aa <HLCD_vidInit+0x6>
     6c0:	61 e0       	ldi	r22, 0x01	; 1
     6c2:	81 e0       	ldi	r24, 0x01	; 1
     6c4:	0e 94 6e 02 	call	0x4dc	; 0x4dc <DIO_s8SETPinDir>
     6c8:	61 e0       	ldi	r22, 0x01	; 1
     6ca:	82 e0       	ldi	r24, 0x02	; 2
     6cc:	0e 94 6e 02 	call	0x4dc	; 0x4dc <DIO_s8SETPinDir>
     6d0:	61 e0       	ldi	r22, 0x01	; 1
     6d2:	83 e0       	ldi	r24, 0x03	; 3
     6d4:	0e 94 6e 02 	call	0x4dc	; 0x4dc <DIO_s8SETPinDir>
     6d8:	8f e0       	ldi	r24, 0x0F	; 15
     6da:	97 e2       	ldi	r25, 0x27	; 39
     6dc:	01 97       	sbiw	r24, 0x01	; 1
     6de:	f1 f7       	brne	.-4      	; 0x6dc <HLCD_vidInit+0x38>
     6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <HLCD_vidInit+0x3e>
     6e2:	00 00       	nop
     6e4:	82 e0       	ldi	r24, 0x02	; 2
     6e6:	0e 94 ee 02 	call	0x5dc	; 0x5dc <HLCD_vidWritecmd>
     6ea:	89 ef       	ldi	r24, 0xF9	; 249
     6ec:	90 e0       	ldi	r25, 0x00	; 0
     6ee:	01 97       	sbiw	r24, 0x01	; 1
     6f0:	f1 f7       	brne	.-4      	; 0x6ee <HLCD_vidInit+0x4a>
     6f2:	00 c0       	rjmp	.+0      	; 0x6f4 <HLCD_vidInit+0x50>
     6f4:	00 00       	nop
     6f6:	88 e2       	ldi	r24, 0x28	; 40
     6f8:	0e 94 ee 02 	call	0x5dc	; 0x5dc <HLCD_vidWritecmd>
     6fc:	89 ef       	ldi	r24, 0xF9	; 249
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	01 97       	sbiw	r24, 0x01	; 1
     702:	f1 f7       	brne	.-4      	; 0x700 <HLCD_vidInit+0x5c>
     704:	00 c0       	rjmp	.+0      	; 0x706 <HLCD_vidInit+0x62>
     706:	00 00       	nop
     708:	81 e0       	ldi	r24, 0x01	; 1
     70a:	0e 94 ee 02 	call	0x5dc	; 0x5dc <HLCD_vidWritecmd>
     70e:	87 ee       	ldi	r24, 0xE7	; 231
     710:	93 e0       	ldi	r25, 0x03	; 3
     712:	01 97       	sbiw	r24, 0x01	; 1
     714:	f1 f7       	brne	.-4      	; 0x712 <HLCD_vidInit+0x6e>
     716:	00 c0       	rjmp	.+0      	; 0x718 <HLCD_vidInit+0x74>
     718:	00 00       	nop
     71a:	86 e0       	ldi	r24, 0x06	; 6
     71c:	0e 94 ee 02 	call	0x5dc	; 0x5dc <HLCD_vidWritecmd>
     720:	89 ef       	ldi	r24, 0xF9	; 249
     722:	90 e0       	ldi	r25, 0x00	; 0
     724:	01 97       	sbiw	r24, 0x01	; 1
     726:	f1 f7       	brne	.-4      	; 0x724 <HLCD_vidInit+0x80>
     728:	00 c0       	rjmp	.+0      	; 0x72a <HLCD_vidInit+0x86>
     72a:	00 00       	nop
     72c:	8c e0       	ldi	r24, 0x0C	; 12
     72e:	0e 94 ee 02 	call	0x5dc	; 0x5dc <HLCD_vidWritecmd>
     732:	89 ef       	ldi	r24, 0xF9	; 249
     734:	90 e0       	ldi	r25, 0x00	; 0
     736:	01 97       	sbiw	r24, 0x01	; 1
     738:	f1 f7       	brne	.-4      	; 0x736 <HLCD_vidInit+0x92>
     73a:	00 c0       	rjmp	.+0      	; 0x73c <HLCD_vidInit+0x98>
     73c:	00 00       	nop
     73e:	cf 91       	pop	r28
     740:	08 95       	ret

00000742 <HLCD_vidWriteChar>:
     742:	1f 93       	push	r17
     744:	cf 93       	push	r28
     746:	df 93       	push	r29
     748:	d8 2f       	mov	r29, r24
     74a:	60 e0       	ldi	r22, 0x00	; 0
     74c:	82 e0       	ldi	r24, 0x02	; 2
     74e:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     752:	61 e0       	ldi	r22, 0x01	; 1
     754:	81 e0       	ldi	r24, 0x01	; 1
     756:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     75a:	1d 2f       	mov	r17, r29
     75c:	12 95       	swap	r17
     75e:	1f 70       	andi	r17, 0x0F	; 15
     760:	c0 e0       	ldi	r28, 0x00	; 0
     762:	11 c0       	rjmp	.+34     	; 0x786 <HLCD_vidWriteChar+0x44>
     764:	ec 2f       	mov	r30, r28
     766:	f0 e0       	ldi	r31, 0x00	; 0
     768:	61 2f       	mov	r22, r17
     76a:	70 e0       	ldi	r23, 0x00	; 0
     76c:	0c 2e       	mov	r0, r28
     76e:	02 c0       	rjmp	.+4      	; 0x774 <HLCD_vidWriteChar+0x32>
     770:	75 95       	asr	r23
     772:	67 95       	ror	r22
     774:	0a 94       	dec	r0
     776:	e2 f7       	brpl	.-8      	; 0x770 <HLCD_vidWriteChar+0x2e>
     778:	61 70       	andi	r22, 0x01	; 1
     77a:	e5 58       	subi	r30, 0x85	; 133
     77c:	ff 4f       	sbci	r31, 0xFF	; 255
     77e:	80 81       	ld	r24, Z
     780:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     784:	cf 5f       	subi	r28, 0xFF	; 255
     786:	c4 30       	cpi	r28, 0x04	; 4
     788:	68 f3       	brcs	.-38     	; 0x764 <HLCD_vidWriteChar+0x22>
     78a:	61 e0       	ldi	r22, 0x01	; 1
     78c:	83 e0       	ldi	r24, 0x03	; 3
     78e:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     792:	89 ef       	ldi	r24, 0xF9	; 249
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	01 97       	sbiw	r24, 0x01	; 1
     798:	f1 f7       	brne	.-4      	; 0x796 <HLCD_vidWriteChar+0x54>
     79a:	00 c0       	rjmp	.+0      	; 0x79c <HLCD_vidWriteChar+0x5a>
     79c:	00 00       	nop
     79e:	60 e0       	ldi	r22, 0x00	; 0
     7a0:	83 e0       	ldi	r24, 0x03	; 3
     7a2:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     7a6:	92 e4       	ldi	r25, 0x42	; 66
     7a8:	9a 95       	dec	r25
     7aa:	f1 f7       	brne	.-4      	; 0x7a8 <HLCD_vidWriteChar+0x66>
     7ac:	00 c0       	rjmp	.+0      	; 0x7ae <HLCD_vidWriteChar+0x6c>
     7ae:	df 70       	andi	r29, 0x0F	; 15
     7b0:	c0 e0       	ldi	r28, 0x00	; 0
     7b2:	11 c0       	rjmp	.+34     	; 0x7d6 <HLCD_vidWriteChar+0x94>
     7b4:	ec 2f       	mov	r30, r28
     7b6:	f0 e0       	ldi	r31, 0x00	; 0
     7b8:	6d 2f       	mov	r22, r29
     7ba:	70 e0       	ldi	r23, 0x00	; 0
     7bc:	0c 2e       	mov	r0, r28
     7be:	02 c0       	rjmp	.+4      	; 0x7c4 <HLCD_vidWriteChar+0x82>
     7c0:	75 95       	asr	r23
     7c2:	67 95       	ror	r22
     7c4:	0a 94       	dec	r0
     7c6:	e2 f7       	brpl	.-8      	; 0x7c0 <HLCD_vidWriteChar+0x7e>
     7c8:	61 70       	andi	r22, 0x01	; 1
     7ca:	e5 58       	subi	r30, 0x85	; 133
     7cc:	ff 4f       	sbci	r31, 0xFF	; 255
     7ce:	80 81       	ld	r24, Z
     7d0:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     7d4:	cf 5f       	subi	r28, 0xFF	; 255
     7d6:	c4 30       	cpi	r28, 0x04	; 4
     7d8:	68 f3       	brcs	.-38     	; 0x7b4 <HLCD_vidWriteChar+0x72>
     7da:	61 e0       	ldi	r22, 0x01	; 1
     7dc:	83 e0       	ldi	r24, 0x03	; 3
     7de:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     7e2:	89 ef       	ldi	r24, 0xF9	; 249
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	01 97       	sbiw	r24, 0x01	; 1
     7e8:	f1 f7       	brne	.-4      	; 0x7e6 <HLCD_vidWriteChar+0xa4>
     7ea:	00 c0       	rjmp	.+0      	; 0x7ec <HLCD_vidWriteChar+0xaa>
     7ec:	00 00       	nop
     7ee:	60 e0       	ldi	r22, 0x00	; 0
     7f0:	83 e0       	ldi	r24, 0x03	; 3
     7f2:	0e 94 ae 02 	call	0x55c	; 0x55c <DIO_s8SETPinVal>
     7f6:	83 ef       	ldi	r24, 0xF3	; 243
     7f8:	91 e0       	ldi	r25, 0x01	; 1
     7fa:	01 97       	sbiw	r24, 0x01	; 1
     7fc:	f1 f7       	brne	.-4      	; 0x7fa <HLCD_vidWriteChar+0xb8>
     7fe:	00 c0       	rjmp	.+0      	; 0x800 <__DATA_REGION_LENGTH__>
     800:	00 00       	nop
     802:	df 91       	pop	r29
     804:	cf 91       	pop	r28
     806:	1f 91       	pop	r17
     808:	08 95       	ret

0000080a <HLCD_gotoXY>:
 * 				  pos -> take colom number from 0 ~ 16
 * return		: void
 * */
void HLCD_gotoXY(Uchar8_t row, Uchar8_t pos)
{
	if (row==0 && pos < 16)
     80a:	81 11       	cpse	r24, r1
     80c:	08 c0       	rjmp	.+16     	; 0x81e <HLCD_gotoXY+0x14>
     80e:	60 31       	cpi	r22, 0x10	; 16
     810:	30 f4       	brcc	.+12     	; 0x81e <HLCD_gotoXY+0x14>
	{
		HLCD_vidWritecmd((pos & 0x0F)| 0x80);
     812:	86 2f       	mov	r24, r22
     814:	8f 70       	andi	r24, 0x0F	; 15
     816:	80 68       	ori	r24, 0x80	; 128
     818:	0e 94 ee 02 	call	0x5dc	; 0x5dc <HLCD_vidWritecmd>
     81c:	08 95       	ret
	}
	else if (row==1 && pos < 16)
     81e:	81 30       	cpi	r24, 0x01	; 1
     820:	39 f4       	brne	.+14     	; 0x830 <HLCD_gotoXY+0x26>
     822:	60 31       	cpi	r22, 0x10	; 16
     824:	28 f4       	brcc	.+10     	; 0x830 <HLCD_gotoXY+0x26>
	{
		HLCD_vidWritecmd((pos & 0x0F)| 0xC0);
     826:	86 2f       	mov	r24, r22
     828:	8f 70       	andi	r24, 0x0F	; 15
     82a:	80 6c       	ori	r24, 0xC0	; 192
     82c:	0e 94 ee 02 	call	0x5dc	; 0x5dc <HLCD_vidWritecmd>
     830:	08 95       	ret

00000832 <HLCD_WriteString>:
 * description 	: func to write string on lcd
 * input param 	: str --> which take string as argument
 * return		: void
 * */
void HLCD_WriteString(const char* str)
{
     832:	0f 93       	push	r16
     834:	1f 93       	push	r17
     836:	cf 93       	push	r28
     838:	df 93       	push	r29
     83a:	8c 01       	movw	r16, r24
	Uint16_t count = 0;
	Uchar8_t string = str[count];
     83c:	fc 01       	movw	r30, r24
     83e:	80 81       	ld	r24, Z
 * input param 	: str --> which take string as argument
 * return		: void
 * */
void HLCD_WriteString(const char* str)
{
	Uint16_t count = 0;
     840:	c0 e0       	ldi	r28, 0x00	; 0
     842:	d0 e0       	ldi	r29, 0x00	; 0
	Uchar8_t string = str[count];
	while(string)
     844:	07 c0       	rjmp	.+14     	; 0x854 <HLCD_WriteString+0x22>
	{
		HLCD_vidWriteChar(string);
     846:	0e 94 a1 03 	call	0x742	; 0x742 <HLCD_vidWriteChar>
		string = str[++count];
     84a:	21 96       	adiw	r28, 0x01	; 1
     84c:	f8 01       	movw	r30, r16
     84e:	ec 0f       	add	r30, r28
     850:	fd 1f       	adc	r31, r29
     852:	80 81       	ld	r24, Z
 * */
void HLCD_WriteString(const char* str)
{
	Uint16_t count = 0;
	Uchar8_t string = str[count];
	while(string)
     854:	81 11       	cpse	r24, r1
     856:	f7 cf       	rjmp	.-18     	; 0x846 <HLCD_WriteString+0x14>
	{
		HLCD_vidWriteChar(string);
		string = str[++count];
	}
}
     858:	df 91       	pop	r29
     85a:	cf 91       	pop	r28
     85c:	1f 91       	pop	r17
     85e:	0f 91       	pop	r16
     860:	08 95       	ret

00000862 <HLCD_WriteInt>:
 * description 	: func to write integer number on lcd
 * input param 	: number --> which take number as argument
 * return		: void
 * */
void HLCD_WriteInt(Uint32_t number)
{
     862:	cf 93       	push	r28
     864:	df 93       	push	r29
     866:	cd b7       	in	r28, 0x3d	; 61
     868:	de b7       	in	r29, 0x3e	; 62
     86a:	2a 97       	sbiw	r28, 0x0a	; 10
     86c:	0f b6       	in	r0, 0x3f	; 63
     86e:	f8 94       	cli
     870:	de bf       	out	0x3e, r29	; 62
     872:	0f be       	out	0x3f, r0	; 63
     874:	cd bf       	out	0x3d, r28	; 61
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
<<<<<<< HEAD
     812:	4a e0       	ldi	r20, 0x0A	; 10
     814:	be 01       	movw	r22, r28
     816:	6f 5f       	subi	r22, 0xFF	; 255
     818:	7f 4f       	sbci	r23, 0xFF	; 255
     81a:	0e 94 6f 0e 	call	0x1cde	; 0x1cde <__itoa_ncheck>
=======
     876:	4a e0       	ldi	r20, 0x0A	; 10
     878:	be 01       	movw	r22, r28
     87a:	6f 5f       	subi	r22, 0xFF	; 255
     87c:	7f 4f       	sbci	r23, 0xFF	; 255
     87e:	0e 94 fb 0e 	call	0x1df6	; 0x1df6 <__itoa_ncheck>
>>>>>>> main
	Uchar8_t STR[INDEX];
	itoa(number, STR, 10);
	HLCD_WriteString(STR);
     882:	ce 01       	movw	r24, r28
     884:	01 96       	adiw	r24, 0x01	; 1
     886:	0e 94 19 04 	call	0x832	; 0x832 <HLCD_WriteString>
}
     88a:	2a 96       	adiw	r28, 0x0a	; 10
     88c:	0f b6       	in	r0, 0x3f	; 63
     88e:	f8 94       	cli
     890:	de bf       	out	0x3e, r29	; 62
     892:	0f be       	out	0x3f, r0	; 63
     894:	cd bf       	out	0x3d, r28	; 61
     896:	df 91       	pop	r29
     898:	cf 91       	pop	r28
     89a:	08 95       	ret

0000089c <main>:


void main(void)
{
	//float64_t val;
	app_init();
     89c:	0e 94 49 00 	call	0x92	; 0x92 <app_init>
	
	while(1)
	{
	
		app_main();
     8a0:	0e 94 53 00 	call	0xa6	; 0xa6 <app_main>
     8a4:	fd cf       	rjmp	.-6      	; 0x8a0 <main+0x4>

000008a6 <DIO_Init>:
     8a6:	20 e0       	ldi	r18, 0x00	; 0
     8a8:	9f c2       	rjmp	.+1342   	; 0xde8 <DIO_Init+0x542>
     8aa:	82 2f       	mov	r24, r18
     8ac:	90 e0       	ldi	r25, 0x00	; 0
     8ae:	fc 01       	movw	r30, r24
     8b0:	ee 0f       	add	r30, r30
     8b2:	ff 1f       	adc	r31, r31
     8b4:	ee 0f       	add	r30, r30
     8b6:	ff 1f       	adc	r31, r31
     8b8:	e8 0f       	add	r30, r24
     8ba:	f9 1f       	adc	r31, r25
     8bc:	e1 58       	subi	r30, 0x81	; 129
     8be:	ff 4f       	sbci	r31, 0xFF	; 255
     8c0:	32 81       	ldd	r19, Z+2	; 0x02
     8c2:	31 11       	cpse	r19, r1
     8c4:	49 c1       	rjmp	.+658    	; 0xb58 <DIO_Init+0x2b2>
     8c6:	fc 01       	movw	r30, r24
     8c8:	ee 0f       	add	r30, r30
     8ca:	ff 1f       	adc	r31, r31
     8cc:	ee 0f       	add	r30, r30
     8ce:	ff 1f       	adc	r31, r31
     8d0:	e8 0f       	add	r30, r24
     8d2:	f9 1f       	adc	r31, r25
     8d4:	e1 58       	subi	r30, 0x81	; 129
     8d6:	ff 4f       	sbci	r31, 0xFF	; 255
     8d8:	30 81       	ld	r19, Z
     8da:	31 30       	cpi	r19, 0x01	; 1
     8dc:	e9 f0       	breq	.+58     	; 0x918 <DIO_Init+0x72>
     8de:	30 f0       	brcs	.+12     	; 0x8ec <DIO_Init+0x46>
     8e0:	32 30       	cpi	r19, 0x02	; 2
     8e2:	81 f1       	breq	.+96     	; 0x944 <DIO_Init+0x9e>
     8e4:	33 30       	cpi	r19, 0x03	; 3
     8e6:	09 f4       	brne	.+2      	; 0x8ea <DIO_Init+0x44>
     8e8:	43 c0       	rjmp	.+134    	; 0x970 <DIO_Init+0xca>
     8ea:	57 c0       	rjmp	.+174    	; 0x99a <DIO_Init+0xf4>
     8ec:	3a b3       	in	r19, 0x1a	; 26
     8ee:	fc 01       	movw	r30, r24
     8f0:	ee 0f       	add	r30, r30
     8f2:	ff 1f       	adc	r31, r31
     8f4:	ee 0f       	add	r30, r30
     8f6:	ff 1f       	adc	r31, r31
     8f8:	e8 0f       	add	r30, r24
     8fa:	f9 1f       	adc	r31, r25
     8fc:	e1 58       	subi	r30, 0x81	; 129
     8fe:	ff 4f       	sbci	r31, 0xFF	; 255
     900:	41 e0       	ldi	r20, 0x01	; 1
     902:	50 e0       	ldi	r21, 0x00	; 0
     904:	01 80       	ldd	r0, Z+1	; 0x01
     906:	02 c0       	rjmp	.+4      	; 0x90c <DIO_Init+0x66>
     908:	44 0f       	add	r20, r20
     90a:	55 1f       	adc	r21, r21
     90c:	0a 94       	dec	r0
     90e:	e2 f7       	brpl	.-8      	; 0x908 <DIO_Init+0x62>
     910:	40 95       	com	r20
     912:	43 23       	and	r20, r19
     914:	4a bb       	out	0x1a, r20	; 26
     916:	41 c0       	rjmp	.+130    	; 0x99a <DIO_Init+0xf4>
     918:	37 b3       	in	r19, 0x17	; 23
     91a:	fc 01       	movw	r30, r24
     91c:	ee 0f       	add	r30, r30
     91e:	ff 1f       	adc	r31, r31
     920:	ee 0f       	add	r30, r30
     922:	ff 1f       	adc	r31, r31
     924:	e8 0f       	add	r30, r24
     926:	f9 1f       	adc	r31, r25
     928:	e1 58       	subi	r30, 0x81	; 129
     92a:	ff 4f       	sbci	r31, 0xFF	; 255
     92c:	41 e0       	ldi	r20, 0x01	; 1
     92e:	50 e0       	ldi	r21, 0x00	; 0
     930:	01 80       	ldd	r0, Z+1	; 0x01
     932:	02 c0       	rjmp	.+4      	; 0x938 <DIO_Init+0x92>
     934:	44 0f       	add	r20, r20
     936:	55 1f       	adc	r21, r21
     938:	0a 94       	dec	r0
     93a:	e2 f7       	brpl	.-8      	; 0x934 <DIO_Init+0x8e>
     93c:	40 95       	com	r20
     93e:	43 23       	and	r20, r19
     940:	47 bb       	out	0x17, r20	; 23
     942:	2b c0       	rjmp	.+86     	; 0x99a <DIO_Init+0xf4>
     944:	34 b3       	in	r19, 0x14	; 20
     946:	fc 01       	movw	r30, r24
     948:	ee 0f       	add	r30, r30
     94a:	ff 1f       	adc	r31, r31
     94c:	ee 0f       	add	r30, r30
     94e:	ff 1f       	adc	r31, r31
     950:	e8 0f       	add	r30, r24
     952:	f9 1f       	adc	r31, r25
     954:	e1 58       	subi	r30, 0x81	; 129
     956:	ff 4f       	sbci	r31, 0xFF	; 255
     958:	41 e0       	ldi	r20, 0x01	; 1
     95a:	50 e0       	ldi	r21, 0x00	; 0
     95c:	01 80       	ldd	r0, Z+1	; 0x01
     95e:	02 c0       	rjmp	.+4      	; 0x964 <DIO_Init+0xbe>
     960:	44 0f       	add	r20, r20
     962:	55 1f       	adc	r21, r21
     964:	0a 94       	dec	r0
     966:	e2 f7       	brpl	.-8      	; 0x960 <DIO_Init+0xba>
     968:	40 95       	com	r20
     96a:	43 23       	and	r20, r19
     96c:	44 bb       	out	0x14, r20	; 20
     96e:	15 c0       	rjmp	.+42     	; 0x99a <DIO_Init+0xf4>
     970:	31 b3       	in	r19, 0x11	; 17
     972:	fc 01       	movw	r30, r24
     974:	ee 0f       	add	r30, r30
     976:	ff 1f       	adc	r31, r31
     978:	ee 0f       	add	r30, r30
     97a:	ff 1f       	adc	r31, r31
     97c:	e8 0f       	add	r30, r24
     97e:	f9 1f       	adc	r31, r25
     980:	e1 58       	subi	r30, 0x81	; 129
     982:	ff 4f       	sbci	r31, 0xFF	; 255
     984:	41 e0       	ldi	r20, 0x01	; 1
     986:	50 e0       	ldi	r21, 0x00	; 0
     988:	01 80       	ldd	r0, Z+1	; 0x01
     98a:	02 c0       	rjmp	.+4      	; 0x990 <DIO_Init+0xea>
     98c:	44 0f       	add	r20, r20
     98e:	55 1f       	adc	r21, r21
     990:	0a 94       	dec	r0
     992:	e2 f7       	brpl	.-8      	; 0x98c <DIO_Init+0xe6>
     994:	40 95       	com	r20
     996:	43 23       	and	r20, r19
     998:	41 bb       	out	0x11, r20	; 17
     99a:	fc 01       	movw	r30, r24
     99c:	ee 0f       	add	r30, r30
     99e:	ff 1f       	adc	r31, r31
     9a0:	ee 0f       	add	r30, r30
     9a2:	ff 1f       	adc	r31, r31
     9a4:	e8 0f       	add	r30, r24
     9a6:	f9 1f       	adc	r31, r25
     9a8:	e1 58       	subi	r30, 0x81	; 129
     9aa:	ff 4f       	sbci	r31, 0xFF	; 255
     9ac:	33 81       	ldd	r19, Z+3	; 0x03
     9ae:	31 30       	cpi	r19, 0x01	; 1
     9b0:	09 f0       	breq	.+2      	; 0x9b4 <DIO_Init+0x10e>
     9b2:	67 c0       	rjmp	.+206    	; 0xa82 <DIO_Init+0x1dc>
     9b4:	fc 01       	movw	r30, r24
     9b6:	ee 0f       	add	r30, r30
     9b8:	ff 1f       	adc	r31, r31
     9ba:	ee 0f       	add	r30, r30
     9bc:	ff 1f       	adc	r31, r31
     9be:	e8 0f       	add	r30, r24
     9c0:	f9 1f       	adc	r31, r25
     9c2:	e1 58       	subi	r30, 0x81	; 129
     9c4:	ff 4f       	sbci	r31, 0xFF	; 255
     9c6:	30 81       	ld	r19, Z
     9c8:	31 30       	cpi	r19, 0x01	; 1
     9ca:	e1 f0       	breq	.+56     	; 0xa04 <DIO_Init+0x15e>
     9cc:	30 f0       	brcs	.+12     	; 0x9da <DIO_Init+0x134>
     9ce:	32 30       	cpi	r19, 0x02	; 2
     9d0:	71 f1       	breq	.+92     	; 0xa2e <DIO_Init+0x188>
     9d2:	33 30       	cpi	r19, 0x03	; 3
     9d4:	09 f4       	brne	.+2      	; 0x9d8 <DIO_Init+0x132>
     9d6:	40 c0       	rjmp	.+128    	; 0xa58 <DIO_Init+0x1b2>
     9d8:	06 c2       	rjmp	.+1036   	; 0xde6 <DIO_Init+0x540>
     9da:	3b b3       	in	r19, 0x1b	; 27
     9dc:	fc 01       	movw	r30, r24
     9de:	ee 0f       	add	r30, r30
     9e0:	ff 1f       	adc	r31, r31
     9e2:	ee 0f       	add	r30, r30
     9e4:	ff 1f       	adc	r31, r31
     9e6:	e8 0f       	add	r30, r24
     9e8:	f9 1f       	adc	r31, r25
     9ea:	e1 58       	subi	r30, 0x81	; 129
     9ec:	ff 4f       	sbci	r31, 0xFF	; 255
     9ee:	81 e0       	ldi	r24, 0x01	; 1
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	01 80       	ldd	r0, Z+1	; 0x01
     9f4:	02 c0       	rjmp	.+4      	; 0x9fa <DIO_Init+0x154>
     9f6:	88 0f       	add	r24, r24
     9f8:	99 1f       	adc	r25, r25
     9fa:	0a 94       	dec	r0
     9fc:	e2 f7       	brpl	.-8      	; 0x9f6 <DIO_Init+0x150>
     9fe:	83 2b       	or	r24, r19
     a00:	8b bb       	out	0x1b, r24	; 27
     a02:	f1 c1       	rjmp	.+994    	; 0xde6 <DIO_Init+0x540>
     a04:	38 b3       	in	r19, 0x18	; 24
     a06:	fc 01       	movw	r30, r24
     a08:	ee 0f       	add	r30, r30
     a0a:	ff 1f       	adc	r31, r31
     a0c:	ee 0f       	add	r30, r30
     a0e:	ff 1f       	adc	r31, r31
     a10:	e8 0f       	add	r30, r24
     a12:	f9 1f       	adc	r31, r25
     a14:	e1 58       	subi	r30, 0x81	; 129
     a16:	ff 4f       	sbci	r31, 0xFF	; 255
     a18:	81 e0       	ldi	r24, 0x01	; 1
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	01 80       	ldd	r0, Z+1	; 0x01
     a1e:	02 c0       	rjmp	.+4      	; 0xa24 <DIO_Init+0x17e>
     a20:	88 0f       	add	r24, r24
     a22:	99 1f       	adc	r25, r25
     a24:	0a 94       	dec	r0
     a26:	e2 f7       	brpl	.-8      	; 0xa20 <DIO_Init+0x17a>
     a28:	83 2b       	or	r24, r19
     a2a:	88 bb       	out	0x18, r24	; 24
     a2c:	dc c1       	rjmp	.+952    	; 0xde6 <DIO_Init+0x540>
     a2e:	35 b3       	in	r19, 0x15	; 21
     a30:	fc 01       	movw	r30, r24
     a32:	ee 0f       	add	r30, r30
     a34:	ff 1f       	adc	r31, r31
     a36:	ee 0f       	add	r30, r30
     a38:	ff 1f       	adc	r31, r31
     a3a:	e8 0f       	add	r30, r24
     a3c:	f9 1f       	adc	r31, r25
     a3e:	e1 58       	subi	r30, 0x81	; 129
     a40:	ff 4f       	sbci	r31, 0xFF	; 255
     a42:	81 e0       	ldi	r24, 0x01	; 1
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	01 80       	ldd	r0, Z+1	; 0x01
     a48:	02 c0       	rjmp	.+4      	; 0xa4e <DIO_Init+0x1a8>
     a4a:	88 0f       	add	r24, r24
     a4c:	99 1f       	adc	r25, r25
     a4e:	0a 94       	dec	r0
     a50:	e2 f7       	brpl	.-8      	; 0xa4a <DIO_Init+0x1a4>
     a52:	83 2b       	or	r24, r19
     a54:	85 bb       	out	0x15, r24	; 21
     a56:	c7 c1       	rjmp	.+910    	; 0xde6 <DIO_Init+0x540>
     a58:	32 b3       	in	r19, 0x12	; 18
     a5a:	fc 01       	movw	r30, r24
     a5c:	ee 0f       	add	r30, r30
     a5e:	ff 1f       	adc	r31, r31
     a60:	ee 0f       	add	r30, r30
     a62:	ff 1f       	adc	r31, r31
     a64:	e8 0f       	add	r30, r24
     a66:	f9 1f       	adc	r31, r25
     a68:	e1 58       	subi	r30, 0x81	; 129
     a6a:	ff 4f       	sbci	r31, 0xFF	; 255
     a6c:	81 e0       	ldi	r24, 0x01	; 1
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	01 80       	ldd	r0, Z+1	; 0x01
     a72:	02 c0       	rjmp	.+4      	; 0xa78 <DIO_Init+0x1d2>
     a74:	88 0f       	add	r24, r24
     a76:	99 1f       	adc	r25, r25
     a78:	0a 94       	dec	r0
     a7a:	e2 f7       	brpl	.-8      	; 0xa74 <DIO_Init+0x1ce>
     a7c:	83 2b       	or	r24, r19
     a7e:	82 bb       	out	0x12, r24	; 18
     a80:	b2 c1       	rjmp	.+868    	; 0xde6 <DIO_Init+0x540>
     a82:	fc 01       	movw	r30, r24
     a84:	ee 0f       	add	r30, r30
     a86:	ff 1f       	adc	r31, r31
     a88:	ee 0f       	add	r30, r30
     a8a:	ff 1f       	adc	r31, r31
     a8c:	e8 0f       	add	r30, r24
     a8e:	f9 1f       	adc	r31, r25
     a90:	e1 58       	subi	r30, 0x81	; 129
     a92:	ff 4f       	sbci	r31, 0xFF	; 255
     a94:	30 81       	ld	r19, Z
     a96:	31 30       	cpi	r19, 0x01	; 1
     a98:	e9 f0       	breq	.+58     	; 0xad4 <DIO_Init+0x22e>
     a9a:	30 f0       	brcs	.+12     	; 0xaa8 <DIO_Init+0x202>
     a9c:	32 30       	cpi	r19, 0x02	; 2
     a9e:	81 f1       	breq	.+96     	; 0xb00 <DIO_Init+0x25a>
     aa0:	33 30       	cpi	r19, 0x03	; 3
     aa2:	09 f4       	brne	.+2      	; 0xaa6 <DIO_Init+0x200>
     aa4:	43 c0       	rjmp	.+134    	; 0xb2c <DIO_Init+0x286>
     aa6:	9f c1       	rjmp	.+830    	; 0xde6 <DIO_Init+0x540>
     aa8:	3b b3       	in	r19, 0x1b	; 27
     aaa:	fc 01       	movw	r30, r24
     aac:	ee 0f       	add	r30, r30
     aae:	ff 1f       	adc	r31, r31
     ab0:	ee 0f       	add	r30, r30
     ab2:	ff 1f       	adc	r31, r31
     ab4:	e8 0f       	add	r30, r24
     ab6:	f9 1f       	adc	r31, r25
     ab8:	e1 58       	subi	r30, 0x81	; 129
     aba:	ff 4f       	sbci	r31, 0xFF	; 255
     abc:	81 e0       	ldi	r24, 0x01	; 1
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	01 80       	ldd	r0, Z+1	; 0x01
     ac2:	02 c0       	rjmp	.+4      	; 0xac8 <DIO_Init+0x222>
     ac4:	88 0f       	add	r24, r24
     ac6:	99 1f       	adc	r25, r25
     ac8:	0a 94       	dec	r0
     aca:	e2 f7       	brpl	.-8      	; 0xac4 <DIO_Init+0x21e>
     acc:	80 95       	com	r24
     ace:	83 23       	and	r24, r19
     ad0:	8b bb       	out	0x1b, r24	; 27
     ad2:	89 c1       	rjmp	.+786    	; 0xde6 <DIO_Init+0x540>
     ad4:	38 b3       	in	r19, 0x18	; 24
     ad6:	fc 01       	movw	r30, r24
     ad8:	ee 0f       	add	r30, r30
     ada:	ff 1f       	adc	r31, r31
     adc:	ee 0f       	add	r30, r30
     ade:	ff 1f       	adc	r31, r31
     ae0:	e8 0f       	add	r30, r24
     ae2:	f9 1f       	adc	r31, r25
     ae4:	e1 58       	subi	r30, 0x81	; 129
     ae6:	ff 4f       	sbci	r31, 0xFF	; 255
     ae8:	81 e0       	ldi	r24, 0x01	; 1
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	01 80       	ldd	r0, Z+1	; 0x01
     aee:	02 c0       	rjmp	.+4      	; 0xaf4 <DIO_Init+0x24e>
     af0:	88 0f       	add	r24, r24
     af2:	99 1f       	adc	r25, r25
     af4:	0a 94       	dec	r0
     af6:	e2 f7       	brpl	.-8      	; 0xaf0 <DIO_Init+0x24a>
     af8:	80 95       	com	r24
     afa:	83 23       	and	r24, r19
     afc:	88 bb       	out	0x18, r24	; 24
     afe:	73 c1       	rjmp	.+742    	; 0xde6 <DIO_Init+0x540>
     b00:	35 b3       	in	r19, 0x15	; 21
     b02:	fc 01       	movw	r30, r24
     b04:	ee 0f       	add	r30, r30
     b06:	ff 1f       	adc	r31, r31
     b08:	ee 0f       	add	r30, r30
     b0a:	ff 1f       	adc	r31, r31
     b0c:	e8 0f       	add	r30, r24
     b0e:	f9 1f       	adc	r31, r25
     b10:	e1 58       	subi	r30, 0x81	; 129
     b12:	ff 4f       	sbci	r31, 0xFF	; 255
     b14:	81 e0       	ldi	r24, 0x01	; 1
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	01 80       	ldd	r0, Z+1	; 0x01
     b1a:	02 c0       	rjmp	.+4      	; 0xb20 <DIO_Init+0x27a>
     b1c:	88 0f       	add	r24, r24
     b1e:	99 1f       	adc	r25, r25
     b20:	0a 94       	dec	r0
     b22:	e2 f7       	brpl	.-8      	; 0xb1c <DIO_Init+0x276>
     b24:	80 95       	com	r24
     b26:	83 23       	and	r24, r19
     b28:	85 bb       	out	0x15, r24	; 21
     b2a:	5d c1       	rjmp	.+698    	; 0xde6 <DIO_Init+0x540>
     b2c:	32 b3       	in	r19, 0x12	; 18
     b2e:	fc 01       	movw	r30, r24
     b30:	ee 0f       	add	r30, r30
     b32:	ff 1f       	adc	r31, r31
     b34:	ee 0f       	add	r30, r30
     b36:	ff 1f       	adc	r31, r31
     b38:	e8 0f       	add	r30, r24
     b3a:	f9 1f       	adc	r31, r25
     b3c:	e1 58       	subi	r30, 0x81	; 129
     b3e:	ff 4f       	sbci	r31, 0xFF	; 255
     b40:	81 e0       	ldi	r24, 0x01	; 1
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	01 80       	ldd	r0, Z+1	; 0x01
     b46:	02 c0       	rjmp	.+4      	; 0xb4c <DIO_Init+0x2a6>
     b48:	88 0f       	add	r24, r24
     b4a:	99 1f       	adc	r25, r25
     b4c:	0a 94       	dec	r0
     b4e:	e2 f7       	brpl	.-8      	; 0xb48 <DIO_Init+0x2a2>
     b50:	80 95       	com	r24
     b52:	83 23       	and	r24, r19
     b54:	82 bb       	out	0x12, r24	; 18
     b56:	47 c1       	rjmp	.+654    	; 0xde6 <DIO_Init+0x540>
     b58:	31 30       	cpi	r19, 0x01	; 1
     b5a:	09 f0       	breq	.+2      	; 0xb5e <DIO_Init+0x2b8>
     b5c:	44 c1       	rjmp	.+648    	; 0xde6 <DIO_Init+0x540>
     b5e:	fc 01       	movw	r30, r24
     b60:	ee 0f       	add	r30, r30
     b62:	ff 1f       	adc	r31, r31
     b64:	ee 0f       	add	r30, r30
     b66:	ff 1f       	adc	r31, r31
     b68:	e8 0f       	add	r30, r24
     b6a:	f9 1f       	adc	r31, r25
     b6c:	e1 58       	subi	r30, 0x81	; 129
     b6e:	ff 4f       	sbci	r31, 0xFF	; 255
     b70:	30 81       	ld	r19, Z
     b72:	31 30       	cpi	r19, 0x01	; 1
     b74:	e1 f0       	breq	.+56     	; 0xbae <DIO_Init+0x308>
     b76:	30 f0       	brcs	.+12     	; 0xb84 <DIO_Init+0x2de>
     b78:	32 30       	cpi	r19, 0x02	; 2
     b7a:	71 f1       	breq	.+92     	; 0xbd8 <DIO_Init+0x332>
     b7c:	33 30       	cpi	r19, 0x03	; 3
     b7e:	09 f4       	brne	.+2      	; 0xb82 <DIO_Init+0x2dc>
     b80:	40 c0       	rjmp	.+128    	; 0xc02 <DIO_Init+0x35c>
     b82:	53 c0       	rjmp	.+166    	; 0xc2a <DIO_Init+0x384>
     b84:	3a b3       	in	r19, 0x1a	; 26
     b86:	fc 01       	movw	r30, r24
     b88:	ee 0f       	add	r30, r30
     b8a:	ff 1f       	adc	r31, r31
     b8c:	ee 0f       	add	r30, r30
     b8e:	ff 1f       	adc	r31, r31
     b90:	e8 0f       	add	r30, r24
     b92:	f9 1f       	adc	r31, r25
     b94:	e1 58       	subi	r30, 0x81	; 129
     b96:	ff 4f       	sbci	r31, 0xFF	; 255
     b98:	41 e0       	ldi	r20, 0x01	; 1
     b9a:	50 e0       	ldi	r21, 0x00	; 0
     b9c:	01 80       	ldd	r0, Z+1	; 0x01
     b9e:	02 c0       	rjmp	.+4      	; 0xba4 <DIO_Init+0x2fe>
     ba0:	44 0f       	add	r20, r20
     ba2:	55 1f       	adc	r21, r21
     ba4:	0a 94       	dec	r0
     ba6:	e2 f7       	brpl	.-8      	; 0xba0 <DIO_Init+0x2fa>
     ba8:	43 2b       	or	r20, r19
     baa:	4a bb       	out	0x1a, r20	; 26
     bac:	3e c0       	rjmp	.+124    	; 0xc2a <DIO_Init+0x384>
     bae:	37 b3       	in	r19, 0x17	; 23
     bb0:	fc 01       	movw	r30, r24
     bb2:	ee 0f       	add	r30, r30
     bb4:	ff 1f       	adc	r31, r31
     bb6:	ee 0f       	add	r30, r30
     bb8:	ff 1f       	adc	r31, r31
     bba:	e8 0f       	add	r30, r24
     bbc:	f9 1f       	adc	r31, r25
     bbe:	e1 58       	subi	r30, 0x81	; 129
     bc0:	ff 4f       	sbci	r31, 0xFF	; 255
     bc2:	41 e0       	ldi	r20, 0x01	; 1
     bc4:	50 e0       	ldi	r21, 0x00	; 0
     bc6:	01 80       	ldd	r0, Z+1	; 0x01
     bc8:	02 c0       	rjmp	.+4      	; 0xbce <DIO_Init+0x328>
     bca:	44 0f       	add	r20, r20
     bcc:	55 1f       	adc	r21, r21
     bce:	0a 94       	dec	r0
     bd0:	e2 f7       	brpl	.-8      	; 0xbca <DIO_Init+0x324>
     bd2:	43 2b       	or	r20, r19
     bd4:	47 bb       	out	0x17, r20	; 23
     bd6:	29 c0       	rjmp	.+82     	; 0xc2a <DIO_Init+0x384>
     bd8:	34 b3       	in	r19, 0x14	; 20
     bda:	fc 01       	movw	r30, r24
     bdc:	ee 0f       	add	r30, r30
     bde:	ff 1f       	adc	r31, r31
     be0:	ee 0f       	add	r30, r30
     be2:	ff 1f       	adc	r31, r31
     be4:	e8 0f       	add	r30, r24
     be6:	f9 1f       	adc	r31, r25
     be8:	e1 58       	subi	r30, 0x81	; 129
     bea:	ff 4f       	sbci	r31, 0xFF	; 255
     bec:	41 e0       	ldi	r20, 0x01	; 1
     bee:	50 e0       	ldi	r21, 0x00	; 0
     bf0:	01 80       	ldd	r0, Z+1	; 0x01
     bf2:	02 c0       	rjmp	.+4      	; 0xbf8 <DIO_Init+0x352>
     bf4:	44 0f       	add	r20, r20
     bf6:	55 1f       	adc	r21, r21
     bf8:	0a 94       	dec	r0
     bfa:	e2 f7       	brpl	.-8      	; 0xbf4 <DIO_Init+0x34e>
     bfc:	43 2b       	or	r20, r19
     bfe:	44 bb       	out	0x14, r20	; 20
     c00:	14 c0       	rjmp	.+40     	; 0xc2a <DIO_Init+0x384>
     c02:	31 b3       	in	r19, 0x11	; 17
     c04:	fc 01       	movw	r30, r24
     c06:	ee 0f       	add	r30, r30
     c08:	ff 1f       	adc	r31, r31
     c0a:	ee 0f       	add	r30, r30
     c0c:	ff 1f       	adc	r31, r31
     c0e:	e8 0f       	add	r30, r24
     c10:	f9 1f       	adc	r31, r25
     c12:	e1 58       	subi	r30, 0x81	; 129
     c14:	ff 4f       	sbci	r31, 0xFF	; 255
     c16:	41 e0       	ldi	r20, 0x01	; 1
     c18:	50 e0       	ldi	r21, 0x00	; 0
     c1a:	01 80       	ldd	r0, Z+1	; 0x01
     c1c:	02 c0       	rjmp	.+4      	; 0xc22 <DIO_Init+0x37c>
     c1e:	44 0f       	add	r20, r20
     c20:	55 1f       	adc	r21, r21
     c22:	0a 94       	dec	r0
     c24:	e2 f7       	brpl	.-8      	; 0xc1e <DIO_Init+0x378>
     c26:	43 2b       	or	r20, r19
     c28:	41 bb       	out	0x11, r20	; 17
     c2a:	fc 01       	movw	r30, r24
     c2c:	ee 0f       	add	r30, r30
     c2e:	ff 1f       	adc	r31, r31
     c30:	ee 0f       	add	r30, r30
     c32:	ff 1f       	adc	r31, r31
     c34:	e8 0f       	add	r30, r24
     c36:	f9 1f       	adc	r31, r25
     c38:	e1 58       	subi	r30, 0x81	; 129
     c3a:	ff 4f       	sbci	r31, 0xFF	; 255
     c3c:	33 81       	ldd	r19, Z+3	; 0x03
     c3e:	31 11       	cpse	r19, r1
     c40:	67 c0       	rjmp	.+206    	; 0xd10 <DIO_Init+0x46a>
     c42:	fc 01       	movw	r30, r24
     c44:	ee 0f       	add	r30, r30
     c46:	ff 1f       	adc	r31, r31
     c48:	ee 0f       	add	r30, r30
     c4a:	ff 1f       	adc	r31, r31
     c4c:	e8 0f       	add	r30, r24
     c4e:	f9 1f       	adc	r31, r25
     c50:	e1 58       	subi	r30, 0x81	; 129
     c52:	ff 4f       	sbci	r31, 0xFF	; 255
     c54:	30 81       	ld	r19, Z
     c56:	31 30       	cpi	r19, 0x01	; 1
     c58:	e1 f0       	breq	.+56     	; 0xc92 <DIO_Init+0x3ec>
     c5a:	30 f0       	brcs	.+12     	; 0xc68 <DIO_Init+0x3c2>
     c5c:	32 30       	cpi	r19, 0x02	; 2
     c5e:	71 f1       	breq	.+92     	; 0xcbc <DIO_Init+0x416>
     c60:	33 30       	cpi	r19, 0x03	; 3
     c62:	09 f4       	brne	.+2      	; 0xc66 <DIO_Init+0x3c0>
     c64:	40 c0       	rjmp	.+128    	; 0xce6 <DIO_Init+0x440>
     c66:	bf c0       	rjmp	.+382    	; 0xde6 <DIO_Init+0x540>
     c68:	3b b3       	in	r19, 0x1b	; 27
     c6a:	fc 01       	movw	r30, r24
     c6c:	ee 0f       	add	r30, r30
     c6e:	ff 1f       	adc	r31, r31
     c70:	ee 0f       	add	r30, r30
     c72:	ff 1f       	adc	r31, r31
     c74:	e8 0f       	add	r30, r24
     c76:	f9 1f       	adc	r31, r25
     c78:	e1 58       	subi	r30, 0x81	; 129
     c7a:	ff 4f       	sbci	r31, 0xFF	; 255
     c7c:	81 e0       	ldi	r24, 0x01	; 1
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	01 80       	ldd	r0, Z+1	; 0x01
     c82:	02 c0       	rjmp	.+4      	; 0xc88 <DIO_Init+0x3e2>
     c84:	88 0f       	add	r24, r24
     c86:	99 1f       	adc	r25, r25
     c88:	0a 94       	dec	r0
     c8a:	e2 f7       	brpl	.-8      	; 0xc84 <DIO_Init+0x3de>
     c8c:	83 2b       	or	r24, r19
     c8e:	8b bb       	out	0x1b, r24	; 27
     c90:	aa c0       	rjmp	.+340    	; 0xde6 <DIO_Init+0x540>
     c92:	38 b3       	in	r19, 0x18	; 24
     c94:	fc 01       	movw	r30, r24
     c96:	ee 0f       	add	r30, r30
     c98:	ff 1f       	adc	r31, r31
     c9a:	ee 0f       	add	r30, r30
     c9c:	ff 1f       	adc	r31, r31
     c9e:	e8 0f       	add	r30, r24
     ca0:	f9 1f       	adc	r31, r25
     ca2:	e1 58       	subi	r30, 0x81	; 129
     ca4:	ff 4f       	sbci	r31, 0xFF	; 255
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	01 80       	ldd	r0, Z+1	; 0x01
     cac:	02 c0       	rjmp	.+4      	; 0xcb2 <DIO_Init+0x40c>
     cae:	88 0f       	add	r24, r24
     cb0:	99 1f       	adc	r25, r25
     cb2:	0a 94       	dec	r0
     cb4:	e2 f7       	brpl	.-8      	; 0xcae <DIO_Init+0x408>
     cb6:	83 2b       	or	r24, r19
     cb8:	88 bb       	out	0x18, r24	; 24
     cba:	95 c0       	rjmp	.+298    	; 0xde6 <DIO_Init+0x540>
     cbc:	35 b3       	in	r19, 0x15	; 21
     cbe:	fc 01       	movw	r30, r24
     cc0:	ee 0f       	add	r30, r30
     cc2:	ff 1f       	adc	r31, r31
     cc4:	ee 0f       	add	r30, r30
     cc6:	ff 1f       	adc	r31, r31
     cc8:	e8 0f       	add	r30, r24
     cca:	f9 1f       	adc	r31, r25
     ccc:	e1 58       	subi	r30, 0x81	; 129
     cce:	ff 4f       	sbci	r31, 0xFF	; 255
     cd0:	81 e0       	ldi	r24, 0x01	; 1
     cd2:	90 e0       	ldi	r25, 0x00	; 0
     cd4:	01 80       	ldd	r0, Z+1	; 0x01
     cd6:	02 c0       	rjmp	.+4      	; 0xcdc <DIO_Init+0x436>
     cd8:	88 0f       	add	r24, r24
     cda:	99 1f       	adc	r25, r25
     cdc:	0a 94       	dec	r0
     cde:	e2 f7       	brpl	.-8      	; 0xcd8 <DIO_Init+0x432>
     ce0:	83 2b       	or	r24, r19
     ce2:	85 bb       	out	0x15, r24	; 21
     ce4:	80 c0       	rjmp	.+256    	; 0xde6 <DIO_Init+0x540>
     ce6:	32 b3       	in	r19, 0x12	; 18
     ce8:	fc 01       	movw	r30, r24
     cea:	ee 0f       	add	r30, r30
     cec:	ff 1f       	adc	r31, r31
     cee:	ee 0f       	add	r30, r30
     cf0:	ff 1f       	adc	r31, r31
     cf2:	e8 0f       	add	r30, r24
     cf4:	f9 1f       	adc	r31, r25
     cf6:	e1 58       	subi	r30, 0x81	; 129
     cf8:	ff 4f       	sbci	r31, 0xFF	; 255
     cfa:	81 e0       	ldi	r24, 0x01	; 1
     cfc:	90 e0       	ldi	r25, 0x00	; 0
     cfe:	01 80       	ldd	r0, Z+1	; 0x01
     d00:	02 c0       	rjmp	.+4      	; 0xd06 <DIO_Init+0x460>
     d02:	88 0f       	add	r24, r24
     d04:	99 1f       	adc	r25, r25
     d06:	0a 94       	dec	r0
     d08:	e2 f7       	brpl	.-8      	; 0xd02 <DIO_Init+0x45c>
     d0a:	83 2b       	or	r24, r19
     d0c:	82 bb       	out	0x12, r24	; 18
     d0e:	6b c0       	rjmp	.+214    	; 0xde6 <DIO_Init+0x540>
     d10:	fc 01       	movw	r30, r24
     d12:	ee 0f       	add	r30, r30
     d14:	ff 1f       	adc	r31, r31
     d16:	ee 0f       	add	r30, r30
     d18:	ff 1f       	adc	r31, r31
     d1a:	e8 0f       	add	r30, r24
     d1c:	f9 1f       	adc	r31, r25
     d1e:	e1 58       	subi	r30, 0x81	; 129
     d20:	ff 4f       	sbci	r31, 0xFF	; 255
     d22:	30 81       	ld	r19, Z
     d24:	31 30       	cpi	r19, 0x01	; 1
     d26:	e9 f0       	breq	.+58     	; 0xd62 <DIO_Init+0x4bc>
     d28:	30 f0       	brcs	.+12     	; 0xd36 <DIO_Init+0x490>
     d2a:	32 30       	cpi	r19, 0x02	; 2
     d2c:	81 f1       	breq	.+96     	; 0xd8e <DIO_Init+0x4e8>
     d2e:	33 30       	cpi	r19, 0x03	; 3
     d30:	09 f4       	brne	.+2      	; 0xd34 <DIO_Init+0x48e>
     d32:	43 c0       	rjmp	.+134    	; 0xdba <DIO_Init+0x514>
     d34:	58 c0       	rjmp	.+176    	; 0xde6 <DIO_Init+0x540>
     d36:	3b b3       	in	r19, 0x1b	; 27
     d38:	fc 01       	movw	r30, r24
     d3a:	ee 0f       	add	r30, r30
     d3c:	ff 1f       	adc	r31, r31
     d3e:	ee 0f       	add	r30, r30
     d40:	ff 1f       	adc	r31, r31
     d42:	e8 0f       	add	r30, r24
     d44:	f9 1f       	adc	r31, r25
     d46:	e1 58       	subi	r30, 0x81	; 129
     d48:	ff 4f       	sbci	r31, 0xFF	; 255
     d4a:	81 e0       	ldi	r24, 0x01	; 1
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	01 80       	ldd	r0, Z+1	; 0x01
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <DIO_Init+0x4b0>
     d52:	88 0f       	add	r24, r24
     d54:	99 1f       	adc	r25, r25
     d56:	0a 94       	dec	r0
     d58:	e2 f7       	brpl	.-8      	; 0xd52 <DIO_Init+0x4ac>
     d5a:	80 95       	com	r24
     d5c:	83 23       	and	r24, r19
     d5e:	8b bb       	out	0x1b, r24	; 27
     d60:	42 c0       	rjmp	.+132    	; 0xde6 <DIO_Init+0x540>
     d62:	38 b3       	in	r19, 0x18	; 24
     d64:	fc 01       	movw	r30, r24
     d66:	ee 0f       	add	r30, r30
     d68:	ff 1f       	adc	r31, r31
     d6a:	ee 0f       	add	r30, r30
     d6c:	ff 1f       	adc	r31, r31
     d6e:	e8 0f       	add	r30, r24
     d70:	f9 1f       	adc	r31, r25
     d72:	e1 58       	subi	r30, 0x81	; 129
     d74:	ff 4f       	sbci	r31, 0xFF	; 255
     d76:	81 e0       	ldi	r24, 0x01	; 1
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	01 80       	ldd	r0, Z+1	; 0x01
     d7c:	02 c0       	rjmp	.+4      	; 0xd82 <DIO_Init+0x4dc>
     d7e:	88 0f       	add	r24, r24
     d80:	99 1f       	adc	r25, r25
     d82:	0a 94       	dec	r0
     d84:	e2 f7       	brpl	.-8      	; 0xd7e <DIO_Init+0x4d8>
     d86:	80 95       	com	r24
     d88:	83 23       	and	r24, r19
     d8a:	88 bb       	out	0x18, r24	; 24
     d8c:	2c c0       	rjmp	.+88     	; 0xde6 <DIO_Init+0x540>
     d8e:	35 b3       	in	r19, 0x15	; 21
     d90:	fc 01       	movw	r30, r24
     d92:	ee 0f       	add	r30, r30
     d94:	ff 1f       	adc	r31, r31
     d96:	ee 0f       	add	r30, r30
     d98:	ff 1f       	adc	r31, r31
     d9a:	e8 0f       	add	r30, r24
     d9c:	f9 1f       	adc	r31, r25
     d9e:	e1 58       	subi	r30, 0x81	; 129
     da0:	ff 4f       	sbci	r31, 0xFF	; 255
     da2:	81 e0       	ldi	r24, 0x01	; 1
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	01 80       	ldd	r0, Z+1	; 0x01
     da8:	02 c0       	rjmp	.+4      	; 0xdae <DIO_Init+0x508>
     daa:	88 0f       	add	r24, r24
     dac:	99 1f       	adc	r25, r25
     dae:	0a 94       	dec	r0
     db0:	e2 f7       	brpl	.-8      	; 0xdaa <DIO_Init+0x504>
     db2:	80 95       	com	r24
     db4:	83 23       	and	r24, r19
     db6:	85 bb       	out	0x15, r24	; 21
     db8:	16 c0       	rjmp	.+44     	; 0xde6 <DIO_Init+0x540>
     dba:	32 b3       	in	r19, 0x12	; 18
     dbc:	fc 01       	movw	r30, r24
     dbe:	ee 0f       	add	r30, r30
     dc0:	ff 1f       	adc	r31, r31
     dc2:	ee 0f       	add	r30, r30
     dc4:	ff 1f       	adc	r31, r31
     dc6:	8e 0f       	add	r24, r30
     dc8:	9f 1f       	adc	r25, r31
     dca:	fc 01       	movw	r30, r24
     dcc:	e1 58       	subi	r30, 0x81	; 129
     dce:	ff 4f       	sbci	r31, 0xFF	; 255
     dd0:	81 e0       	ldi	r24, 0x01	; 1
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	01 80       	ldd	r0, Z+1	; 0x01
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <DIO_Init+0x536>
     dd8:	88 0f       	add	r24, r24
     dda:	99 1f       	adc	r25, r25
     ddc:	0a 94       	dec	r0
     dde:	e2 f7       	brpl	.-8      	; 0xdd8 <DIO_Init+0x532>
     de0:	80 95       	com	r24
     de2:	83 23       	and	r24, r19
     de4:	82 bb       	out	0x12, r24	; 18
     de6:	2f 5f       	subi	r18, 0xFF	; 255
     de8:	22 30       	cpi	r18, 0x02	; 2
     dea:	08 f4       	brcc	.+2      	; 0xdee <DIO_Init+0x548>
     dec:	5e cd       	rjmp	.-1348   	; 0x8aa <DIO_Init+0x4>
     dee:	08 95       	ret

00000df0 <DIO_WritePin>:
     df0:	44 23       	and	r20, r20
     df2:	19 f0       	breq	.+6      	; 0xdfa <DIO_WritePin+0xa>
     df4:	41 30       	cpi	r20, 0x01	; 1
     df6:	a9 f1       	breq	.+106    	; 0xe62 <DIO_WritePin+0x72>
     df8:	08 95       	ret
     dfa:	81 30       	cpi	r24, 0x01	; 1
     dfc:	89 f0       	breq	.+34     	; 0xe20 <DIO_WritePin+0x30>
     dfe:	28 f0       	brcs	.+10     	; 0xe0a <DIO_WritePin+0x1a>
     e00:	82 30       	cpi	r24, 0x02	; 2
     e02:	c9 f0       	breq	.+50     	; 0xe36 <DIO_WritePin+0x46>
     e04:	83 30       	cpi	r24, 0x03	; 3
     e06:	11 f1       	breq	.+68     	; 0xe4c <DIO_WritePin+0x5c>
     e08:	08 95       	ret
     e0a:	2b b3       	in	r18, 0x1b	; 27
     e0c:	81 e0       	ldi	r24, 0x01	; 1
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	02 c0       	rjmp	.+4      	; 0xe16 <DIO_WritePin+0x26>
     e12:	88 0f       	add	r24, r24
     e14:	99 1f       	adc	r25, r25
     e16:	6a 95       	dec	r22
     e18:	e2 f7       	brpl	.-8      	; 0xe12 <DIO_WritePin+0x22>
     e1a:	82 2b       	or	r24, r18
     e1c:	8b bb       	out	0x1b, r24	; 27
     e1e:	08 95       	ret
     e20:	28 b3       	in	r18, 0x18	; 24
     e22:	81 e0       	ldi	r24, 0x01	; 1
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	02 c0       	rjmp	.+4      	; 0xe2c <DIO_WritePin+0x3c>
     e28:	88 0f       	add	r24, r24
     e2a:	99 1f       	adc	r25, r25
     e2c:	6a 95       	dec	r22
     e2e:	e2 f7       	brpl	.-8      	; 0xe28 <DIO_WritePin+0x38>
     e30:	82 2b       	or	r24, r18
     e32:	88 bb       	out	0x18, r24	; 24
     e34:	08 95       	ret
     e36:	25 b3       	in	r18, 0x15	; 21
     e38:	81 e0       	ldi	r24, 0x01	; 1
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	02 c0       	rjmp	.+4      	; 0xe42 <DIO_WritePin+0x52>
     e3e:	88 0f       	add	r24, r24
     e40:	99 1f       	adc	r25, r25
     e42:	6a 95       	dec	r22
     e44:	e2 f7       	brpl	.-8      	; 0xe3e <DIO_WritePin+0x4e>
     e46:	82 2b       	or	r24, r18
     e48:	85 bb       	out	0x15, r24	; 21
     e4a:	08 95       	ret
     e4c:	22 b3       	in	r18, 0x12	; 18
     e4e:	81 e0       	ldi	r24, 0x01	; 1
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	02 c0       	rjmp	.+4      	; 0xe58 <DIO_WritePin+0x68>
     e54:	88 0f       	add	r24, r24
     e56:	99 1f       	adc	r25, r25
     e58:	6a 95       	dec	r22
     e5a:	e2 f7       	brpl	.-8      	; 0xe54 <DIO_WritePin+0x64>
     e5c:	82 2b       	or	r24, r18
     e5e:	82 bb       	out	0x12, r24	; 18
     e60:	08 95       	ret
     e62:	81 30       	cpi	r24, 0x01	; 1
     e64:	91 f0       	breq	.+36     	; 0xe8a <DIO_WritePin+0x9a>
     e66:	28 f0       	brcs	.+10     	; 0xe72 <DIO_WritePin+0x82>
     e68:	82 30       	cpi	r24, 0x02	; 2
     e6a:	d9 f0       	breq	.+54     	; 0xea2 <DIO_WritePin+0xb2>
     e6c:	83 30       	cpi	r24, 0x03	; 3
     e6e:	29 f1       	breq	.+74     	; 0xeba <DIO_WritePin+0xca>
     e70:	08 95       	ret
     e72:	2b b3       	in	r18, 0x1b	; 27
     e74:	81 e0       	ldi	r24, 0x01	; 1
     e76:	90 e0       	ldi	r25, 0x00	; 0
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <DIO_WritePin+0x8e>
     e7a:	88 0f       	add	r24, r24
     e7c:	99 1f       	adc	r25, r25
     e7e:	6a 95       	dec	r22
     e80:	e2 f7       	brpl	.-8      	; 0xe7a <DIO_WritePin+0x8a>
     e82:	80 95       	com	r24
     e84:	82 23       	and	r24, r18
     e86:	8b bb       	out	0x1b, r24	; 27
     e88:	08 95       	ret
     e8a:	28 b3       	in	r18, 0x18	; 24
     e8c:	81 e0       	ldi	r24, 0x01	; 1
     e8e:	90 e0       	ldi	r25, 0x00	; 0
     e90:	02 c0       	rjmp	.+4      	; 0xe96 <DIO_WritePin+0xa6>
     e92:	88 0f       	add	r24, r24
     e94:	99 1f       	adc	r25, r25
     e96:	6a 95       	dec	r22
     e98:	e2 f7       	brpl	.-8      	; 0xe92 <DIO_WritePin+0xa2>
     e9a:	80 95       	com	r24
     e9c:	82 23       	and	r24, r18
     e9e:	88 bb       	out	0x18, r24	; 24
     ea0:	08 95       	ret
     ea2:	25 b3       	in	r18, 0x15	; 21
     ea4:	81 e0       	ldi	r24, 0x01	; 1
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	02 c0       	rjmp	.+4      	; 0xeae <DIO_WritePin+0xbe>
     eaa:	88 0f       	add	r24, r24
     eac:	99 1f       	adc	r25, r25
     eae:	6a 95       	dec	r22
     eb0:	e2 f7       	brpl	.-8      	; 0xeaa <DIO_WritePin+0xba>
     eb2:	80 95       	com	r24
     eb4:	82 23       	and	r24, r18
     eb6:	85 bb       	out	0x15, r24	; 21
     eb8:	08 95       	ret
     eba:	22 b3       	in	r18, 0x12	; 18
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	02 c0       	rjmp	.+4      	; 0xec6 <DIO_WritePin+0xd6>
     ec2:	88 0f       	add	r24, r24
     ec4:	99 1f       	adc	r25, r25
     ec6:	6a 95       	dec	r22
     ec8:	e2 f7       	brpl	.-8      	; 0xec2 <DIO_WritePin+0xd2>
     eca:	80 95       	com	r24
     ecc:	82 23       	and	r24, r18
     ece:	82 bb       	out	0x12, r24	; 18
     ed0:	08 95       	ret

00000ed2 <DIO_read>:
     ed2:	81 30       	cpi	r24, 0x01	; 1
     ed4:	89 f0       	breq	.+34     	; 0xef8 <DIO_read+0x26>
     ed6:	28 f0       	brcs	.+10     	; 0xee2 <DIO_read+0x10>
     ed8:	82 30       	cpi	r24, 0x02	; 2
     eda:	c9 f0       	breq	.+50     	; 0xf0e <DIO_read+0x3c>
     edc:	83 30       	cpi	r24, 0x03	; 3
     ede:	11 f1       	breq	.+68     	; 0xf24 <DIO_read+0x52>
     ee0:	08 95       	ret
     ee2:	89 b3       	in	r24, 0x19	; 25
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	02 c0       	rjmp	.+4      	; 0xeec <DIO_read+0x1a>
     ee8:	95 95       	asr	r25
     eea:	87 95       	ror	r24
     eec:	6a 95       	dec	r22
     eee:	e2 f7       	brpl	.-8      	; 0xee8 <DIO_read+0x16>
     ef0:	81 70       	andi	r24, 0x01	; 1
     ef2:	fa 01       	movw	r30, r20
     ef4:	80 83       	st	Z, r24
     ef6:	08 95       	ret
     ef8:	86 b3       	in	r24, 0x16	; 22
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <DIO_read+0x30>
     efe:	95 95       	asr	r25
     f00:	87 95       	ror	r24
     f02:	6a 95       	dec	r22
     f04:	e2 f7       	brpl	.-8      	; 0xefe <DIO_read+0x2c>
     f06:	81 70       	andi	r24, 0x01	; 1
     f08:	fa 01       	movw	r30, r20
     f0a:	80 83       	st	Z, r24
     f0c:	08 95       	ret
     f0e:	83 b3       	in	r24, 0x13	; 19
     f10:	90 e0       	ldi	r25, 0x00	; 0
     f12:	02 c0       	rjmp	.+4      	; 0xf18 <DIO_read+0x46>
     f14:	95 95       	asr	r25
     f16:	87 95       	ror	r24
     f18:	6a 95       	dec	r22
     f1a:	e2 f7       	brpl	.-8      	; 0xf14 <DIO_read+0x42>
     f1c:	81 70       	andi	r24, 0x01	; 1
     f1e:	fa 01       	movw	r30, r20
     f20:	80 83       	st	Z, r24
     f22:	08 95       	ret
     f24:	80 b3       	in	r24, 0x10	; 16
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	02 c0       	rjmp	.+4      	; 0xf2e <DIO_read+0x5c>
     f2a:	95 95       	asr	r25
     f2c:	87 95       	ror	r24
     f2e:	6a 95       	dec	r22
     f30:	e2 f7       	brpl	.-8      	; 0xf2a <DIO_read+0x58>
     f32:	81 70       	andi	r24, 0x01	; 1
     f34:	fa 01       	movw	r30, r20
     f36:	80 83       	st	Z, r24
     f38:	08 95       	ret

00000f3a <DIO_Initpin>:
     f3a:	fc 01       	movw	r30, r24
     f3c:	82 81       	ldd	r24, Z+2	; 0x02
     f3e:	81 11       	cpse	r24, r1
     f40:	b5 c0       	rjmp	.+362    	; 0x10ac <DIO_Initpin+0x172>
     f42:	80 81       	ld	r24, Z
     f44:	81 30       	cpi	r24, 0x01	; 1
     f46:	99 f0       	breq	.+38     	; 0xf6e <DIO_Initpin+0x34>
     f48:	28 f0       	brcs	.+10     	; 0xf54 <DIO_Initpin+0x1a>
     f4a:	82 30       	cpi	r24, 0x02	; 2
     f4c:	e9 f0       	breq	.+58     	; 0xf88 <DIO_Initpin+0x4e>
     f4e:	83 30       	cpi	r24, 0x03	; 3
     f50:	41 f1       	breq	.+80     	; 0xfa2 <DIO_Initpin+0x68>
     f52:	33 c0       	rjmp	.+102    	; 0xfba <DIO_Initpin+0x80>
     f54:	2a b3       	in	r18, 0x1a	; 26
     f56:	81 e0       	ldi	r24, 0x01	; 1
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	01 80       	ldd	r0, Z+1	; 0x01
     f5c:	02 c0       	rjmp	.+4      	; 0xf62 <DIO_Initpin+0x28>
     f5e:	88 0f       	add	r24, r24
     f60:	99 1f       	adc	r25, r25
     f62:	0a 94       	dec	r0
     f64:	e2 f7       	brpl	.-8      	; 0xf5e <DIO_Initpin+0x24>
     f66:	80 95       	com	r24
     f68:	82 23       	and	r24, r18
     f6a:	8a bb       	out	0x1a, r24	; 26
     f6c:	26 c0       	rjmp	.+76     	; 0xfba <DIO_Initpin+0x80>
     f6e:	27 b3       	in	r18, 0x17	; 23
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	01 80       	ldd	r0, Z+1	; 0x01
     f76:	02 c0       	rjmp	.+4      	; 0xf7c <DIO_Initpin+0x42>
     f78:	88 0f       	add	r24, r24
     f7a:	99 1f       	adc	r25, r25
     f7c:	0a 94       	dec	r0
     f7e:	e2 f7       	brpl	.-8      	; 0xf78 <DIO_Initpin+0x3e>
     f80:	80 95       	com	r24
     f82:	82 23       	and	r24, r18
     f84:	87 bb       	out	0x17, r24	; 23
     f86:	19 c0       	rjmp	.+50     	; 0xfba <DIO_Initpin+0x80>
     f88:	24 b3       	in	r18, 0x14	; 20
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	01 80       	ldd	r0, Z+1	; 0x01
     f90:	02 c0       	rjmp	.+4      	; 0xf96 <DIO_Initpin+0x5c>
     f92:	88 0f       	add	r24, r24
     f94:	99 1f       	adc	r25, r25
     f96:	0a 94       	dec	r0
     f98:	e2 f7       	brpl	.-8      	; 0xf92 <DIO_Initpin+0x58>
     f9a:	80 95       	com	r24
     f9c:	82 23       	and	r24, r18
     f9e:	84 bb       	out	0x14, r24	; 20
     fa0:	0c c0       	rjmp	.+24     	; 0xfba <DIO_Initpin+0x80>
     fa2:	21 b3       	in	r18, 0x11	; 17
     fa4:	81 e0       	ldi	r24, 0x01	; 1
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	01 80       	ldd	r0, Z+1	; 0x01
     faa:	02 c0       	rjmp	.+4      	; 0xfb0 <DIO_Initpin+0x76>
     fac:	88 0f       	add	r24, r24
     fae:	99 1f       	adc	r25, r25
     fb0:	0a 94       	dec	r0
     fb2:	e2 f7       	brpl	.-8      	; 0xfac <DIO_Initpin+0x72>
     fb4:	80 95       	com	r24
     fb6:	82 23       	and	r24, r18
     fb8:	81 bb       	out	0x11, r24	; 17
     fba:	83 81       	ldd	r24, Z+3	; 0x03
     fbc:	81 30       	cpi	r24, 0x01	; 1
     fbe:	c9 f5       	brne	.+114    	; 0x1032 <DIO_Initpin+0xf8>
     fc0:	80 81       	ld	r24, Z
     fc2:	81 30       	cpi	r24, 0x01	; 1
     fc4:	91 f0       	breq	.+36     	; 0xfea <DIO_Initpin+0xb0>
     fc6:	28 f0       	brcs	.+10     	; 0xfd2 <DIO_Initpin+0x98>
     fc8:	82 30       	cpi	r24, 0x02	; 2
     fca:	d9 f0       	breq	.+54     	; 0x1002 <DIO_Initpin+0xc8>
     fcc:	83 30       	cpi	r24, 0x03	; 3
     fce:	29 f1       	breq	.+74     	; 0x101a <DIO_Initpin+0xe0>
     fd0:	08 95       	ret
     fd2:	2b b3       	in	r18, 0x1b	; 27
     fd4:	81 e0       	ldi	r24, 0x01	; 1
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	01 80       	ldd	r0, Z+1	; 0x01
     fda:	02 c0       	rjmp	.+4      	; 0xfe0 <DIO_Initpin+0xa6>
     fdc:	88 0f       	add	r24, r24
     fde:	99 1f       	adc	r25, r25
     fe0:	0a 94       	dec	r0
     fe2:	e2 f7       	brpl	.-8      	; 0xfdc <DIO_Initpin+0xa2>
     fe4:	82 2b       	or	r24, r18
     fe6:	8b bb       	out	0x1b, r24	; 27
     fe8:	08 95       	ret
     fea:	28 b3       	in	r18, 0x18	; 24
     fec:	81 e0       	ldi	r24, 0x01	; 1
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	01 80       	ldd	r0, Z+1	; 0x01
     ff2:	02 c0       	rjmp	.+4      	; 0xff8 <DIO_Initpin+0xbe>
     ff4:	88 0f       	add	r24, r24
     ff6:	99 1f       	adc	r25, r25
     ff8:	0a 94       	dec	r0
     ffa:	e2 f7       	brpl	.-8      	; 0xff4 <DIO_Initpin+0xba>
     ffc:	82 2b       	or	r24, r18
     ffe:	88 bb       	out	0x18, r24	; 24
    1000:	08 95       	ret
    1002:	25 b3       	in	r18, 0x15	; 21
    1004:	81 e0       	ldi	r24, 0x01	; 1
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	01 80       	ldd	r0, Z+1	; 0x01
    100a:	02 c0       	rjmp	.+4      	; 0x1010 <DIO_Initpin+0xd6>
    100c:	88 0f       	add	r24, r24
    100e:	99 1f       	adc	r25, r25
    1010:	0a 94       	dec	r0
    1012:	e2 f7       	brpl	.-8      	; 0x100c <DIO_Initpin+0xd2>
    1014:	82 2b       	or	r24, r18
    1016:	85 bb       	out	0x15, r24	; 21
    1018:	08 95       	ret
    101a:	22 b3       	in	r18, 0x12	; 18
    101c:	81 e0       	ldi	r24, 0x01	; 1
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	01 80       	ldd	r0, Z+1	; 0x01
    1022:	02 c0       	rjmp	.+4      	; 0x1028 <DIO_Initpin+0xee>
    1024:	88 0f       	add	r24, r24
    1026:	99 1f       	adc	r25, r25
    1028:	0a 94       	dec	r0
    102a:	e2 f7       	brpl	.-8      	; 0x1024 <DIO_Initpin+0xea>
    102c:	82 2b       	or	r24, r18
    102e:	82 bb       	out	0x12, r24	; 18
    1030:	08 95       	ret
    1032:	80 81       	ld	r24, Z
    1034:	81 30       	cpi	r24, 0x01	; 1
    1036:	99 f0       	breq	.+38     	; 0x105e <DIO_Initpin+0x124>
    1038:	28 f0       	brcs	.+10     	; 0x1044 <DIO_Initpin+0x10a>
    103a:	82 30       	cpi	r24, 0x02	; 2
    103c:	e9 f0       	breq	.+58     	; 0x1078 <DIO_Initpin+0x13e>
    103e:	83 30       	cpi	r24, 0x03	; 3
    1040:	41 f1       	breq	.+80     	; 0x1092 <DIO_Initpin+0x158>
    1042:	08 95       	ret
    1044:	2b b3       	in	r18, 0x1b	; 27
    1046:	81 e0       	ldi	r24, 0x01	; 1
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	01 80       	ldd	r0, Z+1	; 0x01
    104c:	02 c0       	rjmp	.+4      	; 0x1052 <DIO_Initpin+0x118>
    104e:	88 0f       	add	r24, r24
    1050:	99 1f       	adc	r25, r25
    1052:	0a 94       	dec	r0
    1054:	e2 f7       	brpl	.-8      	; 0x104e <DIO_Initpin+0x114>
    1056:	80 95       	com	r24
    1058:	82 23       	and	r24, r18
    105a:	8b bb       	out	0x1b, r24	; 27
    105c:	08 95       	ret
    105e:	28 b3       	in	r18, 0x18	; 24
    1060:	81 e0       	ldi	r24, 0x01	; 1
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	01 80       	ldd	r0, Z+1	; 0x01
    1066:	02 c0       	rjmp	.+4      	; 0x106c <DIO_Initpin+0x132>
    1068:	88 0f       	add	r24, r24
    106a:	99 1f       	adc	r25, r25
    106c:	0a 94       	dec	r0
    106e:	e2 f7       	brpl	.-8      	; 0x1068 <DIO_Initpin+0x12e>
    1070:	80 95       	com	r24
    1072:	82 23       	and	r24, r18
    1074:	88 bb       	out	0x18, r24	; 24
    1076:	08 95       	ret
    1078:	25 b3       	in	r18, 0x15	; 21
    107a:	81 e0       	ldi	r24, 0x01	; 1
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	01 80       	ldd	r0, Z+1	; 0x01
    1080:	02 c0       	rjmp	.+4      	; 0x1086 <DIO_Initpin+0x14c>
    1082:	88 0f       	add	r24, r24
    1084:	99 1f       	adc	r25, r25
    1086:	0a 94       	dec	r0
<<<<<<< HEAD
    1088:	e2 f7       	brpl	.-8      	; 0x1082 <DIO_Initpin+0x1ac>
    108a:	82 2b       	or	r24, r18
    108c:	87 bb       	out	0x17, r24	; 23
    108e:	17 c0       	rjmp	.+46     	; 0x10be <DIO_Initpin+0x1e8>
			case DIO_PORTC:	SET_BIT(DIO_PORTC_DDR_REG,config_ptr->dio_pin);	break;
    1090:	24 b3       	in	r18, 0x14	; 20
    1092:	81 e0       	ldi	r24, 0x01	; 1
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	01 80       	ldd	r0, Z+1	; 0x01
    1098:	02 c0       	rjmp	.+4      	; 0x109e <DIO_Initpin+0x1c8>
    109a:	88 0f       	add	r24, r24
    109c:	99 1f       	adc	r25, r25
    109e:	0a 94       	dec	r0
    10a0:	e2 f7       	brpl	.-8      	; 0x109a <DIO_Initpin+0x1c4>
    10a2:	82 2b       	or	r24, r18
    10a4:	84 bb       	out	0x14, r24	; 20
    10a6:	0b c0       	rjmp	.+22     	; 0x10be <DIO_Initpin+0x1e8>
			case DIO_PORTD:	SET_BIT(DIO_PORTD_DDR_REG,config_ptr->dio_pin);	break;
    10a8:	21 b3       	in	r18, 0x11	; 17
    10aa:	81 e0       	ldi	r24, 0x01	; 1
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	01 80       	ldd	r0, Z+1	; 0x01
    10b0:	02 c0       	rjmp	.+4      	; 0x10b6 <DIO_Initpin+0x1e0>
    10b2:	88 0f       	add	r24, r24
    10b4:	99 1f       	adc	r25, r25
    10b6:	0a 94       	dec	r0
    10b8:	e2 f7       	brpl	.-8      	; 0x10b2 <DIO_Initpin+0x1dc>
    10ba:	82 2b       	or	r24, r18
    10bc:	81 bb       	out	0x11, r24	; 17
			default:			break;
		}
		
		if (config_ptr->dio_initial_value == DIO_HIGH)
    10be:	83 81       	ldd	r24, Z+3	; 0x03
    10c0:	81 11       	cpse	r24, r1
    10c2:	39 c0       	rjmp	.+114    	; 0x1136 <DIO_Initpin+0x260>
		{
			switch(config_ptr->dio_port)
    10c4:	80 81       	ld	r24, Z
    10c6:	81 30       	cpi	r24, 0x01	; 1
    10c8:	91 f0       	breq	.+36     	; 0x10ee <DIO_Initpin+0x218>
    10ca:	28 f0       	brcs	.+10     	; 0x10d6 <DIO_Initpin+0x200>
    10cc:	82 30       	cpi	r24, 0x02	; 2
    10ce:	d9 f0       	breq	.+54     	; 0x1106 <DIO_Initpin+0x230>
    10d0:	83 30       	cpi	r24, 0x03	; 3
    10d2:	29 f1       	breq	.+74     	; 0x111e <DIO_Initpin+0x248>
    10d4:	08 95       	ret
			{
				
				case DIO_PORTA:	SET_BIT(DIO_PORTA_PORT_REG,config_ptr->dio_pin);	break;
    10d6:	2b b3       	in	r18, 0x1b	; 27
    10d8:	81 e0       	ldi	r24, 0x01	; 1
    10da:	90 e0       	ldi	r25, 0x00	; 0
    10dc:	01 80       	ldd	r0, Z+1	; 0x01
    10de:	02 c0       	rjmp	.+4      	; 0x10e4 <DIO_Initpin+0x20e>
    10e0:	88 0f       	add	r24, r24
    10e2:	99 1f       	adc	r25, r25
    10e4:	0a 94       	dec	r0
    10e6:	e2 f7       	brpl	.-8      	; 0x10e0 <DIO_Initpin+0x20a>
    10e8:	82 2b       	or	r24, r18
    10ea:	8b bb       	out	0x1b, r24	; 27
    10ec:	08 95       	ret
				case DIO_PORTB:	SET_BIT(DIO_PORTB_PORT_REG,config_ptr->dio_pin);	break;
    10ee:	28 b3       	in	r18, 0x18	; 24
    10f0:	81 e0       	ldi	r24, 0x01	; 1
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	01 80       	ldd	r0, Z+1	; 0x01
    10f6:	02 c0       	rjmp	.+4      	; 0x10fc <DIO_Initpin+0x226>
    10f8:	88 0f       	add	r24, r24
    10fa:	99 1f       	adc	r25, r25
    10fc:	0a 94       	dec	r0
    10fe:	e2 f7       	brpl	.-8      	; 0x10f8 <DIO_Initpin+0x222>
    1100:	82 2b       	or	r24, r18
    1102:	88 bb       	out	0x18, r24	; 24
    1104:	08 95       	ret
				case DIO_PORTC:	SET_BIT(DIO_PORTC_PORT_REG,config_ptr->dio_pin);	break;
    1106:	25 b3       	in	r18, 0x15	; 21
    1108:	81 e0       	ldi	r24, 0x01	; 1
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	01 80       	ldd	r0, Z+1	; 0x01
    110e:	02 c0       	rjmp	.+4      	; 0x1114 <DIO_Initpin+0x23e>
    1110:	88 0f       	add	r24, r24
    1112:	99 1f       	adc	r25, r25
    1114:	0a 94       	dec	r0
    1116:	e2 f7       	brpl	.-8      	; 0x1110 <DIO_Initpin+0x23a>
    1118:	82 2b       	or	r24, r18
    111a:	85 bb       	out	0x15, r24	; 21
    111c:	08 95       	ret
				case DIO_PORTD:	SET_BIT(DIO_PORTD_PORT_REG,config_ptr->dio_pin);	break;
    111e:	22 b3       	in	r18, 0x12	; 18
    1120:	81 e0       	ldi	r24, 0x01	; 1
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	01 80       	ldd	r0, Z+1	; 0x01
    1126:	02 c0       	rjmp	.+4      	; 0x112c <DIO_Initpin+0x256>
    1128:	88 0f       	add	r24, r24
    112a:	99 1f       	adc	r25, r25
    112c:	0a 94       	dec	r0
    112e:	e2 f7       	brpl	.-8      	; 0x1128 <DIO_Initpin+0x252>
    1130:	82 2b       	or	r24, r18
    1132:	82 bb       	out	0x12, r24	; 18
    1134:	08 95       	ret
			}
			
		}
		else
		{
			switch(config_ptr->dio_port)
    1136:	80 81       	ld	r24, Z
    1138:	81 30       	cpi	r24, 0x01	; 1
    113a:	99 f0       	breq	.+38     	; 0x1162 <DIO_Initpin+0x28c>
    113c:	28 f0       	brcs	.+10     	; 0x1148 <DIO_Initpin+0x272>
    113e:	82 30       	cpi	r24, 0x02	; 2
    1140:	e9 f0       	breq	.+58     	; 0x117c <DIO_Initpin+0x2a6>
    1142:	83 30       	cpi	r24, 0x03	; 3
    1144:	41 f1       	breq	.+80     	; 0x1196 <DIO_Initpin+0x2c0>
    1146:	08 95       	ret
			{
				
				case DIO_PORTA:	CLEAR_BIT(DIO_PORTA_PORT_REG,config_ptr->dio_pin);	break;
    1148:	2b b3       	in	r18, 0x1b	; 27
    114a:	81 e0       	ldi	r24, 0x01	; 1
    114c:	90 e0       	ldi	r25, 0x00	; 0
    114e:	01 80       	ldd	r0, Z+1	; 0x01
    1150:	02 c0       	rjmp	.+4      	; 0x1156 <DIO_Initpin+0x280>
    1152:	88 0f       	add	r24, r24
    1154:	99 1f       	adc	r25, r25
    1156:	0a 94       	dec	r0
    1158:	e2 f7       	brpl	.-8      	; 0x1152 <DIO_Initpin+0x27c>
    115a:	80 95       	com	r24
    115c:	82 23       	and	r24, r18
    115e:	8b bb       	out	0x1b, r24	; 27
    1160:	08 95       	ret
				case DIO_PORTB:	CLEAR_BIT(DIO_PORTB_PORT_REG,config_ptr->dio_pin);	break;
    1162:	28 b3       	in	r18, 0x18	; 24
    1164:	81 e0       	ldi	r24, 0x01	; 1
    1166:	90 e0       	ldi	r25, 0x00	; 0
    1168:	01 80       	ldd	r0, Z+1	; 0x01
    116a:	02 c0       	rjmp	.+4      	; 0x1170 <DIO_Initpin+0x29a>
    116c:	88 0f       	add	r24, r24
    116e:	99 1f       	adc	r25, r25
    1170:	0a 94       	dec	r0
    1172:	e2 f7       	brpl	.-8      	; 0x116c <DIO_Initpin+0x296>
    1174:	80 95       	com	r24
    1176:	82 23       	and	r24, r18
    1178:	88 bb       	out	0x18, r24	; 24
    117a:	08 95       	ret
				case DIO_PORTC:	CLEAR_BIT(DIO_PORTC_PORT_REG,config_ptr->dio_pin);	break;
    117c:	25 b3       	in	r18, 0x15	; 21
    117e:	81 e0       	ldi	r24, 0x01	; 1
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	01 80       	ldd	r0, Z+1	; 0x01
    1184:	02 c0       	rjmp	.+4      	; 0x118a <DIO_Initpin+0x2b4>
    1186:	88 0f       	add	r24, r24
    1188:	99 1f       	adc	r25, r25
    118a:	0a 94       	dec	r0
    118c:	e2 f7       	brpl	.-8      	; 0x1186 <DIO_Initpin+0x2b0>
    118e:	80 95       	com	r24
    1190:	82 23       	and	r24, r18
    1192:	85 bb       	out	0x15, r24	; 21
    1194:	08 95       	ret
				case DIO_PORTD:	CLEAR_BIT(DIO_PORTD_PORT_REG,config_ptr->dio_pin);	break;
    1196:	22 b3       	in	r18, 0x12	; 18
    1198:	81 e0       	ldi	r24, 0x01	; 1
    119a:	90 e0       	ldi	r25, 0x00	; 0
    119c:	01 80       	ldd	r0, Z+1	; 0x01
    119e:	02 c0       	rjmp	.+4      	; 0x11a4 <DIO_Initpin+0x2ce>
    11a0:	88 0f       	add	r24, r24
    11a2:	99 1f       	adc	r25, r25
    11a4:	0a 94       	dec	r0
    11a6:	e2 f7       	brpl	.-8      	; 0x11a0 <DIO_Initpin+0x2ca>
    11a8:	80 95       	com	r24
    11aa:	82 23       	and	r24, r18
    11ac:	82 bb       	out	0x12, r24	; 18
    11ae:	08 95       	ret

000011b0 <ICU_getValue>:
}
 
 
void ICU_getValue(u32 *u32_l_ICR_value)
{
	*u32_l_ICR_value = ICU_g_Count;
    11b0:	20 91 f8 00 	lds	r18, 0x00F8	; 0x8000f8 <ICU_g_Count>
    11b4:	30 91 f9 00 	lds	r19, 0x00F9	; 0x8000f9 <ICU_g_Count+0x1>
    11b8:	fc 01       	movw	r30, r24
    11ba:	31 83       	std	Z+1, r19	; 0x01
    11bc:	20 83       	st	Z, r18
    11be:	08 95       	ret

000011c0 <EXI_enablePIE>:
 */

void EXI_enablePIE( Uchar8_t u8_a_interruptId, Uchar8_t u8_a_senseControl )
{

        SET_BIT(TIMER_U8_SREG_REG, GLOBAL_INTERRUPT_ENABLE_BIT);
    11c0:	8f b7       	in	r24, 0x3f	; 63
    11c2:	80 68       	ori	r24, 0x80	; 128
    11c4:	8f bf       	out	0x3f, r24	; 63

        SET_BIT( EXI_U8_GICR_REG, EXI_U8_INT0_BIT );
    11c6:	8b b7       	in	r24, 0x3b	; 59
    11c8:	80 64       	ori	r24, 0x40	; 64
    11ca:	8b bf       	out	0x3b, r24	; 59

                /* Check 1.1.1: Required SenseControl */
                switch ( u8_a_senseControl )
    11cc:	61 30       	cpi	r22, 0x01	; 1
    11ce:	69 f0       	breq	.+26     	; 0x11ea <EXI_enablePIE+0x2a>
    11d0:	28 f0       	brcs	.+10     	; 0x11dc <EXI_enablePIE+0x1c>
    11d2:	62 30       	cpi	r22, 0x02	; 2
    11d4:	89 f0       	breq	.+34     	; 0x11f8 <EXI_enablePIE+0x38>
    11d6:	63 30       	cpi	r22, 0x03	; 3
    11d8:	b1 f0       	breq	.+44     	; 0x1206 <EXI_enablePIE+0x46>
    11da:	08 95       	ret
                {
                    case EXI_U8_SENSE_LOW_LEVEL		: CLEAR_BIT( EXI_U8_MCUCR_REG, EXI_U8_ISC00_BIT ); CLEAR_BIT( EXI_U8_MCUCR_REG, EXI_U8_ISC01_BIT ); break;
    11dc:	85 b7       	in	r24, 0x35	; 53
    11de:	8e 7f       	andi	r24, 0xFE	; 254
    11e0:	85 bf       	out	0x35, r24	; 53
    11e2:	85 b7       	in	r24, 0x35	; 53
    11e4:	8d 7f       	andi	r24, 0xFD	; 253
    11e6:	85 bf       	out	0x35, r24	; 53
    11e8:	08 95       	ret
                    case EXI_U8_SENSE_LOGICAL_CHANGE: SET_BIT( EXI_U8_MCUCR_REG, EXI_U8_ISC00_BIT ); CLEAR_BIT( EXI_U8_MCUCR_REG, EXI_U8_ISC01_BIT ); break;
    11ea:	85 b7       	in	r24, 0x35	; 53
    11ec:	81 60       	ori	r24, 0x01	; 1
    11ee:	85 bf       	out	0x35, r24	; 53
    11f0:	85 b7       	in	r24, 0x35	; 53
    11f2:	8d 7f       	andi	r24, 0xFD	; 253
    11f4:	85 bf       	out	0x35, r24	; 53
    11f6:	08 95       	ret
                    case EXI_U8_SENSE_FALLING_EDGE	: CLEAR_BIT( EXI_U8_MCUCR_REG, EXI_U8_ISC00_BIT ); SET_BIT( EXI_U8_MCUCR_REG, EXI_U8_ISC01_BIT ); break;
    11f8:	85 b7       	in	r24, 0x35	; 53
    11fa:	8e 7f       	andi	r24, 0xFE	; 254
    11fc:	85 bf       	out	0x35, r24	; 53
    11fe:	85 b7       	in	r24, 0x35	; 53
    1200:	82 60       	ori	r24, 0x02	; 2
    1202:	85 bf       	out	0x35, r24	; 53
    1204:	08 95       	ret
                    case EXI_U8_SENSE_RISING_EDGE	: SET_BIT( EXI_U8_MCUCR_REG, EXI_U8_ISC00_BIT ); SET_BIT( EXI_U8_MCUCR_REG, EXI_U8_ISC01_BIT ); break;
    1206:	85 b7       	in	r24, 0x35	; 53
    1208:	81 60       	ori	r24, 0x01	; 1
    120a:	85 bf       	out	0x35, r24	; 53
    120c:	85 b7       	in	r24, 0x35	; 53
    120e:	82 60       	ori	r24, 0x02	; 2
    1210:	85 bf       	out	0x35, r24	; 53
    1212:	08 95       	ret

00001214 <TIMER_tmr1NormalModeInit>:
 * @return An EN_TMR_ERROR_T value indicating the success or failure of the operation
 *         (TMR_OK if the operation succeeded, TMR_ERROR otherwise)
 */
EN_TIMER_ERROR_T TIMER_tmr1NormalModeInit(EN_TIMER_INTERRPUT_T en_a_interrputEnable)
{
	switch (en_a_interrputEnable)
    1214:	88 23       	and	r24, r24
    1216:	19 f0       	breq	.+6      	; 0x121e <TIMER_tmr1NormalModeInit+0xa>
    1218:	81 30       	cpi	r24, 0x01	; 1
    121a:	d9 f0       	breq	.+54     	; 0x1252 <TIMER_tmr1NormalModeInit+0x3e>
    121c:	2e c0       	rjmp	.+92     	; 0x127a <TIMER_tmr1NormalModeInit+0x66>
	{
	case ENABLED:
		//* select the normal mode for the timer, timer is not start yet.*//*
		CLEAR_BIT(TMR_U8_TCCR1A_REG, TMR_U8_WGM10_BIT);
    121e:	8f b5       	in	r24, 0x2f	; 47
    1220:	8e 7f       	andi	r24, 0xFE	; 254
    1222:	8f bd       	out	0x2f, r24	; 47
		CLEAR_BIT(TMR_U8_TCCR1A_REG, TMR_U8_WGM11_BIT);
    1224:	8f b5       	in	r24, 0x2f	; 47
    1226:	8d 7f       	andi	r24, 0xFD	; 253
    1228:	8f bd       	out	0x2f, r24	; 47
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_WGM12_BIT);
    122a:	8e b5       	in	r24, 0x2e	; 46
    122c:	87 7f       	andi	r24, 0xF7	; 247
    122e:	8e bd       	out	0x2e, r24	; 46
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_WGM13_BIT);
    1230:	8e b5       	in	r24, 0x2e	; 46
    1232:	8f 7e       	andi	r24, 0xEF	; 239
    1234:	8e bd       	out	0x2e, r24	; 46
		//*must be set for the non_PWM mode*//*
		SET_BIT(TMR_U8_TCCR1A_REG, TMR_U8_FOC1A_BIT);
    1236:	8f b5       	in	r24, 0x2f	; 47
    1238:	88 60       	ori	r24, 0x08	; 8
    123a:	8f bd       	out	0x2f, r24	; 47
		SET_BIT(TMR_U8_TCCR1A_REG, TMR_U8_FOC1B_BIT);
    123c:	8f b5       	in	r24, 0x2f	; 47
    123e:	84 60       	ori	r24, 0x04	; 4
    1240:	8f bd       	out	0x2f, r24	; 47
		//*Enable the global interrupt enable bit.*//*
		SET_BIT(TMR_U8_SREG_REG, GLOBAL_INTERRUPT_ENABLE_BIT);
    1242:	8f b7       	in	r24, 0x3f	; 63
    1244:	80 68       	ori	r24, 0x80	; 128
    1246:	8f bf       	out	0x3f, r24	; 63
		//* Enable the interrupt for timer0 overflow.*//*
		SET_BIT(TMR_U8_TIMSK_REG, TMR_U8_TOIE1_BIT);
    1248:	89 b7       	in	r24, 0x39	; 57
    124a:	84 60       	ori	r24, 0x04	; 4
    124c:	89 bf       	out	0x39, r24	; 57
		SET_BIT(TMR_U8_TCCR1A_REG, TMR_U8_FOC1B_BIT);
		break;
	default:
		return TIMER_ERROR;
	}
	return TIMER_OK;
    124e:	80 e0       	ldi	r24, 0x00	; 0
		SET_BIT(TMR_U8_TCCR1A_REG, TMR_U8_FOC1B_BIT);
		//*Enable the global interrupt enable bit.*//*
		SET_BIT(TMR_U8_SREG_REG, GLOBAL_INTERRUPT_ENABLE_BIT);
		//* Enable the interrupt for timer0 overflow.*//*
		SET_BIT(TMR_U8_TIMSK_REG, TMR_U8_TOIE1_BIT);
		break;
    1250:	08 95       	ret
	case DISABLED:
		//* select the normal mode for the timer, timer is not start yet.*//*
		CLEAR_BIT(TMR_U8_TCCR1A_REG, TMR_U8_WGM10_BIT);
    1252:	8f b5       	in	r24, 0x2f	; 47
    1254:	8e 7f       	andi	r24, 0xFE	; 254
    1256:	8f bd       	out	0x2f, r24	; 47
		CLEAR_BIT(TMR_U8_TCCR1A_REG, TMR_U8_WGM11_BIT);
    1258:	8f b5       	in	r24, 0x2f	; 47
    125a:	8d 7f       	andi	r24, 0xFD	; 253
    125c:	8f bd       	out	0x2f, r24	; 47
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_WGM12_BIT);
    125e:	8e b5       	in	r24, 0x2e	; 46
    1260:	87 7f       	andi	r24, 0xF7	; 247
    1262:	8e bd       	out	0x2e, r24	; 46
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_WGM13_BIT);
    1264:	8e b5       	in	r24, 0x2e	; 46
    1266:	8f 7e       	andi	r24, 0xEF	; 239
    1268:	8e bd       	out	0x2e, r24	; 46
		//*must be set for the non_PWM mode*//*
		SET_BIT(TMR_U8_TCCR1A_REG, TMR_U8_FOC1A_BIT);
    126a:	8f b5       	in	r24, 0x2f	; 47
    126c:	88 60       	ori	r24, 0x08	; 8
    126e:	8f bd       	out	0x2f, r24	; 47
		SET_BIT(TMR_U8_TCCR1A_REG, TMR_U8_FOC1B_BIT);
    1270:	8f b5       	in	r24, 0x2f	; 47
    1272:	84 60       	ori	r24, 0x04	; 4
    1274:	8f bd       	out	0x2f, r24	; 47
		break;
	default:
		return TIMER_ERROR;
	}
	return TIMER_OK;
    1276:	80 e0       	ldi	r24, 0x00	; 0
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_WGM12_BIT);
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_WGM13_BIT);
		//*must be set for the non_PWM mode*//*
		SET_BIT(TMR_U8_TCCR1A_REG, TMR_U8_FOC1A_BIT);
		SET_BIT(TMR_U8_TCCR1A_REG, TMR_U8_FOC1B_BIT);
		break;
    1278:	08 95       	ret
	default:
		return TIMER_ERROR;
    127a:	81 e0       	ldi	r24, 0x01	; 1
	}
	return TIMER_OK;
}
    127c:	08 95       	ret

0000127e <TIMER_tmr1Start>:
 *         (TMR_OK if the operation succeeded, TMR_ERROR otherwise)
 */
EN_TIMER_ERROR_T TIMER_tmr1Start(Uint16_t u16_a_prescaler)
{
	//select the required prescaler value
	switch(u16_a_prescaler)
    127e:	80 34       	cpi	r24, 0x40	; 64
    1280:	91 05       	cpc	r25, r1
    1282:	29 f1       	breq	.+74     	; 0x12ce <TIMER_tmr1Start+0x50>
    1284:	30 f4       	brcc	.+12     	; 0x1292 <TIMER_tmr1Start+0x14>
    1286:	81 30       	cpi	r24, 0x01	; 1
    1288:	91 05       	cpc	r25, r1
    128a:	59 f0       	breq	.+22     	; 0x12a2 <TIMER_tmr1Start+0x24>
    128c:	08 97       	sbiw	r24, 0x08	; 8
    128e:	a1 f0       	breq	.+40     	; 0x12b8 <TIMER_tmr1Start+0x3a>
    1290:	3f c0       	rjmp	.+126    	; 0x1310 <TIMER_tmr1Start+0x92>
    1292:	81 15       	cp	r24, r1
    1294:	21 e0       	ldi	r18, 0x01	; 1
    1296:	92 07       	cpc	r25, r18
    1298:	29 f1       	breq	.+74     	; 0x12e4 <TIMER_tmr1Start+0x66>
    129a:	81 15       	cp	r24, r1
    129c:	94 40       	sbci	r25, 0x04	; 4
    129e:	69 f1       	breq	.+90     	; 0x12fa <TIMER_tmr1Start+0x7c>
    12a0:	37 c0       	rjmp	.+110    	; 0x1310 <TIMER_tmr1Start+0x92>
	{
	case 1:
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS11_BIT);
    12a2:	8e b5       	in	r24, 0x2e	; 46
    12a4:	8d 7f       	andi	r24, 0xFD	; 253
    12a6:	8e bd       	out	0x2e, r24	; 46
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS12_BIT);
    12a8:	8e b5       	in	r24, 0x2e	; 46
    12aa:	8b 7f       	andi	r24, 0xFB	; 251
    12ac:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
    12ae:	8e b5       	in	r24, 0x2e	; 46
    12b0:	81 60       	ori	r24, 0x01	; 1
    12b2:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
		break;
	default:
		return TIMER_ERROR;
	}
	return TIMER_OK;
    12b4:	80 e0       	ldi	r24, 0x00	; 0
	{
	case 1:
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS11_BIT);
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS12_BIT);
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
		break;
    12b6:	08 95       	ret
	case 8:
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
    12b8:	8e b5       	in	r24, 0x2e	; 46
    12ba:	8e 7f       	andi	r24, 0xFE	; 254
    12bc:	8e bd       	out	0x2e, r24	; 46
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS12_BIT);
    12be:	8e b5       	in	r24, 0x2e	; 46
    12c0:	8b 7f       	andi	r24, 0xFB	; 251
    12c2:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS11_BIT);
    12c4:	8e b5       	in	r24, 0x2e	; 46
    12c6:	82 60       	ori	r24, 0x02	; 2
    12c8:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
		break;
	default:
		return TIMER_ERROR;
	}
	return TIMER_OK;
    12ca:	80 e0       	ldi	r24, 0x00	; 0
		break;
	case 8:
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS12_BIT);
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS11_BIT);
		break;
    12cc:	08 95       	ret
	case 64:
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS12_BIT);
    12ce:	8e b5       	in	r24, 0x2e	; 46
    12d0:	8b 7f       	andi	r24, 0xFB	; 251
    12d2:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS11_BIT);
    12d4:	8e b5       	in	r24, 0x2e	; 46
    12d6:	82 60       	ori	r24, 0x02	; 2
    12d8:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
    12da:	8e b5       	in	r24, 0x2e	; 46
    12dc:	81 60       	ori	r24, 0x01	; 1
    12de:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
		break;
	default:
		return TIMER_ERROR;
	}
	return TIMER_OK;
    12e0:	80 e0       	ldi	r24, 0x00	; 0
		break;
	case 64:
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS12_BIT);
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS11_BIT);
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
		break;
    12e2:	08 95       	ret
	case 256:
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS11_BIT);
    12e4:	8e b5       	in	r24, 0x2e	; 46
    12e6:	8d 7f       	andi	r24, 0xFD	; 253
    12e8:	8e bd       	out	0x2e, r24	; 46
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
    12ea:	8e b5       	in	r24, 0x2e	; 46
    12ec:	8e 7f       	andi	r24, 0xFE	; 254
    12ee:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS12_BIT);
    12f0:	8e b5       	in	r24, 0x2e	; 46
    12f2:	84 60       	ori	r24, 0x04	; 4
    12f4:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
		break;
	default:
		return TIMER_ERROR;
	}
	return TIMER_OK;
    12f6:	80 e0       	ldi	r24, 0x00	; 0
		break;
	case 256:
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS11_BIT);
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS12_BIT);
		break;
    12f8:	08 95       	ret
	case 1024:
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS11_BIT);
    12fa:	8e b5       	in	r24, 0x2e	; 46
    12fc:	8d 7f       	andi	r24, 0xFD	; 253
    12fe:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS12_BIT);
    1300:	8e b5       	in	r24, 0x2e	; 46
    1302:	84 60       	ori	r24, 0x04	; 4
    1304:	8e bd       	out	0x2e, r24	; 46
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
    1306:	8e b5       	in	r24, 0x2e	; 46
    1308:	81 60       	ori	r24, 0x01	; 1
    130a:	8e bd       	out	0x2e, r24	; 46
		break;
	default:
		return TIMER_ERROR;
	}
	return TIMER_OK;
    130c:	80 e0       	ldi	r24, 0x00	; 0
		break;
	case 1024:
		CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS11_BIT);
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS12_BIT);
		SET_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
		break;
    130e:	08 95       	ret
	default:
		return TIMER_ERROR;
    1310:	81 e0       	ldi	r24, 0x01	; 1
	}
	return TIMER_OK;
}
    1312:	08 95       	ret

00001314 <TIMER_tmr1Stop>:

void TIMER_tmr1Stop(void)
{
 //Stop the timer by clearing the prescaler

	CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS10_BIT);
    1314:	8e b5       	in	r24, 0x2e	; 46
    1316:	8e 7f       	andi	r24, 0xFE	; 254
    1318:	8e bd       	out	0x2e, r24	; 46
	CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS11_BIT);
    131a:	8e b5       	in	r24, 0x2e	; 46
    131c:	8d 7f       	andi	r24, 0xFD	; 253
    131e:	8e bd       	out	0x2e, r24	; 46
	CLEAR_BIT(TMR_U8_TCCR1B_REG, TMR_U8_CS12_BIT);
    1320:	8e b5       	in	r24, 0x2e	; 46
    1322:	8b 7f       	andi	r24, 0xFB	; 251
    1324:	8e bd       	out	0x2e, r24	; 46
    1326:	08 95       	ret

00001328 <ICU_RisingEdgeCapture>:
 * @param[in] void.
 *
 * @return void.
 */
void ICU_RisingEdgeCapture(void)
{
    1328:	cf 93       	push	r28
    132a:	df 93       	push	r29
	TIMER_tmr1NormalModeInit(ST_g_softwareICU->timer1_ISR);
    132c:	c9 e8       	ldi	r28, 0x89	; 137
    132e:	d0 e0       	ldi	r29, 0x00	; 0
    1330:	8b 81       	ldd	r24, Y+3	; 0x03
    1332:	0e 94 0a 09 	call	0x1214	; 0x1214 <TIMER_tmr1NormalModeInit>
	TIMER_tmr1Stop();
    1336:	0e 94 8a 09 	call	0x1314	; 0x1314 <TIMER_tmr1Stop>
	EXI_enablePIE( ST_g_softwareICU->ICU_exti, ST_g_softwareICU->ICU_firstSenseControl);
    133a:	69 81       	ldd	r22, Y+1	; 0x01
    133c:	88 81       	ld	r24, Y
    133e:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <EXI_enablePIE>
	ICU_g_edgeFlag = RISING;
    1342:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <ICU_g_edgeFlag>
	TIMER_tmr1Start(1);
    1346:	81 e0       	ldi	r24, 0x01	; 1
    1348:	90 e0       	ldi	r25, 0x00	; 0
    134a:	0e 94 3f 09 	call	0x127e	; 0x127e <TIMER_tmr1Start>
}
    134e:	df 91       	pop	r29
    1350:	cf 91       	pop	r28
    1352:	08 95       	ret

00001354 <__vector_1>:
	
/**
 * ISR function implementation of INT0
 * */
ISR(EXT_INT_0)
{
    1354:	1f 92       	push	r1
    1356:	0f 92       	push	r0
    1358:	0f b6       	in	r0, 0x3f	; 63
    135a:	0f 92       	push	r0
    135c:	11 24       	eor	r1, r1
    135e:	2f 93       	push	r18
    1360:	3f 93       	push	r19
    1362:	4f 93       	push	r20
    1364:	5f 93       	push	r21
    1366:	6f 93       	push	r22
    1368:	7f 93       	push	r23
    136a:	8f 93       	push	r24
    136c:	9f 93       	push	r25
    136e:	af 93       	push	r26
    1370:	bf 93       	push	r27
    1372:	ef 93       	push	r30
    1374:	ff 93       	push	r31
    /* Save the current value of the timer/counter register  */
	TIMER_g_timer1RegValue = TMR_U16_TCNT1_REG;
    1376:	8c b5       	in	r24, 0x2c	; 44
    1378:	9d b5       	in	r25, 0x2d	; 45
    137a:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <TIMER_g_timer1RegValue+0x1>
    137e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <TIMER_g_timer1RegValue>
	if(ICU_g_edgeFlag == RISING)
    1382:	20 91 0d 01 	lds	r18, 0x010D	; 0x80010d <ICU_g_edgeFlag>
    1386:	21 11       	cpse	r18, r1
    1388:	14 c0       	rjmp	.+40     	; 0x13b2 <__vector_1+0x5e>
	{
		ICU_g_ValueRising = TIMER_g_timer1RegValue;
    138a:	90 93 fe 00 	sts	0x00FE, r25	; 0x8000fe <ICU_g_ValueRising+0x1>
    138e:	80 93 fd 00 	sts	0x00FD, r24	; 0x8000fd <ICU_g_ValueRising>
		/* Clear Timer counter */
		TMR_U16_TCNT1_REG = 0;
    1392:	1d bc       	out	0x2d, r1	; 45
    1394:	1c bc       	out	0x2c, r1	; 44
		/* Set the external interrupt event at falling edge.*/
		EXI_enablePIE( ST_g_softwareICU->ICU_exti, ST_g_softwareICU->ICU_secondSenseControl );
    1396:	e9 e8       	ldi	r30, 0x89	; 137
    1398:	f0 e0       	ldi	r31, 0x00	; 0
    139a:	62 81       	ldd	r22, Z+2	; 0x02
    139c:	80 81       	ld	r24, Z
    139e:	0e 94 e0 08 	call	0x11c0	; 0x11c0 <EXI_enablePIE>
		/* Clear Timer overflow count */
		u32_g_timer1Overflow = 0;
    13a2:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <u32_g_timer1Overflow+0x1>
    13a6:	10 92 ff 00 	sts	0x00FF, r1	; 0x8000ff <u32_g_timer1Overflow>
		ICU_g_edgeFlag = FALLING;
    13aa:	81 e0       	ldi	r24, 0x01	; 1
    13ac:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <ICU_g_edgeFlag>
    13b0:	13 c0       	rjmp	.+38     	; 0x13d8 <__vector_1+0x84>
	}
	else
	{
		ICU_g_ValueFalling = TIMER_g_timer1RegValue;
    13b2:	90 93 fc 00 	sts	0x00FC, r25	; 0x8000fc <ICU_g_ValueFalling+0x1>
    13b6:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <ICU_g_ValueFalling>
		ICU_g_Count = TIMER_g_timer1RegValue + (65535 * u32_g_timer1Overflow);
    13ba:	20 91 ff 00 	lds	r18, 0x00FF	; 0x8000ff <u32_g_timer1Overflow>
    13be:	30 91 00 01 	lds	r19, 0x0100	; 0x800100 <u32_g_timer1Overflow+0x1>
    13c2:	82 1b       	sub	r24, r18
    13c4:	93 0b       	sbc	r25, r19
    13c6:	90 93 f9 00 	sts	0x00F9, r25	; 0x8000f9 <ICU_g_Count+0x1>
    13ca:	80 93 f8 00 	sts	0x00F8, r24	; 0x8000f8 <ICU_g_Count>
		/* Stop timer1 */
		TIMER_tmr1Stop();
    13ce:	0e 94 8a 09 	call	0x1314	; 0x1314 <TIMER_tmr1Stop>
		ICU_g_flag = 1;
    13d2:	81 e0       	ldi	r24, 0x01	; 1
    13d4:	80 93 fa 00 	sts	0x00FA, r24	; 0x8000fa <ICU_g_flag>
	}

}	
    13d8:	ff 91       	pop	r31
    13da:	ef 91       	pop	r30
    13dc:	bf 91       	pop	r27
    13de:	af 91       	pop	r26
    13e0:	9f 91       	pop	r25
    13e2:	8f 91       	pop	r24
    13e4:	7f 91       	pop	r23
    13e6:	6f 91       	pop	r22
    13e8:	5f 91       	pop	r21
    13ea:	4f 91       	pop	r20
    13ec:	3f 91       	pop	r19
    13ee:	2f 91       	pop	r18
    13f0:	0f 90       	pop	r0
    13f2:	0f be       	out	0x3f, r0	; 63
    13f4:	0f 90       	pop	r0
    13f6:	1f 90       	pop	r1
    13f8:	18 95       	reti

000013fa <__vector_9>:
		
ISR(TIM1_OVF_INT)
{
    13fa:	1f 92       	push	r1
    13fc:	0f 92       	push	r0
    13fe:	0f b6       	in	r0, 0x3f	; 63
    1400:	0f 92       	push	r0
    1402:	11 24       	eor	r1, r1
    1404:	8f 93       	push	r24
    1406:	9f 93       	push	r25
	u32_g_timer1Overflow++;
    1408:	80 91 ff 00 	lds	r24, 0x00FF	; 0x8000ff <u32_g_timer1Overflow>
    140c:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <u32_g_timer1Overflow+0x1>
    1410:	01 96       	adiw	r24, 0x01	; 1
    1412:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <u32_g_timer1Overflow+0x1>
    1416:	80 93 ff 00 	sts	0x00FF, r24	; 0x8000ff <u32_g_timer1Overflow>
    141a:	9f 91       	pop	r25
    141c:	8f 91       	pop	r24
    141e:	0f 90       	pop	r0
    1420:	0f be       	out	0x3f, r0	; 63
    1422:	0f 90       	pop	r0
    1424:	1f 90       	pop	r1
    1426:	18 95       	reti

00001428 <MCU_vEnableInterrupt>:

#include"MCU_Interface.h"

void MCU_vEnableInterrupt(void)
{
	SET_BIT(SREG_REG,7);
    1428:	8f b7       	in	r24, 0x3f	; 63
    142a:	80 68       	ori	r24, 0x80	; 128
    142c:	8f bf       	out	0x3f, r24	; 63
    142e:	08 95       	ret

00001430 <TIMER0_PWM_ExecutedFunction>:
	u8_g_OnTime =  ((u8_a_dutyCycle * HALF_REG_SIZE)/100)-ERROR_HANDLER;
	u8_g_OffTime = (((100 -u8_a_dutyCycle) * HALF_REG_SIZE)/100)-ERROR_HANDLER;
	TCNT0 = REG_SIZE - u8_g_OnTime ;
	TIMER0_start();
	
}
    1430:	cf 93       	push	r28
    1432:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <u8_g_on_off_state>
    1436:	88 23       	and	r24, r24
    1438:	a1 f0       	breq	.+40     	; 0x1462 <TIMER0_PWM_ExecutedFunction+0x32>
    143a:	c0 e0       	ldi	r28, 0x00	; 0
    143c:	2e c0       	rjmp	.+92     	; 0x149a <TIMER0_PWM_ExecutedFunction+0x6a>
    143e:	ec 2f       	mov	r30, r28
    1440:	f0 e0       	ldi	r31, 0x00	; 0
    1442:	cf 01       	movw	r24, r30
    1444:	88 0f       	add	r24, r24
    1446:	99 1f       	adc	r25, r25
    1448:	88 0f       	add	r24, r24
    144a:	99 1f       	adc	r25, r25
    144c:	e8 0f       	add	r30, r24
    144e:	f9 1f       	adc	r31, r25
    1450:	eb 51       	subi	r30, 0x1B	; 27
    1452:	ff 4f       	sbci	r31, 0xFF	; 255
    1454:	41 e0       	ldi	r20, 0x01	; 1
    1456:	61 81       	ldd	r22, Z+1	; 0x01
    1458:	80 81       	ld	r24, Z
    145a:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_WritePin>
    145e:	cf 5f       	subi	r28, 0xFF	; 255
    1460:	01 c0       	rjmp	.+2      	; 0x1464 <TIMER0_PWM_ExecutedFunction+0x34>
    1462:	c0 e0       	ldi	r28, 0x00	; 0
    1464:	c2 30       	cpi	r28, 0x02	; 2
    1466:	58 f3       	brcs	.-42     	; 0x143e <TIMER0_PWM_ExecutedFunction+0xe>
    1468:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <u8_g_OffTime>
    146c:	81 95       	neg	r24
    146e:	82 bf       	out	0x32, r24	; 50
    1470:	81 e0       	ldi	r24, 0x01	; 1
    1472:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <u8_g_on_off_state>
    1476:	19 c0       	rjmp	.+50     	; 0x14aa <TIMER0_PWM_ExecutedFunction+0x7a>
    1478:	ec 2f       	mov	r30, r28
    147a:	f0 e0       	ldi	r31, 0x00	; 0
    147c:	cf 01       	movw	r24, r30
    147e:	88 0f       	add	r24, r24
    1480:	99 1f       	adc	r25, r25
    1482:	88 0f       	add	r24, r24
    1484:	99 1f       	adc	r25, r25
    1486:	e8 0f       	add	r30, r24
    1488:	f9 1f       	adc	r31, r25
    148a:	eb 51       	subi	r30, 0x1B	; 27
    148c:	ff 4f       	sbci	r31, 0xFF	; 255
    148e:	40 e0       	ldi	r20, 0x00	; 0
    1490:	61 81       	ldd	r22, Z+1	; 0x01
    1492:	80 81       	ld	r24, Z
    1494:	0e 94 c6 06 	call	0xd8c	; 0xd8c <DIO_WritePin>
    1498:	cf 5f       	subi	r28, 0xFF	; 255
    149a:	c2 30       	cpi	r28, 0x02	; 2
    149c:	68 f3       	brcs	.-38     	; 0x1478 <TIMER0_PWM_ExecutedFunction+0x48>
    149e:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <u8_g_OnTime>
    14a2:	81 95       	neg	r24
    14a4:	82 bf       	out	0x32, r24	; 50
    14a6:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <u8_g_on_off_state>
    14aa:	cf 91       	pop	r28
    14ac:	08 95       	ret

000014ae <__vector_11>:
	}
}


ISR(TIM0_OVF_INT)
{
    14ae:	1f 92       	push	r1
    14b0:	0f 92       	push	r0
    14b2:	0f b6       	in	r0, 0x3f	; 63
    14b4:	0f 92       	push	r0
    14b6:	11 24       	eor	r1, r1
    14b8:	2f 93       	push	r18
    14ba:	3f 93       	push	r19
    14bc:	4f 93       	push	r20
    14be:	5f 93       	push	r21
    14c0:	6f 93       	push	r22
    14c2:	7f 93       	push	r23
    14c4:	8f 93       	push	r24
    14c6:	9f 93       	push	r25
    14c8:	af 93       	push	r26
    14ca:	bf 93       	push	r27
    14cc:	ef 93       	push	r30
    14ce:	ff 93       	push	r31
	TIMER0_PWM_ExecutedFunction();
    14d0:	0e 94 18 0a 	call	0x1430	; 0x1430 <TIMER0_PWM_ExecutedFunction>
}
    14d4:	ff 91       	pop	r31
    14d6:	ef 91       	pop	r30
    14d8:	bf 91       	pop	r27
    14da:	af 91       	pop	r26
    14dc:	9f 91       	pop	r25
    14de:	8f 91       	pop	r24
    14e0:	7f 91       	pop	r23
    14e2:	6f 91       	pop	r22
    14e4:	5f 91       	pop	r21
    14e6:	4f 91       	pop	r20
    14e8:	3f 91       	pop	r19
    14ea:	2f 91       	pop	r18
    14ec:	0f 90       	pop	r0
    14ee:	0f be       	out	0x3f, r0	; 63
    14f0:	0f 90       	pop	r0
    14f2:	1f 90       	pop	r1
    14f4:	18 95       	reti

000014f6 <TIMER_TMR2NormalModeInit>:
        void_g_pfOvfInterruptAction = void_a_pfOvfInterruptAction;
        return TIMER_OK;
    } else {
        return TIMER_ERROR;
    }
}
    14f6:	88 23       	and	r24, r24
    14f8:	19 f0       	breq	.+6      	; 0x1500 <TIMER_TMR2NormalModeInit+0xa>
    14fa:	81 30       	cpi	r24, 0x01	; 1
    14fc:	79 f0       	breq	.+30     	; 0x151c <TIMER_TMR2NormalModeInit+0x26>
    14fe:	16 c0       	rjmp	.+44     	; 0x152c <TIMER_TMR2NormalModeInit+0x36>
    1500:	85 b5       	in	r24, 0x25	; 37
    1502:	8f 7b       	andi	r24, 0xBF	; 191
    1504:	85 bd       	out	0x25, r24	; 37
    1506:	85 b5       	in	r24, 0x25	; 37
    1508:	87 7f       	andi	r24, 0xF7	; 247
    150a:	85 bd       	out	0x25, r24	; 37
    150c:	8f b7       	in	r24, 0x3f	; 63
    150e:	80 68       	ori	r24, 0x80	; 128
    1510:	8f bf       	out	0x3f, r24	; 63
    1512:	89 b7       	in	r24, 0x39	; 57
    1514:	80 64       	ori	r24, 0x40	; 64
    1516:	89 bf       	out	0x39, r24	; 57
    1518:	80 e0       	ldi	r24, 0x00	; 0
    151a:	08 95       	ret
    151c:	85 b5       	in	r24, 0x25	; 37
    151e:	8f 7b       	andi	r24, 0xBF	; 191
    1520:	85 bd       	out	0x25, r24	; 37
    1522:	85 b5       	in	r24, 0x25	; 37
    1524:	87 7f       	andi	r24, 0xF7	; 247
    1526:	85 bd       	out	0x25, r24	; 37
    1528:	80 e0       	ldi	r24, 0x00	; 0
    152a:	08 95       	ret
    152c:	81 e0       	ldi	r24, 0x01	; 1
    152e:	08 95       	ret

00001530 <TIMER_TMR2Start>:
    1530:	80 34       	cpi	r24, 0x40	; 64
    1532:	91 05       	cpc	r25, r1
    1534:	c1 f1       	breq	.+112    	; 0x15a6 <TIMER_TMR2Start+0x76>
    1536:	50 f4       	brcc	.+20     	; 0x154c <TIMER_TMR2Start+0x1c>
    1538:	88 30       	cpi	r24, 0x08	; 8
    153a:	91 05       	cpc	r25, r1
    153c:	01 f1       	breq	.+64     	; 0x157e <TIMER_TMR2Start+0x4e>
    153e:	80 32       	cpi	r24, 0x20	; 32
    1540:	91 05       	cpc	r25, r1
    1542:	41 f1       	breq	.+80     	; 0x1594 <TIMER_TMR2Start+0x64>
    1544:	01 97       	sbiw	r24, 0x01	; 1
    1546:	09 f0       	breq	.+2      	; 0x154a <TIMER_TMR2Start+0x1a>
    1548:	58 c0       	rjmp	.+176    	; 0x15fa <TIMER_TMR2Start+0xca>
    154a:	0e c0       	rjmp	.+28     	; 0x1568 <TIMER_TMR2Start+0x38>
    154c:	81 15       	cp	r24, r1
    154e:	21 e0       	ldi	r18, 0x01	; 1
    1550:	92 07       	cpc	r25, r18
    1552:	e9 f1       	breq	.+122    	; 0x15ce <TIMER_TMR2Start+0x9e>
    1554:	81 15       	cp	r24, r1
    1556:	24 e0       	ldi	r18, 0x04	; 4
    1558:	92 07       	cpc	r25, r18
    155a:	09 f4       	brne	.+2      	; 0x155e <TIMER_TMR2Start+0x2e>
    155c:	43 c0       	rjmp	.+134    	; 0x15e4 <TIMER_TMR2Start+0xb4>
    155e:	80 38       	cpi	r24, 0x80	; 128
    1560:	91 05       	cpc	r25, r1
    1562:	09 f0       	breq	.+2      	; 0x1566 <TIMER_TMR2Start+0x36>
    1564:	4a c0       	rjmp	.+148    	; 0x15fa <TIMER_TMR2Start+0xca>
    1566:	28 c0       	rjmp	.+80     	; 0x15b8 <TIMER_TMR2Start+0x88>
    1568:	85 b5       	in	r24, 0x25	; 37
    156a:	8d 7f       	andi	r24, 0xFD	; 253
    156c:	85 bd       	out	0x25, r24	; 37
    156e:	85 b5       	in	r24, 0x25	; 37
    1570:	8b 7f       	andi	r24, 0xFB	; 251
    1572:	85 bd       	out	0x25, r24	; 37
    1574:	85 b5       	in	r24, 0x25	; 37
    1576:	81 60       	ori	r24, 0x01	; 1
    1578:	85 bd       	out	0x25, r24	; 37
    157a:	80 e0       	ldi	r24, 0x00	; 0
    157c:	08 95       	ret
    157e:	85 b5       	in	r24, 0x25	; 37
    1580:	8e 7f       	andi	r24, 0xFE	; 254
    1582:	85 bd       	out	0x25, r24	; 37
    1584:	85 b5       	in	r24, 0x25	; 37
    1586:	8b 7f       	andi	r24, 0xFB	; 251
    1588:	85 bd       	out	0x25, r24	; 37
    158a:	85 b5       	in	r24, 0x25	; 37
    158c:	82 60       	ori	r24, 0x02	; 2
    158e:	85 bd       	out	0x25, r24	; 37
    1590:	80 e0       	ldi	r24, 0x00	; 0
    1592:	08 95       	ret
    1594:	85 b5       	in	r24, 0x25	; 37
    1596:	8b 7f       	andi	r24, 0xFB	; 251
    1598:	85 bd       	out	0x25, r24	; 37
    159a:	85 b5       	in	r24, 0x25	; 37
    159c:	82 60       	ori	r24, 0x02	; 2
    159e:	85 bd       	out	0x25, r24	; 37
    15a0:	85 b5       	in	r24, 0x25	; 37
    15a2:	81 60       	ori	r24, 0x01	; 1
    15a4:	85 bd       	out	0x25, r24	; 37
    15a6:	85 b5       	in	r24, 0x25	; 37
    15a8:	84 60       	ori	r24, 0x04	; 4
    15aa:	85 bd       	out	0x25, r24	; 37
    15ac:	85 b5       	in	r24, 0x25	; 37
    15ae:	8d 7f       	andi	r24, 0xFD	; 253
    15b0:	85 bd       	out	0x25, r24	; 37
    15b2:	85 b5       	in	r24, 0x25	; 37
    15b4:	8e 7f       	andi	r24, 0xFE	; 254
    15b6:	85 bd       	out	0x25, r24	; 37
    15b8:	85 b5       	in	r24, 0x25	; 37
    15ba:	8b 7f       	andi	r24, 0xFB	; 251
    15bc:	85 bd       	out	0x25, r24	; 37
    15be:	85 b5       	in	r24, 0x25	; 37
    15c0:	8d 7f       	andi	r24, 0xFD	; 253
    15c2:	85 bd       	out	0x25, r24	; 37
    15c4:	85 b5       	in	r24, 0x25	; 37
    15c6:	81 60       	ori	r24, 0x01	; 1
    15c8:	85 bd       	out	0x25, r24	; 37
    15ca:	80 e0       	ldi	r24, 0x00	; 0
    15cc:	08 95       	ret
    15ce:	85 b5       	in	r24, 0x25	; 37
    15d0:	82 60       	ori	r24, 0x02	; 2
    15d2:	85 bd       	out	0x25, r24	; 37
    15d4:	85 b5       	in	r24, 0x25	; 37
    15d6:	8e 7f       	andi	r24, 0xFE	; 254
    15d8:	85 bd       	out	0x25, r24	; 37
    15da:	85 b5       	in	r24, 0x25	; 37
    15dc:	84 60       	ori	r24, 0x04	; 4
    15de:	85 bd       	out	0x25, r24	; 37
    15e0:	80 e0       	ldi	r24, 0x00	; 0
    15e2:	08 95       	ret
    15e4:	85 b5       	in	r24, 0x25	; 37
    15e6:	82 60       	ori	r24, 0x02	; 2
    15e8:	85 bd       	out	0x25, r24	; 37
    15ea:	85 b5       	in	r24, 0x25	; 37
    15ec:	84 60       	ori	r24, 0x04	; 4
    15ee:	85 bd       	out	0x25, r24	; 37
    15f0:	85 b5       	in	r24, 0x25	; 37
    15f2:	81 60       	ori	r24, 0x01	; 1
    15f4:	85 bd       	out	0x25, r24	; 37
    15f6:	80 e0       	ldi	r24, 0x00	; 0
    15f8:	08 95       	ret
    15fa:	81 e0       	ldi	r24, 0x01	; 1
    15fc:	08 95       	ret

000015fe <TMR_intDelay_ms>:
    15fe:	cf 92       	push	r12
    1600:	df 92       	push	r13
    1602:	ef 92       	push	r14
    1604:	ff 92       	push	r15
    1606:	bc 01       	movw	r22, r24
    1608:	80 e0       	ldi	r24, 0x00	; 0
    160a:	90 e0       	ldi	r25, 0x00	; 0
    160c:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <__floatunsisf>
    1610:	20 e0       	ldi	r18, 0x00	; 0
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	4a e7       	ldi	r20, 0x7A	; 122
    1616:	54 e4       	ldi	r21, 0x44	; 68
    1618:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <__divsf3>
    161c:	6b 01       	movw	r12, r22
    161e:	7c 01       	movw	r14, r24
    1620:	27 e3       	ldi	r18, 0x37	; 55
    1622:	37 e3       	ldi	r19, 0x37	; 55
    1624:	46 e8       	ldi	r20, 0x86	; 134
    1626:	56 e4       	ldi	r21, 0x46	; 70
    1628:	0e 94 fd 0d 	call	0x1bfa	; 0x1bfa <__gesf2>
    162c:	18 16       	cp	r1, r24
    162e:	0c f4       	brge	.+2      	; 0x1632 <TMR_intDelay_ms+0x34>
    1630:	7c c0       	rjmp	.+248    	; 0x172a <TMR_intDelay_ms+0x12c>
    1632:	15 bc       	out	0x25, r1	; 37
    1634:	2d eb       	ldi	r18, 0xBD	; 189
    1636:	37 e3       	ldi	r19, 0x37	; 55
    1638:	46 e8       	ldi	r20, 0x86	; 134
    163a:	5e e3       	ldi	r21, 0x3E	; 62
    163c:	c7 01       	movw	r24, r14
    163e:	b6 01       	movw	r22, r12
    1640:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <__cmpsf2>
    1644:	88 23       	and	r24, r24
    1646:	c4 f4       	brge	.+48     	; 0x1678 <TMR_intDelay_ms+0x7a>
    1648:	a7 01       	movw	r20, r14
    164a:	96 01       	movw	r18, r12
    164c:	6d eb       	ldi	r22, 0xBD	; 189
    164e:	77 e3       	ldi	r23, 0x37	; 55
    1650:	86 e8       	ldi	r24, 0x86	; 134
    1652:	9e e3       	ldi	r25, 0x3E	; 62
    1654:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__subsf3>
    1658:	2d eb       	ldi	r18, 0xBD	; 189
    165a:	37 e3       	ldi	r19, 0x37	; 55
    165c:	46 e8       	ldi	r20, 0x86	; 134
    165e:	5a e3       	ldi	r21, 0x3A	; 58
    1660:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <__divsf3>
    1664:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <__fixunssfsi>
    1668:	64 bd       	out	0x24, r22	; 36
    166a:	81 e0       	ldi	r24, 0x01	; 1
    166c:	90 e0       	ldi	r25, 0x00	; 0
    166e:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <u16_g_overflow2Numbers+0x1>
    1672:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <u16_g_overflow2Numbers>
    1676:	4f c0       	rjmp	.+158    	; 0x1716 <TMR_intDelay_ms+0x118>
    1678:	2d eb       	ldi	r18, 0xBD	; 189
    167a:	37 e3       	ldi	r19, 0x37	; 55
    167c:	46 e8       	ldi	r20, 0x86	; 134
    167e:	5e e3       	ldi	r21, 0x3E	; 62
    1680:	c7 01       	movw	r24, r14
    1682:	b6 01       	movw	r22, r12
    1684:	0e 94 64 0c 	call	0x18c8	; 0x18c8 <__cmpsf2>
    1688:	81 11       	cpse	r24, r1
    168a:	08 c0       	rjmp	.+16     	; 0x169c <TMR_intDelay_ms+0x9e>
    168c:	14 bc       	out	0x24, r1	; 36
    168e:	81 e0       	ldi	r24, 0x01	; 1
    1690:	90 e0       	ldi	r25, 0x00	; 0
    1692:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <u16_g_overflow2Numbers+0x1>
    1696:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <u16_g_overflow2Numbers>
    169a:	3d c0       	rjmp	.+122    	; 0x1716 <TMR_intDelay_ms+0x118>
    169c:	2d eb       	ldi	r18, 0xBD	; 189
    169e:	37 e3       	ldi	r19, 0x37	; 55
    16a0:	46 e8       	ldi	r20, 0x86	; 134
    16a2:	5e e3       	ldi	r21, 0x3E	; 62
    16a4:	c7 01       	movw	r24, r14
    16a6:	b6 01       	movw	r22, r12
    16a8:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <__divsf3>
    16ac:	0e 94 4d 0c 	call	0x189a	; 0x189a <ceil>
    16b0:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <__fixunssfsi>
    16b4:	70 93 09 01 	sts	0x0109, r23	; 0x800109 <u16_g_overflow2Numbers+0x1>
    16b8:	60 93 08 01 	sts	0x0108, r22	; 0x800108 <u16_g_overflow2Numbers>
    16bc:	80 e0       	ldi	r24, 0x00	; 0
    16be:	90 e0       	ldi	r25, 0x00	; 0
    16c0:	0e 94 0a 0d 	call	0x1a14	; 0x1a14 <__floatunsisf>
    16c4:	20 e0       	ldi	r18, 0x00	; 0
    16c6:	30 e0       	ldi	r19, 0x00	; 0
    16c8:	40 e8       	ldi	r20, 0x80	; 128
    16ca:	5f e3       	ldi	r21, 0x3F	; 63
    16cc:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__subsf3>
    16d0:	2d eb       	ldi	r18, 0xBD	; 189
    16d2:	37 e3       	ldi	r19, 0x37	; 55
    16d4:	46 e8       	ldi	r20, 0x86	; 134
    16d6:	5e e3       	ldi	r21, 0x3E	; 62
    16d8:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <__mulsf3>
    16dc:	9b 01       	movw	r18, r22
    16de:	ac 01       	movw	r20, r24
    16e0:	c7 01       	movw	r24, r14
    16e2:	b6 01       	movw	r22, r12
    16e4:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__subsf3>
    16e8:	2d eb       	ldi	r18, 0xBD	; 189
    16ea:	37 e3       	ldi	r19, 0x37	; 55
    16ec:	46 e8       	ldi	r20, 0x86	; 134
    16ee:	5a e3       	ldi	r21, 0x3A	; 58
    16f0:	0e 94 69 0c 	call	0x18d2	; 0x18d2 <__divsf3>
    16f4:	9b 01       	movw	r18, r22
    16f6:	ac 01       	movw	r20, r24
    16f8:	60 e0       	ldi	r22, 0x00	; 0
    16fa:	70 e0       	ldi	r23, 0x00	; 0
    16fc:	80 e8       	ldi	r24, 0x80	; 128
    16fe:	93 e4       	ldi	r25, 0x43	; 67
    1700:	0e 94 e0 0b 	call	0x17c0	; 0x17c0 <__subsf3>
    1704:	0e 94 db 0c 	call	0x19b6	; 0x19b6 <__fixunssfsi>
    1708:	64 bd       	out	0x24, r22	; 36
    170a:	84 b5       	in	r24, 0x24	; 36
    170c:	90 e0       	ldi	r25, 0x00	; 0
    170e:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <u16_g_tcnt2InitialVal+0x1>
    1712:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <u16_g_tcnt2InitialVal>
    1716:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <u16_g_overflow2Ticks+0x1>
    171a:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <u16_g_overflow2Ticks>
    171e:	80 e0       	ldi	r24, 0x00	; 0
    1720:	94 e0       	ldi	r25, 0x04	; 4
    1722:	0e 94 98 0a 	call	0x1530	; 0x1530 <TIMER_TMR2Start>
    1726:	80 e0       	ldi	r24, 0x00	; 0
    1728:	01 c0       	rjmp	.+2      	; 0x172c <TMR_intDelay_ms+0x12e>
    172a:	81 e0       	ldi	r24, 0x01	; 1
    172c:	ff 90       	pop	r15
    172e:	ef 90       	pop	r14
    1730:	df 90       	pop	r13
    1732:	cf 90       	pop	r12
    1734:	08 95       	ret

00001736 <TMR_TMR2Stop>:
    1736:	85 b5       	in	r24, 0x25	; 37
    1738:	8e 7f       	andi	r24, 0xFE	; 254
    173a:	85 bd       	out	0x25, r24	; 37
    173c:	85 b5       	in	r24, 0x25	; 37
    173e:	8d 7f       	andi	r24, 0xFD	; 253
    1740:	85 bd       	out	0x25, r24	; 37
    1742:	85 b5       	in	r24, 0x25	; 37
    1744:	8b 7f       	andi	r24, 0xFB	; 251
    1746:	85 bd       	out	0x25, r24	; 37
    1748:	08 95       	ret

0000174a <__vector_5>:
 */
//__attribute__((optimize("O0")))
//ISR(TMR_ovfVect)

ISR(TIM2_OVF_INT)
{
    174a:	1f 92       	push	r1
    174c:	0f 92       	push	r0
    174e:	0f b6       	in	r0, 0x3f	; 63
    1750:	0f 92       	push	r0
    1752:	11 24       	eor	r1, r1
    1754:	2f 93       	push	r18
    1756:	3f 93       	push	r19
    1758:	4f 93       	push	r20
    175a:	5f 93       	push	r21
    175c:	6f 93       	push	r22
    175e:	7f 93       	push	r23
    1760:	8f 93       	push	r24
    1762:	9f 93       	push	r25
    1764:	af 93       	push	r26
    1766:	bf 93       	push	r27
    1768:	ef 93       	push	r30
    176a:	ff 93       	push	r31
	u16_g_overflow2Ticks++;
    176c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <u16_g_overflow2Ticks>
    1770:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <u16_g_overflow2Ticks+0x1>
    1774:	01 96       	adiw	r24, 0x01	; 1
    1776:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <u16_g_overflow2Ticks+0x1>
    177a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <u16_g_overflow2Ticks>
	//TMR_U8_TCNT2_REG = u16_g_tcnt2InitialVal;
	if (u16_g_overflow2Ticks >= u16_g_overflow2Numbers )
    177e:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <u16_g_overflow2Numbers>
    1782:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <u16_g_overflow2Numbers+0x1>
    1786:	82 17       	cp	r24, r18
    1788:	93 07       	cpc	r25, r19
    178a:	48 f0       	brcs	.+18     	; 0x179e <__vector_5+0x54>
	{
		u16_g_overflow2Ticks = 0;
    178c:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <u16_g_overflow2Ticks+0x1>
    1790:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <u16_g_overflow2Ticks>
		u8_g_timeOut = 1;
    1794:	81 e0       	ldi	r24, 0x01	; 1
    1796:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <u8_g_timeOut>
		TMR_TMR2Stop();
    179a:	0e 94 9b 0b 	call	0x1736	; 0x1736 <TMR_TMR2Stop>
	}
}
    179e:	ff 91       	pop	r31
    17a0:	ef 91       	pop	r30
    17a2:	bf 91       	pop	r27
    17a4:	af 91       	pop	r26
    17a6:	9f 91       	pop	r25
    17a8:	8f 91       	pop	r24
    17aa:	7f 91       	pop	r23
    17ac:	6f 91       	pop	r22
    17ae:	5f 91       	pop	r21
    17b0:	4f 91       	pop	r20
    17b2:	3f 91       	pop	r19
    17b4:	2f 91       	pop	r18
    17b6:	0f 90       	pop	r0
    17b8:	0f be       	out	0x3f, r0	; 63
    17ba:	0f 90       	pop	r0
    17bc:	1f 90       	pop	r1
    17be:	18 95       	reti

000017c0 <__subsf3>:
    17c0:	50 58       	subi	r21, 0x80	; 128

000017c2 <__addsf3>:
    17c2:	bb 27       	eor	r27, r27
    17c4:	aa 27       	eor	r26, r26
    17c6:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <__addsf3x>
    17ca:	0c 94 ab 0d 	jmp	0x1b56	; 0x1b56 <__fp_round>
    17ce:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__fp_pscA>
    17d2:	38 f0       	brcs	.+14     	; 0x17e2 <__addsf3+0x20>
    17d4:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__fp_pscB>
    17d8:	20 f0       	brcs	.+8      	; 0x17e2 <__addsf3+0x20>
    17da:	39 f4       	brne	.+14     	; 0x17ea <__addsf3+0x28>
    17dc:	9f 3f       	cpi	r25, 0xFF	; 255
    17de:	19 f4       	brne	.+6      	; 0x17e6 <__addsf3+0x24>
    17e0:	26 f4       	brtc	.+8      	; 0x17ea <__addsf3+0x28>
    17e2:	0c 94 9a 0d 	jmp	0x1b34	; 0x1b34 <__fp_nan>
    17e6:	0e f4       	brtc	.+2      	; 0x17ea <__addsf3+0x28>
    17e8:	e0 95       	com	r30
    17ea:	e7 fb       	bst	r30, 7
    17ec:	0c 94 6b 0d 	jmp	0x1ad6	; 0x1ad6 <__fp_inf>

000017f0 <__addsf3x>:
    17f0:	e9 2f       	mov	r30, r25
    17f2:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <__fp_split3>
    17f6:	58 f3       	brcs	.-42     	; 0x17ce <__addsf3+0xc>
    17f8:	ba 17       	cp	r27, r26
    17fa:	62 07       	cpc	r22, r18
    17fc:	73 07       	cpc	r23, r19
    17fe:	84 07       	cpc	r24, r20
    1800:	95 07       	cpc	r25, r21
    1802:	20 f0       	brcs	.+8      	; 0x180c <__addsf3x+0x1c>
    1804:	79 f4       	brne	.+30     	; 0x1824 <__addsf3x+0x34>
    1806:	a6 f5       	brtc	.+104    	; 0x1870 <__addsf3x+0x80>
    1808:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__fp_zero>
    180c:	0e f4       	brtc	.+2      	; 0x1810 <__addsf3x+0x20>
    180e:	e0 95       	com	r30
    1810:	0b 2e       	mov	r0, r27
    1812:	ba 2f       	mov	r27, r26
    1814:	a0 2d       	mov	r26, r0
    1816:	0b 01       	movw	r0, r22
    1818:	b9 01       	movw	r22, r18
    181a:	90 01       	movw	r18, r0
    181c:	0c 01       	movw	r0, r24
    181e:	ca 01       	movw	r24, r20
    1820:	a0 01       	movw	r20, r0
    1822:	11 24       	eor	r1, r1
    1824:	ff 27       	eor	r31, r31
    1826:	59 1b       	sub	r21, r25
    1828:	99 f0       	breq	.+38     	; 0x1850 <__addsf3x+0x60>
    182a:	59 3f       	cpi	r21, 0xF9	; 249
    182c:	50 f4       	brcc	.+20     	; 0x1842 <__addsf3x+0x52>
    182e:	50 3e       	cpi	r21, 0xE0	; 224
    1830:	68 f1       	brcs	.+90     	; 0x188c <__addsf3x+0x9c>
    1832:	1a 16       	cp	r1, r26
    1834:	f0 40       	sbci	r31, 0x00	; 0
    1836:	a2 2f       	mov	r26, r18
    1838:	23 2f       	mov	r18, r19
    183a:	34 2f       	mov	r19, r20
    183c:	44 27       	eor	r20, r20
    183e:	58 5f       	subi	r21, 0xF8	; 248
    1840:	f3 cf       	rjmp	.-26     	; 0x1828 <__addsf3x+0x38>
    1842:	46 95       	lsr	r20
    1844:	37 95       	ror	r19
    1846:	27 95       	ror	r18
    1848:	a7 95       	ror	r26
    184a:	f0 40       	sbci	r31, 0x00	; 0
    184c:	53 95       	inc	r21
    184e:	c9 f7       	brne	.-14     	; 0x1842 <__addsf3x+0x52>
    1850:	7e f4       	brtc	.+30     	; 0x1870 <__addsf3x+0x80>
    1852:	1f 16       	cp	r1, r31
    1854:	ba 0b       	sbc	r27, r26
    1856:	62 0b       	sbc	r22, r18
    1858:	73 0b       	sbc	r23, r19
    185a:	84 0b       	sbc	r24, r20
    185c:	ba f0       	brmi	.+46     	; 0x188c <__addsf3x+0x9c>
    185e:	91 50       	subi	r25, 0x01	; 1
    1860:	a1 f0       	breq	.+40     	; 0x188a <__addsf3x+0x9a>
    1862:	ff 0f       	add	r31, r31
    1864:	bb 1f       	adc	r27, r27
    1866:	66 1f       	adc	r22, r22
    1868:	77 1f       	adc	r23, r23
    186a:	88 1f       	adc	r24, r24
    186c:	c2 f7       	brpl	.-16     	; 0x185e <__addsf3x+0x6e>
    186e:	0e c0       	rjmp	.+28     	; 0x188c <__addsf3x+0x9c>
    1870:	ba 0f       	add	r27, r26
    1872:	62 1f       	adc	r22, r18
    1874:	73 1f       	adc	r23, r19
    1876:	84 1f       	adc	r24, r20
    1878:	48 f4       	brcc	.+18     	; 0x188c <__addsf3x+0x9c>
    187a:	87 95       	ror	r24
    187c:	77 95       	ror	r23
    187e:	67 95       	ror	r22
    1880:	b7 95       	ror	r27
    1882:	f7 95       	ror	r31
    1884:	9e 3f       	cpi	r25, 0xFE	; 254
    1886:	08 f0       	brcs	.+2      	; 0x188a <__addsf3x+0x9a>
    1888:	b0 cf       	rjmp	.-160    	; 0x17ea <__addsf3+0x28>
    188a:	93 95       	inc	r25
    188c:	88 0f       	add	r24, r24
    188e:	08 f0       	brcs	.+2      	; 0x1892 <__addsf3x+0xa2>
    1890:	99 27       	eor	r25, r25
    1892:	ee 0f       	add	r30, r30
    1894:	97 95       	ror	r25
    1896:	87 95       	ror	r24
    1898:	08 95       	ret

0000189a <ceil>:
    189a:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <__fp_trunc>
    189e:	90 f0       	brcs	.+36     	; 0x18c4 <ceil+0x2a>
    18a0:	9f 37       	cpi	r25, 0x7F	; 127
    18a2:	48 f4       	brcc	.+18     	; 0x18b6 <ceil+0x1c>
    18a4:	91 11       	cpse	r25, r1
    18a6:	16 f4       	brtc	.+4      	; 0x18ac <ceil+0x12>
    18a8:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__fp_szero>
    18ac:	60 e0       	ldi	r22, 0x00	; 0
    18ae:	70 e0       	ldi	r23, 0x00	; 0
    18b0:	80 e8       	ldi	r24, 0x80	; 128
    18b2:	9f e3       	ldi	r25, 0x3F	; 63
    18b4:	08 95       	ret
    18b6:	26 f0       	brts	.+8      	; 0x18c0 <ceil+0x26>
    18b8:	1b 16       	cp	r1, r27
    18ba:	61 1d       	adc	r22, r1
    18bc:	71 1d       	adc	r23, r1
    18be:	81 1d       	adc	r24, r1
    18c0:	0c 94 71 0d 	jmp	0x1ae2	; 0x1ae2 <__fp_mintl>
    18c4:	0c 94 8c 0d 	jmp	0x1b18	; 0x1b18 <__fp_mpack>

000018c8 <__cmpsf2>:
    18c8:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <__fp_cmp>
    18cc:	08 f4       	brcc	.+2      	; 0x18d0 <__cmpsf2+0x8>
    18ce:	81 e0       	ldi	r24, 0x01	; 1
    18d0:	08 95       	ret

000018d2 <__divsf3>:
    18d2:	0e 94 7d 0c 	call	0x18fa	; 0x18fa <__divsf3x>
    18d6:	0c 94 ab 0d 	jmp	0x1b56	; 0x1b56 <__fp_round>
    18da:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__fp_pscB>
    18de:	58 f0       	brcs	.+22     	; 0x18f6 <__divsf3+0x24>
    18e0:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__fp_pscA>
    18e4:	40 f0       	brcs	.+16     	; 0x18f6 <__divsf3+0x24>
    18e6:	29 f4       	brne	.+10     	; 0x18f2 <__divsf3+0x20>
    18e8:	5f 3f       	cpi	r21, 0xFF	; 255
    18ea:	29 f0       	breq	.+10     	; 0x18f6 <__divsf3+0x24>
    18ec:	0c 94 6b 0d 	jmp	0x1ad6	; 0x1ad6 <__fp_inf>
    18f0:	51 11       	cpse	r21, r1
    18f2:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__fp_szero>
    18f6:	0c 94 9a 0d 	jmp	0x1b34	; 0x1b34 <__fp_nan>

000018fa <__divsf3x>:
    18fa:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <__fp_split3>
    18fe:	68 f3       	brcs	.-38     	; 0x18da <__divsf3+0x8>

00001900 <__divsf3_pse>:
    1900:	99 23       	and	r25, r25
    1902:	b1 f3       	breq	.-20     	; 0x18f0 <__divsf3+0x1e>
    1904:	55 23       	and	r21, r21
    1906:	91 f3       	breq	.-28     	; 0x18ec <__divsf3+0x1a>
    1908:	95 1b       	sub	r25, r21
    190a:	55 0b       	sbc	r21, r21
    190c:	bb 27       	eor	r27, r27
    190e:	aa 27       	eor	r26, r26
    1910:	62 17       	cp	r22, r18
    1912:	73 07       	cpc	r23, r19
    1914:	84 07       	cpc	r24, r20
    1916:	38 f0       	brcs	.+14     	; 0x1926 <__divsf3_pse+0x26>
    1918:	9f 5f       	subi	r25, 0xFF	; 255
    191a:	5f 4f       	sbci	r21, 0xFF	; 255
    191c:	22 0f       	add	r18, r18
    191e:	33 1f       	adc	r19, r19
    1920:	44 1f       	adc	r20, r20
    1922:	aa 1f       	adc	r26, r26
    1924:	a9 f3       	breq	.-22     	; 0x1910 <__divsf3_pse+0x10>
    1926:	35 d0       	rcall	.+106    	; 0x1992 <__divsf3_pse+0x92>
    1928:	0e 2e       	mov	r0, r30
    192a:	3a f0       	brmi	.+14     	; 0x193a <__divsf3_pse+0x3a>
    192c:	e0 e8       	ldi	r30, 0x80	; 128
    192e:	32 d0       	rcall	.+100    	; 0x1994 <__divsf3_pse+0x94>
    1930:	91 50       	subi	r25, 0x01	; 1
    1932:	50 40       	sbci	r21, 0x00	; 0
    1934:	e6 95       	lsr	r30
    1936:	00 1c       	adc	r0, r0
    1938:	ca f7       	brpl	.-14     	; 0x192c <__divsf3_pse+0x2c>
    193a:	2b d0       	rcall	.+86     	; 0x1992 <__divsf3_pse+0x92>
    193c:	fe 2f       	mov	r31, r30
    193e:	29 d0       	rcall	.+82     	; 0x1992 <__divsf3_pse+0x92>
    1940:	66 0f       	add	r22, r22
    1942:	77 1f       	adc	r23, r23
    1944:	88 1f       	adc	r24, r24
    1946:	bb 1f       	adc	r27, r27
    1948:	26 17       	cp	r18, r22
    194a:	37 07       	cpc	r19, r23
    194c:	48 07       	cpc	r20, r24
    194e:	ab 07       	cpc	r26, r27
    1950:	b0 e8       	ldi	r27, 0x80	; 128
    1952:	09 f0       	breq	.+2      	; 0x1956 <__divsf3_pse+0x56>
    1954:	bb 0b       	sbc	r27, r27
    1956:	80 2d       	mov	r24, r0
    1958:	bf 01       	movw	r22, r30
    195a:	ff 27       	eor	r31, r31
    195c:	93 58       	subi	r25, 0x83	; 131
    195e:	5f 4f       	sbci	r21, 0xFF	; 255
    1960:	3a f0       	brmi	.+14     	; 0x1970 <__divsf3_pse+0x70>
    1962:	9e 3f       	cpi	r25, 0xFE	; 254
    1964:	51 05       	cpc	r21, r1
    1966:	78 f0       	brcs	.+30     	; 0x1986 <__divsf3_pse+0x86>
    1968:	0c 94 6b 0d 	jmp	0x1ad6	; 0x1ad6 <__fp_inf>
    196c:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__fp_szero>
    1970:	5f 3f       	cpi	r21, 0xFF	; 255
    1972:	e4 f3       	brlt	.-8      	; 0x196c <__divsf3_pse+0x6c>
    1974:	98 3e       	cpi	r25, 0xE8	; 232
    1976:	d4 f3       	brlt	.-12     	; 0x196c <__divsf3_pse+0x6c>
    1978:	86 95       	lsr	r24
    197a:	77 95       	ror	r23
    197c:	67 95       	ror	r22
    197e:	b7 95       	ror	r27
    1980:	f7 95       	ror	r31
    1982:	9f 5f       	subi	r25, 0xFF	; 255
    1984:	c9 f7       	brne	.-14     	; 0x1978 <__divsf3_pse+0x78>
    1986:	88 0f       	add	r24, r24
    1988:	91 1d       	adc	r25, r1
    198a:	96 95       	lsr	r25
    198c:	87 95       	ror	r24
    198e:	97 f9       	bld	r25, 7
    1990:	08 95       	ret
    1992:	e1 e0       	ldi	r30, 0x01	; 1
    1994:	66 0f       	add	r22, r22
    1996:	77 1f       	adc	r23, r23
    1998:	88 1f       	adc	r24, r24
    199a:	bb 1f       	adc	r27, r27
    199c:	62 17       	cp	r22, r18
    199e:	73 07       	cpc	r23, r19
    19a0:	84 07       	cpc	r24, r20
    19a2:	ba 07       	cpc	r27, r26
    19a4:	20 f0       	brcs	.+8      	; 0x19ae <__divsf3_pse+0xae>
    19a6:	62 1b       	sub	r22, r18
    19a8:	73 0b       	sbc	r23, r19
    19aa:	84 0b       	sbc	r24, r20
    19ac:	ba 0b       	sbc	r27, r26
    19ae:	ee 1f       	adc	r30, r30
    19b0:	88 f7       	brcc	.-30     	; 0x1994 <__divsf3_pse+0x94>
    19b2:	e0 95       	com	r30
    19b4:	08 95       	ret

000019b6 <__fixunssfsi>:
    19b6:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <__fp_splitA>
    19ba:	88 f0       	brcs	.+34     	; 0x19de <__fixunssfsi+0x28>
    19bc:	9f 57       	subi	r25, 0x7F	; 127
    19be:	98 f0       	brcs	.+38     	; 0x19e6 <__fixunssfsi+0x30>
    19c0:	b9 2f       	mov	r27, r25
    19c2:	99 27       	eor	r25, r25
    19c4:	b7 51       	subi	r27, 0x17	; 23
    19c6:	b0 f0       	brcs	.+44     	; 0x19f4 <__fixunssfsi+0x3e>
    19c8:	e1 f0       	breq	.+56     	; 0x1a02 <__fixunssfsi+0x4c>
    19ca:	66 0f       	add	r22, r22
    19cc:	77 1f       	adc	r23, r23
    19ce:	88 1f       	adc	r24, r24
    19d0:	99 1f       	adc	r25, r25
    19d2:	1a f0       	brmi	.+6      	; 0x19da <__fixunssfsi+0x24>
    19d4:	ba 95       	dec	r27
    19d6:	c9 f7       	brne	.-14     	; 0x19ca <__fixunssfsi+0x14>
    19d8:	14 c0       	rjmp	.+40     	; 0x1a02 <__fixunssfsi+0x4c>
    19da:	b1 30       	cpi	r27, 0x01	; 1
    19dc:	91 f0       	breq	.+36     	; 0x1a02 <__fixunssfsi+0x4c>
    19de:	0e 94 f6 0d 	call	0x1bec	; 0x1bec <__fp_zero>
    19e2:	b1 e0       	ldi	r27, 0x01	; 1
    19e4:	08 95       	ret
    19e6:	0c 94 f6 0d 	jmp	0x1bec	; 0x1bec <__fp_zero>
    19ea:	67 2f       	mov	r22, r23
    19ec:	78 2f       	mov	r23, r24
    19ee:	88 27       	eor	r24, r24
    19f0:	b8 5f       	subi	r27, 0xF8	; 248
    19f2:	39 f0       	breq	.+14     	; 0x1a02 <__fixunssfsi+0x4c>
    19f4:	b9 3f       	cpi	r27, 0xF9	; 249
    19f6:	cc f3       	brlt	.-14     	; 0x19ea <__fixunssfsi+0x34>
    19f8:	86 95       	lsr	r24
    19fa:	77 95       	ror	r23
    19fc:	67 95       	ror	r22
    19fe:	b3 95       	inc	r27
    1a00:	d9 f7       	brne	.-10     	; 0x19f8 <__fixunssfsi+0x42>
    1a02:	3e f4       	brtc	.+14     	; 0x1a12 <__fixunssfsi+0x5c>
    1a04:	90 95       	com	r25
    1a06:	80 95       	com	r24
    1a08:	70 95       	com	r23
    1a0a:	61 95       	neg	r22
    1a0c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a0e:	8f 4f       	sbci	r24, 0xFF	; 255
    1a10:	9f 4f       	sbci	r25, 0xFF	; 255
    1a12:	08 95       	ret

00001a14 <__floatunsisf>:
    1a14:	e8 94       	clt
    1a16:	09 c0       	rjmp	.+18     	; 0x1a2a <__floatsisf+0x12>

00001a18 <__floatsisf>:
    1a18:	97 fb       	bst	r25, 7
    1a1a:	3e f4       	brtc	.+14     	; 0x1a2a <__floatsisf+0x12>
    1a1c:	90 95       	com	r25
    1a1e:	80 95       	com	r24
    1a20:	70 95       	com	r23
    1a22:	61 95       	neg	r22
    1a24:	7f 4f       	sbci	r23, 0xFF	; 255
    1a26:	8f 4f       	sbci	r24, 0xFF	; 255
    1a28:	9f 4f       	sbci	r25, 0xFF	; 255
    1a2a:	99 23       	and	r25, r25
    1a2c:	a9 f0       	breq	.+42     	; 0x1a58 <__floatsisf+0x40>
    1a2e:	f9 2f       	mov	r31, r25
    1a30:	96 e9       	ldi	r25, 0x96	; 150
    1a32:	bb 27       	eor	r27, r27
    1a34:	93 95       	inc	r25
    1a36:	f6 95       	lsr	r31
    1a38:	87 95       	ror	r24
    1a3a:	77 95       	ror	r23
    1a3c:	67 95       	ror	r22
    1a3e:	b7 95       	ror	r27
    1a40:	f1 11       	cpse	r31, r1
    1a42:	f8 cf       	rjmp	.-16     	; 0x1a34 <__floatsisf+0x1c>
    1a44:	fa f4       	brpl	.+62     	; 0x1a84 <__floatsisf+0x6c>
    1a46:	bb 0f       	add	r27, r27
    1a48:	11 f4       	brne	.+4      	; 0x1a4e <__floatsisf+0x36>
    1a4a:	60 ff       	sbrs	r22, 0
    1a4c:	1b c0       	rjmp	.+54     	; 0x1a84 <__floatsisf+0x6c>
    1a4e:	6f 5f       	subi	r22, 0xFF	; 255
    1a50:	7f 4f       	sbci	r23, 0xFF	; 255
    1a52:	8f 4f       	sbci	r24, 0xFF	; 255
    1a54:	9f 4f       	sbci	r25, 0xFF	; 255
    1a56:	16 c0       	rjmp	.+44     	; 0x1a84 <__floatsisf+0x6c>
    1a58:	88 23       	and	r24, r24
    1a5a:	11 f0       	breq	.+4      	; 0x1a60 <__floatsisf+0x48>
    1a5c:	96 e9       	ldi	r25, 0x96	; 150
    1a5e:	11 c0       	rjmp	.+34     	; 0x1a82 <__floatsisf+0x6a>
    1a60:	77 23       	and	r23, r23
    1a62:	21 f0       	breq	.+8      	; 0x1a6c <__floatsisf+0x54>
    1a64:	9e e8       	ldi	r25, 0x8E	; 142
    1a66:	87 2f       	mov	r24, r23
    1a68:	76 2f       	mov	r23, r22
    1a6a:	05 c0       	rjmp	.+10     	; 0x1a76 <__floatsisf+0x5e>
    1a6c:	66 23       	and	r22, r22
    1a6e:	71 f0       	breq	.+28     	; 0x1a8c <__floatsisf+0x74>
    1a70:	96 e8       	ldi	r25, 0x86	; 134
    1a72:	86 2f       	mov	r24, r22
    1a74:	70 e0       	ldi	r23, 0x00	; 0
    1a76:	60 e0       	ldi	r22, 0x00	; 0
    1a78:	2a f0       	brmi	.+10     	; 0x1a84 <__floatsisf+0x6c>
    1a7a:	9a 95       	dec	r25
    1a7c:	66 0f       	add	r22, r22
    1a7e:	77 1f       	adc	r23, r23
    1a80:	88 1f       	adc	r24, r24
    1a82:	da f7       	brpl	.-10     	; 0x1a7a <__floatsisf+0x62>
    1a84:	88 0f       	add	r24, r24
    1a86:	96 95       	lsr	r25
    1a88:	87 95       	ror	r24
    1a8a:	97 f9       	bld	r25, 7
    1a8c:	08 95       	ret

00001a8e <__fp_cmp>:
    1a8e:	99 0f       	add	r25, r25
    1a90:	00 08       	sbc	r0, r0
    1a92:	55 0f       	add	r21, r21
    1a94:	aa 0b       	sbc	r26, r26
    1a96:	e0 e8       	ldi	r30, 0x80	; 128
    1a98:	fe ef       	ldi	r31, 0xFE	; 254
    1a9a:	16 16       	cp	r1, r22
    1a9c:	17 06       	cpc	r1, r23
    1a9e:	e8 07       	cpc	r30, r24
    1aa0:	f9 07       	cpc	r31, r25
    1aa2:	c0 f0       	brcs	.+48     	; 0x1ad4 <__fp_cmp+0x46>
    1aa4:	12 16       	cp	r1, r18
    1aa6:	13 06       	cpc	r1, r19
    1aa8:	e4 07       	cpc	r30, r20
    1aaa:	f5 07       	cpc	r31, r21
    1aac:	98 f0       	brcs	.+38     	; 0x1ad4 <__fp_cmp+0x46>
    1aae:	62 1b       	sub	r22, r18
    1ab0:	73 0b       	sbc	r23, r19
    1ab2:	84 0b       	sbc	r24, r20
    1ab4:	95 0b       	sbc	r25, r21
    1ab6:	39 f4       	brne	.+14     	; 0x1ac6 <__fp_cmp+0x38>
    1ab8:	0a 26       	eor	r0, r26
    1aba:	61 f0       	breq	.+24     	; 0x1ad4 <__fp_cmp+0x46>
    1abc:	23 2b       	or	r18, r19
    1abe:	24 2b       	or	r18, r20
    1ac0:	25 2b       	or	r18, r21
    1ac2:	21 f4       	brne	.+8      	; 0x1acc <__fp_cmp+0x3e>
    1ac4:	08 95       	ret
    1ac6:	0a 26       	eor	r0, r26
    1ac8:	09 f4       	brne	.+2      	; 0x1acc <__fp_cmp+0x3e>
    1aca:	a1 40       	sbci	r26, 0x01	; 1
    1acc:	a6 95       	lsr	r26
    1ace:	8f ef       	ldi	r24, 0xFF	; 255
    1ad0:	81 1d       	adc	r24, r1
    1ad2:	81 1d       	adc	r24, r1
    1ad4:	08 95       	ret

00001ad6 <__fp_inf>:
    1ad6:	97 f9       	bld	r25, 7
    1ad8:	9f 67       	ori	r25, 0x7F	; 127
    1ada:	80 e8       	ldi	r24, 0x80	; 128
    1adc:	70 e0       	ldi	r23, 0x00	; 0
    1ade:	60 e0       	ldi	r22, 0x00	; 0
    1ae0:	08 95       	ret

00001ae2 <__fp_mintl>:
    1ae2:	88 23       	and	r24, r24
    1ae4:	71 f4       	brne	.+28     	; 0x1b02 <__fp_mintl+0x20>
    1ae6:	77 23       	and	r23, r23
    1ae8:	21 f0       	breq	.+8      	; 0x1af2 <__fp_mintl+0x10>
    1aea:	98 50       	subi	r25, 0x08	; 8
    1aec:	87 2b       	or	r24, r23
    1aee:	76 2f       	mov	r23, r22
    1af0:	07 c0       	rjmp	.+14     	; 0x1b00 <__fp_mintl+0x1e>
    1af2:	66 23       	and	r22, r22
    1af4:	11 f4       	brne	.+4      	; 0x1afa <__fp_mintl+0x18>
    1af6:	99 27       	eor	r25, r25
    1af8:	0d c0       	rjmp	.+26     	; 0x1b14 <__fp_mintl+0x32>
    1afa:	90 51       	subi	r25, 0x10	; 16
    1afc:	86 2b       	or	r24, r22
    1afe:	70 e0       	ldi	r23, 0x00	; 0
    1b00:	60 e0       	ldi	r22, 0x00	; 0
    1b02:	2a f0       	brmi	.+10     	; 0x1b0e <__fp_mintl+0x2c>
    1b04:	9a 95       	dec	r25
    1b06:	66 0f       	add	r22, r22
    1b08:	77 1f       	adc	r23, r23
    1b0a:	88 1f       	adc	r24, r24
    1b0c:	da f7       	brpl	.-10     	; 0x1b04 <__fp_mintl+0x22>
    1b0e:	88 0f       	add	r24, r24
    1b10:	96 95       	lsr	r25
    1b12:	87 95       	ror	r24
    1b14:	97 f9       	bld	r25, 7
    1b16:	08 95       	ret

00001b18 <__fp_mpack>:
    1b18:	9f 3f       	cpi	r25, 0xFF	; 255
    1b1a:	31 f0       	breq	.+12     	; 0x1b28 <__fp_mpack_finite+0xc>

00001b1c <__fp_mpack_finite>:
    1b1c:	91 50       	subi	r25, 0x01	; 1
    1b1e:	20 f4       	brcc	.+8      	; 0x1b28 <__fp_mpack_finite+0xc>
    1b20:	87 95       	ror	r24
    1b22:	77 95       	ror	r23
    1b24:	67 95       	ror	r22
    1b26:	b7 95       	ror	r27
    1b28:	88 0f       	add	r24, r24
    1b2a:	91 1d       	adc	r25, r1
    1b2c:	96 95       	lsr	r25
    1b2e:	87 95       	ror	r24
    1b30:	97 f9       	bld	r25, 7
    1b32:	08 95       	ret

00001b34 <__fp_nan>:
    1b34:	9f ef       	ldi	r25, 0xFF	; 255
    1b36:	80 ec       	ldi	r24, 0xC0	; 192
    1b38:	08 95       	ret

00001b3a <__fp_pscA>:
    1b3a:	00 24       	eor	r0, r0
    1b3c:	0a 94       	dec	r0
    1b3e:	16 16       	cp	r1, r22
    1b40:	17 06       	cpc	r1, r23
    1b42:	18 06       	cpc	r1, r24
    1b44:	09 06       	cpc	r0, r25
    1b46:	08 95       	ret

00001b48 <__fp_pscB>:
    1b48:	00 24       	eor	r0, r0
    1b4a:	0a 94       	dec	r0
    1b4c:	12 16       	cp	r1, r18
    1b4e:	13 06       	cpc	r1, r19
    1b50:	14 06       	cpc	r1, r20
    1b52:	05 06       	cpc	r0, r21
    1b54:	08 95       	ret

00001b56 <__fp_round>:
    1b56:	09 2e       	mov	r0, r25
    1b58:	03 94       	inc	r0
    1b5a:	00 0c       	add	r0, r0
    1b5c:	11 f4       	brne	.+4      	; 0x1b62 <__fp_round+0xc>
    1b5e:	88 23       	and	r24, r24
    1b60:	52 f0       	brmi	.+20     	; 0x1b76 <__fp_round+0x20>
    1b62:	bb 0f       	add	r27, r27
    1b64:	40 f4       	brcc	.+16     	; 0x1b76 <__fp_round+0x20>
    1b66:	bf 2b       	or	r27, r31
    1b68:	11 f4       	brne	.+4      	; 0x1b6e <__fp_round+0x18>
    1b6a:	60 ff       	sbrs	r22, 0
    1b6c:	04 c0       	rjmp	.+8      	; 0x1b76 <__fp_round+0x20>
    1b6e:	6f 5f       	subi	r22, 0xFF	; 255
    1b70:	7f 4f       	sbci	r23, 0xFF	; 255
    1b72:	8f 4f       	sbci	r24, 0xFF	; 255
    1b74:	9f 4f       	sbci	r25, 0xFF	; 255
    1b76:	08 95       	ret

00001b78 <__fp_split3>:
    1b78:	57 fd       	sbrc	r21, 7
    1b7a:	90 58       	subi	r25, 0x80	; 128
    1b7c:	44 0f       	add	r20, r20
    1b7e:	55 1f       	adc	r21, r21
    1b80:	59 f0       	breq	.+22     	; 0x1b98 <__fp_splitA+0x10>
    1b82:	5f 3f       	cpi	r21, 0xFF	; 255
    1b84:	71 f0       	breq	.+28     	; 0x1ba2 <__fp_splitA+0x1a>
    1b86:	47 95       	ror	r20

00001b88 <__fp_splitA>:
    1b88:	88 0f       	add	r24, r24
    1b8a:	97 fb       	bst	r25, 7
    1b8c:	99 1f       	adc	r25, r25
    1b8e:	61 f0       	breq	.+24     	; 0x1ba8 <__fp_splitA+0x20>
    1b90:	9f 3f       	cpi	r25, 0xFF	; 255
    1b92:	79 f0       	breq	.+30     	; 0x1bb2 <__fp_splitA+0x2a>
    1b94:	87 95       	ror	r24
    1b96:	08 95       	ret
    1b98:	12 16       	cp	r1, r18
    1b9a:	13 06       	cpc	r1, r19
    1b9c:	14 06       	cpc	r1, r20
    1b9e:	55 1f       	adc	r21, r21
    1ba0:	f2 cf       	rjmp	.-28     	; 0x1b86 <__fp_split3+0xe>
    1ba2:	46 95       	lsr	r20
    1ba4:	f1 df       	rcall	.-30     	; 0x1b88 <__fp_splitA>
    1ba6:	08 c0       	rjmp	.+16     	; 0x1bb8 <__fp_splitA+0x30>
    1ba8:	16 16       	cp	r1, r22
    1baa:	17 06       	cpc	r1, r23
    1bac:	18 06       	cpc	r1, r24
    1bae:	99 1f       	adc	r25, r25
    1bb0:	f1 cf       	rjmp	.-30     	; 0x1b94 <__fp_splitA+0xc>
    1bb2:	86 95       	lsr	r24
    1bb4:	71 05       	cpc	r23, r1
    1bb6:	61 05       	cpc	r22, r1
    1bb8:	08 94       	sec
    1bba:	08 95       	ret

00001bbc <__fp_trunc>:
    1bbc:	0e 94 c4 0d 	call	0x1b88	; 0x1b88 <__fp_splitA>
    1bc0:	a0 f0       	brcs	.+40     	; 0x1bea <__fp_trunc+0x2e>
    1bc2:	be e7       	ldi	r27, 0x7E	; 126
    1bc4:	b9 17       	cp	r27, r25
    1bc6:	88 f4       	brcc	.+34     	; 0x1bea <__fp_trunc+0x2e>
    1bc8:	bb 27       	eor	r27, r27
    1bca:	9f 38       	cpi	r25, 0x8F	; 143
    1bcc:	60 f4       	brcc	.+24     	; 0x1be6 <__fp_trunc+0x2a>
    1bce:	16 16       	cp	r1, r22
    1bd0:	b1 1d       	adc	r27, r1
    1bd2:	67 2f       	mov	r22, r23
    1bd4:	78 2f       	mov	r23, r24
    1bd6:	88 27       	eor	r24, r24
    1bd8:	98 5f       	subi	r25, 0xF8	; 248
    1bda:	f7 cf       	rjmp	.-18     	; 0x1bca <__fp_trunc+0xe>
    1bdc:	86 95       	lsr	r24
    1bde:	77 95       	ror	r23
    1be0:	67 95       	ror	r22
    1be2:	b1 1d       	adc	r27, r1
    1be4:	93 95       	inc	r25
    1be6:	96 39       	cpi	r25, 0x96	; 150
    1be8:	c8 f3       	brcs	.-14     	; 0x1bdc <__fp_trunc+0x20>
    1bea:	08 95       	ret

00001bec <__fp_zero>:
    1bec:	e8 94       	clt

00001bee <__fp_szero>:
    1bee:	bb 27       	eor	r27, r27
    1bf0:	66 27       	eor	r22, r22
    1bf2:	77 27       	eor	r23, r23
    1bf4:	cb 01       	movw	r24, r22
    1bf6:	97 f9       	bld	r25, 7
    1bf8:	08 95       	ret

00001bfa <__gesf2>:
    1bfa:	0e 94 47 0d 	call	0x1a8e	; 0x1a8e <__fp_cmp>
    1bfe:	08 f4       	brcc	.+2      	; 0x1c02 <__gesf2+0x8>
    1c00:	8f ef       	ldi	r24, 0xFF	; 255
    1c02:	08 95       	ret

00001c04 <__mulsf3>:
    1c04:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <__mulsf3x>
    1c08:	0c 94 ab 0d 	jmp	0x1b56	; 0x1b56 <__fp_round>
    1c0c:	0e 94 9d 0d 	call	0x1b3a	; 0x1b3a <__fp_pscA>
    1c10:	38 f0       	brcs	.+14     	; 0x1c20 <__mulsf3+0x1c>
    1c12:	0e 94 a4 0d 	call	0x1b48	; 0x1b48 <__fp_pscB>
    1c16:	20 f0       	brcs	.+8      	; 0x1c20 <__mulsf3+0x1c>
    1c18:	95 23       	and	r25, r21
    1c1a:	11 f0       	breq	.+4      	; 0x1c20 <__mulsf3+0x1c>
    1c1c:	0c 94 6b 0d 	jmp	0x1ad6	; 0x1ad6 <__fp_inf>
    1c20:	0c 94 9a 0d 	jmp	0x1b34	; 0x1b34 <__fp_nan>
    1c24:	11 24       	eor	r1, r1
    1c26:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__fp_szero>

00001c2a <__mulsf3x>:
    1c2a:	0e 94 bc 0d 	call	0x1b78	; 0x1b78 <__fp_split3>
    1c2e:	70 f3       	brcs	.-36     	; 0x1c0c <__mulsf3+0x8>

00001c30 <__mulsf3_pse>:
    1c30:	95 9f       	mul	r25, r21
    1c32:	c1 f3       	breq	.-16     	; 0x1c24 <__mulsf3+0x20>
    1c34:	95 0f       	add	r25, r21
    1c36:	50 e0       	ldi	r21, 0x00	; 0
    1c38:	55 1f       	adc	r21, r21
    1c3a:	62 9f       	mul	r22, r18
    1c3c:	f0 01       	movw	r30, r0
    1c3e:	72 9f       	mul	r23, r18
    1c40:	bb 27       	eor	r27, r27
    1c42:	f0 0d       	add	r31, r0
    1c44:	b1 1d       	adc	r27, r1
    1c46:	63 9f       	mul	r22, r19
    1c48:	aa 27       	eor	r26, r26
    1c4a:	f0 0d       	add	r31, r0
    1c4c:	b1 1d       	adc	r27, r1
    1c4e:	aa 1f       	adc	r26, r26
    1c50:	64 9f       	mul	r22, r20
    1c52:	66 27       	eor	r22, r22
    1c54:	b0 0d       	add	r27, r0
    1c56:	a1 1d       	adc	r26, r1
    1c58:	66 1f       	adc	r22, r22
    1c5a:	82 9f       	mul	r24, r18
    1c5c:	22 27       	eor	r18, r18
    1c5e:	b0 0d       	add	r27, r0
    1c60:	a1 1d       	adc	r26, r1
    1c62:	62 1f       	adc	r22, r18
    1c64:	73 9f       	mul	r23, r19
    1c66:	b0 0d       	add	r27, r0
    1c68:	a1 1d       	adc	r26, r1
    1c6a:	62 1f       	adc	r22, r18
    1c6c:	83 9f       	mul	r24, r19
    1c6e:	a0 0d       	add	r26, r0
    1c70:	61 1d       	adc	r22, r1
    1c72:	22 1f       	adc	r18, r18
    1c74:	74 9f       	mul	r23, r20
    1c76:	33 27       	eor	r19, r19
    1c78:	a0 0d       	add	r26, r0
    1c7a:	61 1d       	adc	r22, r1
    1c7c:	23 1f       	adc	r18, r19
    1c7e:	84 9f       	mul	r24, r20
    1c80:	60 0d       	add	r22, r0
    1c82:	21 1d       	adc	r18, r1
    1c84:	82 2f       	mov	r24, r18
    1c86:	76 2f       	mov	r23, r22
    1c88:	6a 2f       	mov	r22, r26
    1c8a:	11 24       	eor	r1, r1
    1c8c:	9f 57       	subi	r25, 0x7F	; 127
    1c8e:	50 40       	sbci	r21, 0x00	; 0
    1c90:	9a f0       	brmi	.+38     	; 0x1cb8 <__mulsf3_pse+0x88>
    1c92:	f1 f0       	breq	.+60     	; 0x1cd0 <__mulsf3_pse+0xa0>
    1c94:	88 23       	and	r24, r24
    1c96:	4a f0       	brmi	.+18     	; 0x1caa <__mulsf3_pse+0x7a>
    1c98:	ee 0f       	add	r30, r30
    1c9a:	ff 1f       	adc	r31, r31
    1c9c:	bb 1f       	adc	r27, r27
    1c9e:	66 1f       	adc	r22, r22
    1ca0:	77 1f       	adc	r23, r23
    1ca2:	88 1f       	adc	r24, r24
    1ca4:	91 50       	subi	r25, 0x01	; 1
    1ca6:	50 40       	sbci	r21, 0x00	; 0
    1ca8:	a9 f7       	brne	.-22     	; 0x1c94 <__mulsf3_pse+0x64>
    1caa:	9e 3f       	cpi	r25, 0xFE	; 254
    1cac:	51 05       	cpc	r21, r1
    1cae:	80 f0       	brcs	.+32     	; 0x1cd0 <__mulsf3_pse+0xa0>
    1cb0:	0c 94 6b 0d 	jmp	0x1ad6	; 0x1ad6 <__fp_inf>
    1cb4:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__fp_szero>
    1cb8:	5f 3f       	cpi	r21, 0xFF	; 255
    1cba:	e4 f3       	brlt	.-8      	; 0x1cb4 <__mulsf3_pse+0x84>
    1cbc:	98 3e       	cpi	r25, 0xE8	; 232
    1cbe:	d4 f3       	brlt	.-12     	; 0x1cb4 <__mulsf3_pse+0x84>
    1cc0:	86 95       	lsr	r24
    1cc2:	77 95       	ror	r23
    1cc4:	67 95       	ror	r22
    1cc6:	b7 95       	ror	r27
    1cc8:	f7 95       	ror	r31
    1cca:	e7 95       	ror	r30
    1ccc:	9f 5f       	subi	r25, 0xFF	; 255
    1cce:	c1 f7       	brne	.-16     	; 0x1cc0 <__mulsf3_pse+0x90>
    1cd0:	fe 2b       	or	r31, r30
    1cd2:	88 0f       	add	r24, r24
    1cd4:	91 1d       	adc	r25, r1
    1cd6:	96 95       	lsr	r25
    1cd8:	87 95       	ror	r24
    1cda:	97 f9       	bld	r25, 7
    1cdc:	08 95       	ret

00001cde <__itoa_ncheck>:
    1cde:	bb 27       	eor	r27, r27
    1ce0:	4a 30       	cpi	r20, 0x0A	; 10
    1ce2:	31 f4       	brne	.+12     	; 0x1cf0 <__itoa_ncheck+0x12>
    1ce4:	99 23       	and	r25, r25
    1ce6:	22 f4       	brpl	.+8      	; 0x1cf0 <__itoa_ncheck+0x12>
    1ce8:	bd e2       	ldi	r27, 0x2D	; 45
    1cea:	90 95       	com	r25
    1cec:	81 95       	neg	r24
    1cee:	9f 4f       	sbci	r25, 0xFF	; 255
    1cf0:	0c 94 7b 0e 	jmp	0x1cf6	; 0x1cf6 <__utoa_common>

00001cf4 <__utoa_ncheck>:
    1cf4:	bb 27       	eor	r27, r27

00001cf6 <__utoa_common>:
    1cf6:	fb 01       	movw	r30, r22
    1cf8:	55 27       	eor	r21, r21
    1cfa:	aa 27       	eor	r26, r26
    1cfc:	88 0f       	add	r24, r24
    1cfe:	99 1f       	adc	r25, r25
    1d00:	aa 1f       	adc	r26, r26
    1d02:	a4 17       	cp	r26, r20
    1d04:	10 f0       	brcs	.+4      	; 0x1d0a <__utoa_common+0x14>
    1d06:	a4 1b       	sub	r26, r20
    1d08:	83 95       	inc	r24
    1d0a:	50 51       	subi	r21, 0x10	; 16
    1d0c:	b9 f7       	brne	.-18     	; 0x1cfc <__utoa_common+0x6>
    1d0e:	a0 5d       	subi	r26, 0xD0	; 208
    1d10:	aa 33       	cpi	r26, 0x3A	; 58
    1d12:	08 f0       	brcs	.+2      	; 0x1d16 <__utoa_common+0x20>
    1d14:	a9 5d       	subi	r26, 0xD9	; 217
    1d16:	a1 93       	st	Z+, r26
    1d18:	00 97       	sbiw	r24, 0x00	; 0
    1d1a:	79 f7       	brne	.-34     	; 0x1cfa <__utoa_common+0x4>
    1d1c:	b1 11       	cpse	r27, r1
    1d1e:	b1 93       	st	Z+, r27
    1d20:	11 92       	st	Z+, r1
    1d22:	cb 01       	movw	r24, r22
    1d24:	0c 94 94 0e 	jmp	0x1d28	; 0x1d28 <strrev>

00001d28 <strrev>:
    1d28:	dc 01       	movw	r26, r24
    1d2a:	fc 01       	movw	r30, r24
    1d2c:	67 2f       	mov	r22, r23
    1d2e:	71 91       	ld	r23, Z+
    1d30:	77 23       	and	r23, r23
    1d32:	e1 f7       	brne	.-8      	; 0x1d2c <strrev+0x4>
    1d34:	32 97       	sbiw	r30, 0x02	; 2
    1d36:	04 c0       	rjmp	.+8      	; 0x1d40 <strrev+0x18>
    1d38:	7c 91       	ld	r23, X
    1d3a:	6d 93       	st	X+, r22
    1d3c:	70 83       	st	Z, r23
    1d3e:	62 91       	ld	r22, -Z
    1d40:	ae 17       	cp	r26, r30
    1d42:	bf 07       	cpc	r27, r31
    1d44:	c8 f3       	brcs	.-14     	; 0x1d38 <strrev+0x10>
    1d46:	08 95       	ret

00001d48 <_exit>:
    1d48:	f8 94       	cli

00001d4a <__stop_program>:
    1d4a:	ff cf       	rjmp	.-2      	; 0x1d4a <__stop_program>
=======
    1088:	e2 f7       	brpl	.-8      	; 0x1082 <DIO_Initpin+0x148>
    108a:	80 95       	com	r24
    108c:	82 23       	and	r24, r18
    108e:	85 bb       	out	0x15, r24	; 21
    1090:	08 95       	ret
    1092:	22 b3       	in	r18, 0x12	; 18
    1094:	81 e0       	ldi	r24, 0x01	; 1
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	01 80       	ldd	r0, Z+1	; 0x01
    109a:	02 c0       	rjmp	.+4      	; 0x10a0 <DIO_Initpin+0x166>
    109c:	88 0f       	add	r24, r24
    109e:	99 1f       	adc	r25, r25
    10a0:	0a 94       	dec	r0
    10a2:	e2 f7       	brpl	.-8      	; 0x109c <DIO_Initpin+0x162>
    10a4:	80 95       	com	r24
    10a6:	82 23       	and	r24, r18
    10a8:	82 bb       	out	0x12, r24	; 18
    10aa:	08 95       	ret
    10ac:	81 30       	cpi	r24, 0x01	; 1
    10ae:	09 f0       	breq	.+2      	; 0x10b2 <DIO_Initpin+0x178>
    10b0:	b0 c0       	rjmp	.+352    	; 0x1212 <DIO_Initpin+0x2d8>
    10b2:	80 81       	ld	r24, Z
    10b4:	81 30       	cpi	r24, 0x01	; 1
    10b6:	91 f0       	breq	.+36     	; 0x10dc <DIO_Initpin+0x1a2>
    10b8:	28 f0       	brcs	.+10     	; 0x10c4 <DIO_Initpin+0x18a>
    10ba:	82 30       	cpi	r24, 0x02	; 2
    10bc:	d9 f0       	breq	.+54     	; 0x10f4 <DIO_Initpin+0x1ba>
    10be:	83 30       	cpi	r24, 0x03	; 3
    10c0:	29 f1       	breq	.+74     	; 0x110c <DIO_Initpin+0x1d2>
    10c2:	2f c0       	rjmp	.+94     	; 0x1122 <DIO_Initpin+0x1e8>
    10c4:	2a b3       	in	r18, 0x1a	; 26
    10c6:	81 e0       	ldi	r24, 0x01	; 1
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	01 80       	ldd	r0, Z+1	; 0x01
    10cc:	02 c0       	rjmp	.+4      	; 0x10d2 <DIO_Initpin+0x198>
    10ce:	88 0f       	add	r24, r24
    10d0:	99 1f       	adc	r25, r25
    10d2:	0a 94       	dec	r0
    10d4:	e2 f7       	brpl	.-8      	; 0x10ce <DIO_Initpin+0x194>
    10d6:	82 2b       	or	r24, r18
    10d8:	8a bb       	out	0x1a, r24	; 26
    10da:	23 c0       	rjmp	.+70     	; 0x1122 <DIO_Initpin+0x1e8>
    10dc:	27 b3       	in	r18, 0x17	; 23
    10de:	81 e0       	ldi	r24, 0x01	; 1
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	01 80       	ldd	r0, Z+1	; 0x01
    10e4:	02 c0       	rjmp	.+4      	; 0x10ea <DIO_Initpin+0x1b0>
    10e6:	88 0f       	add	r24, r24
    10e8:	99 1f       	adc	r25, r25
    10ea:	0a 94       	dec	r0
    10ec:	e2 f7       	brpl	.-8      	; 0x10e6 <DIO_Initpin+0x1ac>
    10ee:	82 2b       	or	r24, r18
    10f0:	87 bb       	out	0x17, r24	; 23
    10f2:	17 c0       	rjmp	.+46     	; 0x1122 <DIO_Initpin+0x1e8>
    10f4:	24 b3       	in	r18, 0x14	; 20
    10f6:	81 e0       	ldi	r24, 0x01	; 1
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	01 80       	ldd	r0, Z+1	; 0x01
    10fc:	02 c0       	rjmp	.+4      	; 0x1102 <DIO_Initpin+0x1c8>
    10fe:	88 0f       	add	r24, r24
    1100:	99 1f       	adc	r25, r25
    1102:	0a 94       	dec	r0
    1104:	e2 f7       	brpl	.-8      	; 0x10fe <DIO_Initpin+0x1c4>
    1106:	82 2b       	or	r24, r18
    1108:	84 bb       	out	0x14, r24	; 20
    110a:	0b c0       	rjmp	.+22     	; 0x1122 <DIO_Initpin+0x1e8>
    110c:	21 b3       	in	r18, 0x11	; 17
    110e:	81 e0       	ldi	r24, 0x01	; 1
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	01 80       	ldd	r0, Z+1	; 0x01
    1114:	02 c0       	rjmp	.+4      	; 0x111a <DIO_Initpin+0x1e0>
    1116:	88 0f       	add	r24, r24
    1118:	99 1f       	adc	r25, r25
    111a:	0a 94       	dec	r0
    111c:	e2 f7       	brpl	.-8      	; 0x1116 <DIO_Initpin+0x1dc>
    111e:	82 2b       	or	r24, r18
    1120:	81 bb       	out	0x11, r24	; 17
    1122:	83 81       	ldd	r24, Z+3	; 0x03
    1124:	81 11       	cpse	r24, r1
    1126:	39 c0       	rjmp	.+114    	; 0x119a <DIO_Initpin+0x260>
    1128:	80 81       	ld	r24, Z
    112a:	81 30       	cpi	r24, 0x01	; 1
    112c:	91 f0       	breq	.+36     	; 0x1152 <DIO_Initpin+0x218>
    112e:	28 f0       	brcs	.+10     	; 0x113a <DIO_Initpin+0x200>
    1130:	82 30       	cpi	r24, 0x02	; 2
    1132:	d9 f0       	breq	.+54     	; 0x116a <DIO_Initpin+0x230>
    1134:	83 30       	cpi	r24, 0x03	; 3
    1136:	29 f1       	breq	.+74     	; 0x1182 <DIO_Initpin+0x248>
    1138:	08 95       	ret
    113a:	2b b3       	in	r18, 0x1b	; 27
    113c:	81 e0       	ldi	r24, 0x01	; 1
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	01 80       	ldd	r0, Z+1	; 0x01
    1142:	02 c0       	rjmp	.+4      	; 0x1148 <DIO_Initpin+0x20e>
    1144:	88 0f       	add	r24, r24
    1146:	99 1f       	adc	r25, r25
    1148:	0a 94       	dec	r0
    114a:	e2 f7       	brpl	.-8      	; 0x1144 <DIO_Initpin+0x20a>
    114c:	82 2b       	or	r24, r18
    114e:	8b bb       	out	0x1b, r24	; 27
    1150:	08 95       	ret
    1152:	28 b3       	in	r18, 0x18	; 24
    1154:	81 e0       	ldi	r24, 0x01	; 1
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	01 80       	ldd	r0, Z+1	; 0x01
    115a:	02 c0       	rjmp	.+4      	; 0x1160 <DIO_Initpin+0x226>
    115c:	88 0f       	add	r24, r24
    115e:	99 1f       	adc	r25, r25
    1160:	0a 94       	dec	r0
    1162:	e2 f7       	brpl	.-8      	; 0x115c <DIO_Initpin+0x222>
    1164:	82 2b       	or	r24, r18
    1166:	88 bb       	out	0x18, r24	; 24
    1168:	08 95       	ret
    116a:	25 b3       	in	r18, 0x15	; 21
    116c:	81 e0       	ldi	r24, 0x01	; 1
    116e:	90 e0       	ldi	r25, 0x00	; 0
    1170:	01 80       	ldd	r0, Z+1	; 0x01
    1172:	02 c0       	rjmp	.+4      	; 0x1178 <DIO_Initpin+0x23e>
    1174:	88 0f       	add	r24, r24
    1176:	99 1f       	adc	r25, r25
    1178:	0a 94       	dec	r0
    117a:	e2 f7       	brpl	.-8      	; 0x1174 <DIO_Initpin+0x23a>
    117c:	82 2b       	or	r24, r18
    117e:	85 bb       	out	0x15, r24	; 21
    1180:	08 95       	ret
    1182:	22 b3       	in	r18, 0x12	; 18
    1184:	81 e0       	ldi	r24, 0x01	; 1
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	01 80       	ldd	r0, Z+1	; 0x01
    118a:	02 c0       	rjmp	.+4      	; 0x1190 <DIO_Initpin+0x256>
    118c:	88 0f       	add	r24, r24
    118e:	99 1f       	adc	r25, r25
    1190:	0a 94       	dec	r0
    1192:	e2 f7       	brpl	.-8      	; 0x118c <DIO_Initpin+0x252>
    1194:	82 2b       	or	r24, r18
    1196:	82 bb       	out	0x12, r24	; 18
    1198:	08 95       	ret
    119a:	80 81       	ld	r24, Z
    119c:	81 30       	cpi	r24, 0x01	; 1
    119e:	99 f0       	breq	.+38     	; 0x11c6 <DIO_Initpin+0x28c>
    11a0:	28 f0       	brcs	.+10     	; 0x11ac <DIO_Initpin+0x272>
    11a2:	82 30       	cpi	r24, 0x02	; 2
    11a4:	e9 f0       	breq	.+58     	; 0x11e0 <DIO_Initpin+0x2a6>
    11a6:	83 30       	cpi	r24, 0x03	; 3
    11a8:	41 f1       	breq	.+80     	; 0x11fa <DIO_Initpin+0x2c0>
    11aa:	08 95       	ret
    11ac:	2b b3       	in	r18, 0x1b	; 27
    11ae:	81 e0       	ldi	r24, 0x01	; 1
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	01 80       	ldd	r0, Z+1	; 0x01
    11b4:	02 c0       	rjmp	.+4      	; 0x11ba <DIO_Initpin+0x280>
    11b6:	88 0f       	add	r24, r24
    11b8:	99 1f       	adc	r25, r25
    11ba:	0a 94       	dec	r0
    11bc:	e2 f7       	brpl	.-8      	; 0x11b6 <DIO_Initpin+0x27c>
    11be:	80 95       	com	r24
    11c0:	82 23       	and	r24, r18
    11c2:	8b bb       	out	0x1b, r24	; 27
    11c4:	08 95       	ret
    11c6:	28 b3       	in	r18, 0x18	; 24
    11c8:	81 e0       	ldi	r24, 0x01	; 1
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	01 80       	ldd	r0, Z+1	; 0x01
    11ce:	02 c0       	rjmp	.+4      	; 0x11d4 <DIO_Initpin+0x29a>
    11d0:	88 0f       	add	r24, r24
    11d2:	99 1f       	adc	r25, r25
    11d4:	0a 94       	dec	r0
    11d6:	e2 f7       	brpl	.-8      	; 0x11d0 <DIO_Initpin+0x296>
    11d8:	80 95       	com	r24
    11da:	82 23       	and	r24, r18
    11dc:	88 bb       	out	0x18, r24	; 24
    11de:	08 95       	ret
    11e0:	25 b3       	in	r18, 0x15	; 21
    11e2:	81 e0       	ldi	r24, 0x01	; 1
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	01 80       	ldd	r0, Z+1	; 0x01
    11e8:	02 c0       	rjmp	.+4      	; 0x11ee <DIO_Initpin+0x2b4>
    11ea:	88 0f       	add	r24, r24
    11ec:	99 1f       	adc	r25, r25
    11ee:	0a 94       	dec	r0
    11f0:	e2 f7       	brpl	.-8      	; 0x11ea <DIO_Initpin+0x2b0>
    11f2:	80 95       	com	r24
    11f4:	82 23       	and	r24, r18
    11f6:	85 bb       	out	0x15, r24	; 21
    11f8:	08 95       	ret
    11fa:	22 b3       	in	r18, 0x12	; 18
    11fc:	81 e0       	ldi	r24, 0x01	; 1
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	01 80       	ldd	r0, Z+1	; 0x01
    1202:	02 c0       	rjmp	.+4      	; 0x1208 <DIO_Initpin+0x2ce>
    1204:	88 0f       	add	r24, r24
    1206:	99 1f       	adc	r25, r25
    1208:	0a 94       	dec	r0
    120a:	e2 f7       	brpl	.-8      	; 0x1204 <DIO_Initpin+0x2ca>
    120c:	80 95       	com	r24
    120e:	82 23       	and	r24, r18
    1210:	82 bb       	out	0x12, r24	; 18
    1212:	08 95       	ret

00001214 <ICU_getValue>:
    1214:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <ICU_g_Count>
    1218:	30 91 f7 00 	lds	r19, 0x00F7	; 0x8000f7 <ICU_g_Count+0x1>
    121c:	fc 01       	movw	r30, r24
    121e:	31 83       	std	Z+1, r19	; 0x01
    1220:	20 83       	st	Z, r18
    1222:	08 95       	ret

00001224 <EXI_enablePIE>:
    1224:	83 30       	cpi	r24, 0x03	; 3
    1226:	08 f0       	brcs	.+2      	; 0x122a <EXI_enablePIE+0x6>
    1228:	75 c0       	rjmp	.+234    	; 0x1314 <EXI_enablePIE+0xf0>
    122a:	64 30       	cpi	r22, 0x04	; 4
    122c:	08 f0       	brcs	.+2      	; 0x1230 <EXI_enablePIE+0xc>
    122e:	74 c0       	rjmp	.+232    	; 0x1318 <EXI_enablePIE+0xf4>
    1230:	9f b7       	in	r25, 0x3f	; 63
    1232:	90 68       	ori	r25, 0x80	; 128
    1234:	9f bf       	out	0x3f, r25	; 63
    1236:	81 30       	cpi	r24, 0x01	; 1
    1238:	81 f1       	breq	.+96     	; 0x129a <EXI_enablePIE+0x76>
    123a:	20 f0       	brcs	.+8      	; 0x1244 <EXI_enablePIE+0x20>
    123c:	82 30       	cpi	r24, 0x02	; 2
    123e:	09 f4       	brne	.+2      	; 0x1242 <EXI_enablePIE+0x1e>
    1240:	57 c0       	rjmp	.+174    	; 0x12f0 <EXI_enablePIE+0xcc>
    1242:	6c c0       	rjmp	.+216    	; 0x131c <EXI_enablePIE+0xf8>
    1244:	8b b7       	in	r24, 0x3b	; 59
    1246:	80 64       	ori	r24, 0x40	; 64
    1248:	8b bf       	out	0x3b, r24	; 59
    124a:	61 30       	cpi	r22, 0x01	; 1
    124c:	71 f0       	breq	.+28     	; 0x126a <EXI_enablePIE+0x46>
    124e:	28 f0       	brcs	.+10     	; 0x125a <EXI_enablePIE+0x36>
    1250:	62 30       	cpi	r22, 0x02	; 2
    1252:	99 f0       	breq	.+38     	; 0x127a <EXI_enablePIE+0x56>
    1254:	63 30       	cpi	r22, 0x03	; 3
    1256:	c9 f0       	breq	.+50     	; 0x128a <EXI_enablePIE+0x66>
    1258:	63 c0       	rjmp	.+198    	; 0x1320 <EXI_enablePIE+0xfc>
    125a:	85 b7       	in	r24, 0x35	; 53
    125c:	8e 7f       	andi	r24, 0xFE	; 254
    125e:	85 bf       	out	0x35, r24	; 53
    1260:	85 b7       	in	r24, 0x35	; 53
    1262:	8d 7f       	andi	r24, 0xFD	; 253
    1264:	85 bf       	out	0x35, r24	; 53
    1266:	80 e0       	ldi	r24, 0x00	; 0
    1268:	08 95       	ret
    126a:	85 b7       	in	r24, 0x35	; 53
    126c:	81 60       	ori	r24, 0x01	; 1
    126e:	85 bf       	out	0x35, r24	; 53
    1270:	85 b7       	in	r24, 0x35	; 53
    1272:	8d 7f       	andi	r24, 0xFD	; 253
    1274:	85 bf       	out	0x35, r24	; 53
    1276:	80 e0       	ldi	r24, 0x00	; 0
    1278:	08 95       	ret
    127a:	85 b7       	in	r24, 0x35	; 53
    127c:	8e 7f       	andi	r24, 0xFE	; 254
    127e:	85 bf       	out	0x35, r24	; 53
    1280:	85 b7       	in	r24, 0x35	; 53
    1282:	82 60       	ori	r24, 0x02	; 2
    1284:	85 bf       	out	0x35, r24	; 53
    1286:	80 e0       	ldi	r24, 0x00	; 0
    1288:	08 95       	ret
    128a:	85 b7       	in	r24, 0x35	; 53
    128c:	81 60       	ori	r24, 0x01	; 1
    128e:	85 bf       	out	0x35, r24	; 53
    1290:	85 b7       	in	r24, 0x35	; 53
    1292:	82 60       	ori	r24, 0x02	; 2
    1294:	85 bf       	out	0x35, r24	; 53
    1296:	80 e0       	ldi	r24, 0x00	; 0
    1298:	08 95       	ret
    129a:	8b b7       	in	r24, 0x3b	; 59
    129c:	80 68       	ori	r24, 0x80	; 128
    129e:	8b bf       	out	0x3b, r24	; 59
    12a0:	61 30       	cpi	r22, 0x01	; 1
    12a2:	71 f0       	breq	.+28     	; 0x12c0 <EXI_enablePIE+0x9c>
    12a4:	28 f0       	brcs	.+10     	; 0x12b0 <EXI_enablePIE+0x8c>
    12a6:	62 30       	cpi	r22, 0x02	; 2
    12a8:	99 f0       	breq	.+38     	; 0x12d0 <EXI_enablePIE+0xac>
    12aa:	63 30       	cpi	r22, 0x03	; 3
    12ac:	c9 f0       	breq	.+50     	; 0x12e0 <EXI_enablePIE+0xbc>
    12ae:	3a c0       	rjmp	.+116    	; 0x1324 <EXI_enablePIE+0x100>
    12b0:	85 b7       	in	r24, 0x35	; 53
    12b2:	8b 7f       	andi	r24, 0xFB	; 251
    12b4:	85 bf       	out	0x35, r24	; 53
    12b6:	85 b7       	in	r24, 0x35	; 53
    12b8:	87 7f       	andi	r24, 0xF7	; 247
    12ba:	85 bf       	out	0x35, r24	; 53
    12bc:	80 e0       	ldi	r24, 0x00	; 0
    12be:	08 95       	ret
    12c0:	85 b7       	in	r24, 0x35	; 53
    12c2:	84 60       	ori	r24, 0x04	; 4
    12c4:	85 bf       	out	0x35, r24	; 53
    12c6:	85 b7       	in	r24, 0x35	; 53
    12c8:	87 7f       	andi	r24, 0xF7	; 247
    12ca:	85 bf       	out	0x35, r24	; 53
    12cc:	80 e0       	ldi	r24, 0x00	; 0
    12ce:	08 95       	ret
    12d0:	85 b7       	in	r24, 0x35	; 53
    12d2:	8b 7f       	andi	r24, 0xFB	; 251
    12d4:	85 bf       	out	0x35, r24	; 53
    12d6:	85 b7       	in	r24, 0x35	; 53
    12d8:	88 60       	ori	r24, 0x08	; 8
    12da:	85 bf       	out	0x35, r24	; 53
    12dc:	80 e0       	ldi	r24, 0x00	; 0
    12de:	08 95       	ret
    12e0:	85 b7       	in	r24, 0x35	; 53
    12e2:	84 60       	ori	r24, 0x04	; 4
    12e4:	85 bf       	out	0x35, r24	; 53
    12e6:	85 b7       	in	r24, 0x35	; 53
    12e8:	88 60       	ori	r24, 0x08	; 8
    12ea:	85 bf       	out	0x35, r24	; 53
    12ec:	80 e0       	ldi	r24, 0x00	; 0
    12ee:	08 95       	ret
    12f0:	8b b7       	in	r24, 0x3b	; 59
    12f2:	80 62       	ori	r24, 0x20	; 32
    12f4:	8b bf       	out	0x3b, r24	; 59
    12f6:	62 30       	cpi	r22, 0x02	; 2
    12f8:	19 f0       	breq	.+6      	; 0x1300 <EXI_enablePIE+0xdc>
    12fa:	63 30       	cpi	r22, 0x03	; 3
    12fc:	31 f0       	breq	.+12     	; 0x130a <EXI_enablePIE+0xe6>
    12fe:	14 c0       	rjmp	.+40     	; 0x1328 <EXI_enablePIE+0x104>
    1300:	84 b7       	in	r24, 0x34	; 52
    1302:	8f 7b       	andi	r24, 0xBF	; 191
    1304:	84 bf       	out	0x34, r24	; 52
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	08 95       	ret
    130a:	84 b7       	in	r24, 0x34	; 52
    130c:	80 64       	ori	r24, 0x40	; 64
    130e:	84 bf       	out	0x34, r24	; 52
    1310:	80 e0       	ldi	r24, 0x00	; 0
    1312:	08 95       	ret
    1314:	81 e0       	ldi	r24, 0x01	; 1
    1316:	08 95       	ret
    1318:	81 e0       	ldi	r24, 0x01	; 1
    131a:	08 95       	ret
    131c:	80 e0       	ldi	r24, 0x00	; 0
    131e:	08 95       	ret
    1320:	80 e0       	ldi	r24, 0x00	; 0
    1322:	08 95       	ret
    1324:	80 e0       	ldi	r24, 0x00	; 0
    1326:	08 95       	ret
    1328:	80 e0       	ldi	r24, 0x00	; 0
    132a:	08 95       	ret

0000132c <TIMER_tmr1NormalModeInit>:
    132c:	88 23       	and	r24, r24
    132e:	19 f0       	breq	.+6      	; 0x1336 <TIMER_tmr1NormalModeInit+0xa>
    1330:	81 30       	cpi	r24, 0x01	; 1
    1332:	d9 f0       	breq	.+54     	; 0x136a <TIMER_tmr1NormalModeInit+0x3e>
    1334:	2e c0       	rjmp	.+92     	; 0x1392 <TIMER_tmr1NormalModeInit+0x66>
    1336:	8f b5       	in	r24, 0x2f	; 47
    1338:	8e 7f       	andi	r24, 0xFE	; 254
    133a:	8f bd       	out	0x2f, r24	; 47
    133c:	8f b5       	in	r24, 0x2f	; 47
    133e:	8d 7f       	andi	r24, 0xFD	; 253
    1340:	8f bd       	out	0x2f, r24	; 47
    1342:	8e b5       	in	r24, 0x2e	; 46
    1344:	87 7f       	andi	r24, 0xF7	; 247
    1346:	8e bd       	out	0x2e, r24	; 46
    1348:	8e b5       	in	r24, 0x2e	; 46
    134a:	8f 7e       	andi	r24, 0xEF	; 239
    134c:	8e bd       	out	0x2e, r24	; 46
    134e:	8f b5       	in	r24, 0x2f	; 47
    1350:	88 60       	ori	r24, 0x08	; 8
    1352:	8f bd       	out	0x2f, r24	; 47
    1354:	8f b5       	in	r24, 0x2f	; 47
    1356:	84 60       	ori	r24, 0x04	; 4
    1358:	8f bd       	out	0x2f, r24	; 47
    135a:	8f b7       	in	r24, 0x3f	; 63
    135c:	80 68       	ori	r24, 0x80	; 128
    135e:	8f bf       	out	0x3f, r24	; 63
    1360:	89 b7       	in	r24, 0x39	; 57
    1362:	84 60       	ori	r24, 0x04	; 4
    1364:	89 bf       	out	0x39, r24	; 57
    1366:	80 e0       	ldi	r24, 0x00	; 0
    1368:	08 95       	ret
    136a:	8f b5       	in	r24, 0x2f	; 47
    136c:	8e 7f       	andi	r24, 0xFE	; 254
    136e:	8f bd       	out	0x2f, r24	; 47
    1370:	8f b5       	in	r24, 0x2f	; 47
    1372:	8d 7f       	andi	r24, 0xFD	; 253
    1374:	8f bd       	out	0x2f, r24	; 47
    1376:	8e b5       	in	r24, 0x2e	; 46
    1378:	87 7f       	andi	r24, 0xF7	; 247
    137a:	8e bd       	out	0x2e, r24	; 46
    137c:	8e b5       	in	r24, 0x2e	; 46
    137e:	8f 7e       	andi	r24, 0xEF	; 239
    1380:	8e bd       	out	0x2e, r24	; 46
    1382:	8f b5       	in	r24, 0x2f	; 47
    1384:	88 60       	ori	r24, 0x08	; 8
    1386:	8f bd       	out	0x2f, r24	; 47
    1388:	8f b5       	in	r24, 0x2f	; 47
    138a:	84 60       	ori	r24, 0x04	; 4
    138c:	8f bd       	out	0x2f, r24	; 47
    138e:	80 e0       	ldi	r24, 0x00	; 0
    1390:	08 95       	ret
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	08 95       	ret

00001396 <TIMER_tmr1Start>:
    1396:	80 34       	cpi	r24, 0x40	; 64
    1398:	91 05       	cpc	r25, r1
    139a:	29 f1       	breq	.+74     	; 0x13e6 <TIMER_tmr1Start+0x50>
    139c:	30 f4       	brcc	.+12     	; 0x13aa <TIMER_tmr1Start+0x14>
    139e:	81 30       	cpi	r24, 0x01	; 1
    13a0:	91 05       	cpc	r25, r1
    13a2:	59 f0       	breq	.+22     	; 0x13ba <TIMER_tmr1Start+0x24>
    13a4:	08 97       	sbiw	r24, 0x08	; 8
    13a6:	a1 f0       	breq	.+40     	; 0x13d0 <TIMER_tmr1Start+0x3a>
    13a8:	3f c0       	rjmp	.+126    	; 0x1428 <TIMER_tmr1Start+0x92>
    13aa:	81 15       	cp	r24, r1
    13ac:	21 e0       	ldi	r18, 0x01	; 1
    13ae:	92 07       	cpc	r25, r18
    13b0:	29 f1       	breq	.+74     	; 0x13fc <TIMER_tmr1Start+0x66>
    13b2:	81 15       	cp	r24, r1
    13b4:	94 40       	sbci	r25, 0x04	; 4
    13b6:	69 f1       	breq	.+90     	; 0x1412 <TIMER_tmr1Start+0x7c>
    13b8:	37 c0       	rjmp	.+110    	; 0x1428 <TIMER_tmr1Start+0x92>
    13ba:	8e b5       	in	r24, 0x2e	; 46
    13bc:	8d 7f       	andi	r24, 0xFD	; 253
    13be:	8e bd       	out	0x2e, r24	; 46
    13c0:	8e b5       	in	r24, 0x2e	; 46
    13c2:	8b 7f       	andi	r24, 0xFB	; 251
    13c4:	8e bd       	out	0x2e, r24	; 46
    13c6:	8e b5       	in	r24, 0x2e	; 46
    13c8:	81 60       	ori	r24, 0x01	; 1
    13ca:	8e bd       	out	0x2e, r24	; 46
    13cc:	80 e0       	ldi	r24, 0x00	; 0
    13ce:	08 95       	ret
    13d0:	8e b5       	in	r24, 0x2e	; 46
    13d2:	8e 7f       	andi	r24, 0xFE	; 254
    13d4:	8e bd       	out	0x2e, r24	; 46
    13d6:	8e b5       	in	r24, 0x2e	; 46
    13d8:	8b 7f       	andi	r24, 0xFB	; 251
    13da:	8e bd       	out	0x2e, r24	; 46
    13dc:	8e b5       	in	r24, 0x2e	; 46
    13de:	82 60       	ori	r24, 0x02	; 2
    13e0:	8e bd       	out	0x2e, r24	; 46
    13e2:	80 e0       	ldi	r24, 0x00	; 0
    13e4:	08 95       	ret
    13e6:	8e b5       	in	r24, 0x2e	; 46
    13e8:	8b 7f       	andi	r24, 0xFB	; 251
    13ea:	8e bd       	out	0x2e, r24	; 46
    13ec:	8e b5       	in	r24, 0x2e	; 46
    13ee:	82 60       	ori	r24, 0x02	; 2
    13f0:	8e bd       	out	0x2e, r24	; 46
    13f2:	8e b5       	in	r24, 0x2e	; 46
    13f4:	81 60       	ori	r24, 0x01	; 1
    13f6:	8e bd       	out	0x2e, r24	; 46
    13f8:	80 e0       	ldi	r24, 0x00	; 0
    13fa:	08 95       	ret
    13fc:	8e b5       	in	r24, 0x2e	; 46
    13fe:	8d 7f       	andi	r24, 0xFD	; 253
    1400:	8e bd       	out	0x2e, r24	; 46
    1402:	8e b5       	in	r24, 0x2e	; 46
    1404:	8e 7f       	andi	r24, 0xFE	; 254
    1406:	8e bd       	out	0x2e, r24	; 46
    1408:	8e b5       	in	r24, 0x2e	; 46
    140a:	84 60       	ori	r24, 0x04	; 4
    140c:	8e bd       	out	0x2e, r24	; 46
    140e:	80 e0       	ldi	r24, 0x00	; 0
    1410:	08 95       	ret
    1412:	8e b5       	in	r24, 0x2e	; 46
    1414:	8d 7f       	andi	r24, 0xFD	; 253
    1416:	8e bd       	out	0x2e, r24	; 46
    1418:	8e b5       	in	r24, 0x2e	; 46
    141a:	84 60       	ori	r24, 0x04	; 4
    141c:	8e bd       	out	0x2e, r24	; 46
    141e:	8e b5       	in	r24, 0x2e	; 46
    1420:	81 60       	ori	r24, 0x01	; 1
    1422:	8e bd       	out	0x2e, r24	; 46
    1424:	80 e0       	ldi	r24, 0x00	; 0
    1426:	08 95       	ret
    1428:	81 e0       	ldi	r24, 0x01	; 1
    142a:	08 95       	ret

0000142c <TIMER_tmr1Stop>:
    142c:	8e b5       	in	r24, 0x2e	; 46
    142e:	8e 7f       	andi	r24, 0xFE	; 254
    1430:	8e bd       	out	0x2e, r24	; 46
    1432:	8e b5       	in	r24, 0x2e	; 46
    1434:	8d 7f       	andi	r24, 0xFD	; 253
    1436:	8e bd       	out	0x2e, r24	; 46
    1438:	8e b5       	in	r24, 0x2e	; 46
    143a:	8b 7f       	andi	r24, 0xFB	; 251
    143c:	8e bd       	out	0x2e, r24	; 46
    143e:	08 95       	ret

00001440 <ICU_RisingEdgeCapture>:
    1440:	cf 93       	push	r28
    1442:	df 93       	push	r29
    1444:	c9 e8       	ldi	r28, 0x89	; 137
    1446:	d0 e0       	ldi	r29, 0x00	; 0
    1448:	8b 81       	ldd	r24, Y+3	; 0x03
    144a:	0e 94 96 09 	call	0x132c	; 0x132c <TIMER_tmr1NormalModeInit>
    144e:	0e 94 16 0a 	call	0x142c	; 0x142c <TIMER_tmr1Stop>
    1452:	69 81       	ldd	r22, Y+1	; 0x01
    1454:	88 81       	ld	r24, Y
    1456:	0e 94 12 09 	call	0x1224	; 0x1224 <EXI_enablePIE>
    145a:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <ICU_g_edgeFlag>
    145e:	81 e0       	ldi	r24, 0x01	; 1
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	0e 94 cb 09 	call	0x1396	; 0x1396 <TIMER_tmr1Start>
    1466:	df 91       	pop	r29
    1468:	cf 91       	pop	r28
    146a:	08 95       	ret

0000146c <__vector_1>:
    146c:	1f 92       	push	r1
    146e:	0f 92       	push	r0
    1470:	0f b6       	in	r0, 0x3f	; 63
    1472:	0f 92       	push	r0
    1474:	11 24       	eor	r1, r1
    1476:	2f 93       	push	r18
    1478:	3f 93       	push	r19
    147a:	4f 93       	push	r20
    147c:	5f 93       	push	r21
    147e:	6f 93       	push	r22
    1480:	7f 93       	push	r23
    1482:	8f 93       	push	r24
    1484:	9f 93       	push	r25
    1486:	af 93       	push	r26
    1488:	bf 93       	push	r27
    148a:	ef 93       	push	r30
    148c:	ff 93       	push	r31
    148e:	8c b5       	in	r24, 0x2c	; 44
    1490:	9d b5       	in	r25, 0x2d	; 45
    1492:	90 93 00 01 	sts	0x0100, r25	; 0x800100 <TIMER_g_timer1RegValue+0x1>
    1496:	80 93 ff 00 	sts	0x00FF, r24	; 0x8000ff <TIMER_g_timer1RegValue>
    149a:	20 91 0b 01 	lds	r18, 0x010B	; 0x80010b <ICU_g_edgeFlag>
    149e:	21 11       	cpse	r18, r1
    14a0:	14 c0       	rjmp	.+40     	; 0x14ca <__vector_1+0x5e>
    14a2:	90 93 fc 00 	sts	0x00FC, r25	; 0x8000fc <ICU_g_ValueRising+0x1>
    14a6:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <ICU_g_ValueRising>
    14aa:	1d bc       	out	0x2d, r1	; 45
    14ac:	1c bc       	out	0x2c, r1	; 44
    14ae:	e9 e8       	ldi	r30, 0x89	; 137
    14b0:	f0 e0       	ldi	r31, 0x00	; 0
    14b2:	62 81       	ldd	r22, Z+2	; 0x02
    14b4:	80 81       	ld	r24, Z
    14b6:	0e 94 12 09 	call	0x1224	; 0x1224 <EXI_enablePIE>
    14ba:	10 92 fe 00 	sts	0x00FE, r1	; 0x8000fe <u32_g_timer1Overflow+0x1>
    14be:	10 92 fd 00 	sts	0x00FD, r1	; 0x8000fd <u32_g_timer1Overflow>
    14c2:	81 e0       	ldi	r24, 0x01	; 1
    14c4:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <ICU_g_edgeFlag>
    14c8:	13 c0       	rjmp	.+38     	; 0x14f0 <__vector_1+0x84>
    14ca:	90 93 fa 00 	sts	0x00FA, r25	; 0x8000fa <ICU_g_ValueFalling+0x1>
    14ce:	80 93 f9 00 	sts	0x00F9, r24	; 0x8000f9 <ICU_g_ValueFalling>
    14d2:	20 91 fd 00 	lds	r18, 0x00FD	; 0x8000fd <u32_g_timer1Overflow>
    14d6:	30 91 fe 00 	lds	r19, 0x00FE	; 0x8000fe <u32_g_timer1Overflow+0x1>
    14da:	82 1b       	sub	r24, r18
    14dc:	93 0b       	sbc	r25, r19
    14de:	90 93 f7 00 	sts	0x00F7, r25	; 0x8000f7 <ICU_g_Count+0x1>
    14e2:	80 93 f6 00 	sts	0x00F6, r24	; 0x8000f6 <ICU_g_Count>
    14e6:	0e 94 16 0a 	call	0x142c	; 0x142c <TIMER_tmr1Stop>
    14ea:	81 e0       	ldi	r24, 0x01	; 1
    14ec:	80 93 f8 00 	sts	0x00F8, r24	; 0x8000f8 <ICU_g_flag>
    14f0:	ff 91       	pop	r31
    14f2:	ef 91       	pop	r30
    14f4:	bf 91       	pop	r27
    14f6:	af 91       	pop	r26
    14f8:	9f 91       	pop	r25
    14fa:	8f 91       	pop	r24
    14fc:	7f 91       	pop	r23
    14fe:	6f 91       	pop	r22
    1500:	5f 91       	pop	r21
    1502:	4f 91       	pop	r20
    1504:	3f 91       	pop	r19
    1506:	2f 91       	pop	r18
    1508:	0f 90       	pop	r0
    150a:	0f be       	out	0x3f, r0	; 63
    150c:	0f 90       	pop	r0
    150e:	1f 90       	pop	r1
    1510:	18 95       	reti

00001512 <__vector_9>:
    1512:	1f 92       	push	r1
    1514:	0f 92       	push	r0
    1516:	0f b6       	in	r0, 0x3f	; 63
    1518:	0f 92       	push	r0
    151a:	11 24       	eor	r1, r1
    151c:	8f 93       	push	r24
    151e:	9f 93       	push	r25
    1520:	80 91 fd 00 	lds	r24, 0x00FD	; 0x8000fd <u32_g_timer1Overflow>
    1524:	90 91 fe 00 	lds	r25, 0x00FE	; 0x8000fe <u32_g_timer1Overflow+0x1>
    1528:	01 96       	adiw	r24, 0x01	; 1
    152a:	90 93 fe 00 	sts	0x00FE, r25	; 0x8000fe <u32_g_timer1Overflow+0x1>
    152e:	80 93 fd 00 	sts	0x00FD, r24	; 0x8000fd <u32_g_timer1Overflow>
    1532:	9f 91       	pop	r25
    1534:	8f 91       	pop	r24
    1536:	0f 90       	pop	r0
    1538:	0f be       	out	0x3f, r0	; 63
    153a:	0f 90       	pop	r0
    153c:	1f 90       	pop	r1
    153e:	18 95       	reti

00001540 <MCU_vEnableInterrupt>:
    1540:	8f b7       	in	r24, 0x3f	; 63
    1542:	80 68       	ori	r24, 0x80	; 128
    1544:	8f bf       	out	0x3f, r24	; 63
    1546:	08 95       	ret

00001548 <TIMER0_PWM_ExecutedFunction>:
    1548:	cf 93       	push	r28
    154a:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <u8_g_on_off_state>
    154e:	88 23       	and	r24, r24
    1550:	a1 f0       	breq	.+40     	; 0x157a <TIMER0_PWM_ExecutedFunction+0x32>
    1552:	c0 e0       	ldi	r28, 0x00	; 0
    1554:	2e c0       	rjmp	.+92     	; 0x15b2 <TIMER0_PWM_ExecutedFunction+0x6a>
    1556:	ec 2f       	mov	r30, r28
    1558:	f0 e0       	ldi	r31, 0x00	; 0
    155a:	cf 01       	movw	r24, r30
    155c:	88 0f       	add	r24, r24
    155e:	99 1f       	adc	r25, r25
    1560:	88 0f       	add	r24, r24
    1562:	99 1f       	adc	r25, r25
    1564:	e8 0f       	add	r30, r24
    1566:	f9 1f       	adc	r31, r25
    1568:	ed 51       	subi	r30, 0x1D	; 29
    156a:	ff 4f       	sbci	r31, 0xFF	; 255
    156c:	41 e0       	ldi	r20, 0x01	; 1
    156e:	61 81       	ldd	r22, Z+1	; 0x01
    1570:	80 81       	ld	r24, Z
    1572:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <DIO_WritePin>
    1576:	cf 5f       	subi	r28, 0xFF	; 255
    1578:	01 c0       	rjmp	.+2      	; 0x157c <TIMER0_PWM_ExecutedFunction+0x34>
    157a:	c0 e0       	ldi	r28, 0x00	; 0
    157c:	c2 30       	cpi	r28, 0x02	; 2
    157e:	58 f3       	brcs	.-42     	; 0x1556 <TIMER0_PWM_ExecutedFunction+0xe>
    1580:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <u8_g_OffTime>
    1584:	81 95       	neg	r24
    1586:	82 bf       	out	0x32, r24	; 50
    1588:	81 e0       	ldi	r24, 0x01	; 1
    158a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <u8_g_on_off_state>
    158e:	19 c0       	rjmp	.+50     	; 0x15c2 <TIMER0_PWM_ExecutedFunction+0x7a>
    1590:	ec 2f       	mov	r30, r28
    1592:	f0 e0       	ldi	r31, 0x00	; 0
    1594:	cf 01       	movw	r24, r30
    1596:	88 0f       	add	r24, r24
    1598:	99 1f       	adc	r25, r25
    159a:	88 0f       	add	r24, r24
    159c:	99 1f       	adc	r25, r25
    159e:	e8 0f       	add	r30, r24
    15a0:	f9 1f       	adc	r31, r25
    15a2:	ed 51       	subi	r30, 0x1D	; 29
    15a4:	ff 4f       	sbci	r31, 0xFF	; 255
    15a6:	40 e0       	ldi	r20, 0x00	; 0
    15a8:	61 81       	ldd	r22, Z+1	; 0x01
    15aa:	80 81       	ld	r24, Z
    15ac:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <DIO_WritePin>
    15b0:	cf 5f       	subi	r28, 0xFF	; 255
    15b2:	c2 30       	cpi	r28, 0x02	; 2
    15b4:	68 f3       	brcs	.-38     	; 0x1590 <TIMER0_PWM_ExecutedFunction+0x48>
    15b6:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <u8_g_OnTime>
    15ba:	81 95       	neg	r24
    15bc:	82 bf       	out	0x32, r24	; 50
    15be:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <u8_g_on_off_state>
    15c2:	cf 91       	pop	r28
    15c4:	08 95       	ret

000015c6 <__vector_11>:
    15c6:	1f 92       	push	r1
    15c8:	0f 92       	push	r0
    15ca:	0f b6       	in	r0, 0x3f	; 63
    15cc:	0f 92       	push	r0
    15ce:	11 24       	eor	r1, r1
    15d0:	2f 93       	push	r18
    15d2:	3f 93       	push	r19
    15d4:	4f 93       	push	r20
    15d6:	5f 93       	push	r21
    15d8:	6f 93       	push	r22
    15da:	7f 93       	push	r23
    15dc:	8f 93       	push	r24
    15de:	9f 93       	push	r25
    15e0:	af 93       	push	r26
    15e2:	bf 93       	push	r27
    15e4:	ef 93       	push	r30
    15e6:	ff 93       	push	r31
    15e8:	0e 94 a4 0a 	call	0x1548	; 0x1548 <TIMER0_PWM_ExecutedFunction>
    15ec:	ff 91       	pop	r31
    15ee:	ef 91       	pop	r30
    15f0:	bf 91       	pop	r27
    15f2:	af 91       	pop	r26
    15f4:	9f 91       	pop	r25
    15f6:	8f 91       	pop	r24
    15f8:	7f 91       	pop	r23
    15fa:	6f 91       	pop	r22
    15fc:	5f 91       	pop	r21
    15fe:	4f 91       	pop	r20
    1600:	3f 91       	pop	r19
    1602:	2f 91       	pop	r18
    1604:	0f 90       	pop	r0
    1606:	0f be       	out	0x3f, r0	; 63
    1608:	0f 90       	pop	r0
    160a:	1f 90       	pop	r1
    160c:	18 95       	reti

0000160e <TIMER_TMR2NormalModeInit>:
    160e:	88 23       	and	r24, r24
    1610:	19 f0       	breq	.+6      	; 0x1618 <TIMER_TMR2NormalModeInit+0xa>
    1612:	81 30       	cpi	r24, 0x01	; 1
    1614:	79 f0       	breq	.+30     	; 0x1634 <TIMER_TMR2NormalModeInit+0x26>
    1616:	16 c0       	rjmp	.+44     	; 0x1644 <TIMER_TMR2NormalModeInit+0x36>
    1618:	85 b5       	in	r24, 0x25	; 37
    161a:	8f 7b       	andi	r24, 0xBF	; 191
    161c:	85 bd       	out	0x25, r24	; 37
    161e:	85 b5       	in	r24, 0x25	; 37
    1620:	87 7f       	andi	r24, 0xF7	; 247
    1622:	85 bd       	out	0x25, r24	; 37
    1624:	8f b7       	in	r24, 0x3f	; 63
    1626:	80 68       	ori	r24, 0x80	; 128
    1628:	8f bf       	out	0x3f, r24	; 63
    162a:	89 b7       	in	r24, 0x39	; 57
    162c:	80 64       	ori	r24, 0x40	; 64
    162e:	89 bf       	out	0x39, r24	; 57
    1630:	80 e0       	ldi	r24, 0x00	; 0
    1632:	08 95       	ret
    1634:	85 b5       	in	r24, 0x25	; 37
    1636:	8f 7b       	andi	r24, 0xBF	; 191
    1638:	85 bd       	out	0x25, r24	; 37
    163a:	85 b5       	in	r24, 0x25	; 37
    163c:	87 7f       	andi	r24, 0xF7	; 247
    163e:	85 bd       	out	0x25, r24	; 37
    1640:	80 e0       	ldi	r24, 0x00	; 0
    1642:	08 95       	ret
    1644:	81 e0       	ldi	r24, 0x01	; 1
    1646:	08 95       	ret

00001648 <TIMER_TMR2Start>:
    1648:	80 34       	cpi	r24, 0x40	; 64
    164a:	91 05       	cpc	r25, r1
    164c:	c1 f1       	breq	.+112    	; 0x16be <TIMER_TMR2Start+0x76>
    164e:	50 f4       	brcc	.+20     	; 0x1664 <TIMER_TMR2Start+0x1c>
    1650:	88 30       	cpi	r24, 0x08	; 8
    1652:	91 05       	cpc	r25, r1
    1654:	01 f1       	breq	.+64     	; 0x1696 <TIMER_TMR2Start+0x4e>
    1656:	80 32       	cpi	r24, 0x20	; 32
    1658:	91 05       	cpc	r25, r1
    165a:	41 f1       	breq	.+80     	; 0x16ac <TIMER_TMR2Start+0x64>
    165c:	01 97       	sbiw	r24, 0x01	; 1
    165e:	09 f0       	breq	.+2      	; 0x1662 <TIMER_TMR2Start+0x1a>
    1660:	58 c0       	rjmp	.+176    	; 0x1712 <TIMER_TMR2Start+0xca>
    1662:	0e c0       	rjmp	.+28     	; 0x1680 <TIMER_TMR2Start+0x38>
    1664:	81 15       	cp	r24, r1
    1666:	21 e0       	ldi	r18, 0x01	; 1
    1668:	92 07       	cpc	r25, r18
    166a:	e9 f1       	breq	.+122    	; 0x16e6 <TIMER_TMR2Start+0x9e>
    166c:	81 15       	cp	r24, r1
    166e:	24 e0       	ldi	r18, 0x04	; 4
    1670:	92 07       	cpc	r25, r18
    1672:	09 f4       	brne	.+2      	; 0x1676 <TIMER_TMR2Start+0x2e>
    1674:	43 c0       	rjmp	.+134    	; 0x16fc <TIMER_TMR2Start+0xb4>
    1676:	80 38       	cpi	r24, 0x80	; 128
    1678:	91 05       	cpc	r25, r1
    167a:	09 f0       	breq	.+2      	; 0x167e <TIMER_TMR2Start+0x36>
    167c:	4a c0       	rjmp	.+148    	; 0x1712 <TIMER_TMR2Start+0xca>
    167e:	28 c0       	rjmp	.+80     	; 0x16d0 <TIMER_TMR2Start+0x88>
    1680:	85 b5       	in	r24, 0x25	; 37
    1682:	8d 7f       	andi	r24, 0xFD	; 253
    1684:	85 bd       	out	0x25, r24	; 37
    1686:	85 b5       	in	r24, 0x25	; 37
    1688:	8b 7f       	andi	r24, 0xFB	; 251
    168a:	85 bd       	out	0x25, r24	; 37
    168c:	85 b5       	in	r24, 0x25	; 37
    168e:	81 60       	ori	r24, 0x01	; 1
    1690:	85 bd       	out	0x25, r24	; 37
    1692:	80 e0       	ldi	r24, 0x00	; 0
    1694:	08 95       	ret
    1696:	85 b5       	in	r24, 0x25	; 37
    1698:	8e 7f       	andi	r24, 0xFE	; 254
    169a:	85 bd       	out	0x25, r24	; 37
    169c:	85 b5       	in	r24, 0x25	; 37
    169e:	8b 7f       	andi	r24, 0xFB	; 251
    16a0:	85 bd       	out	0x25, r24	; 37
    16a2:	85 b5       	in	r24, 0x25	; 37
    16a4:	82 60       	ori	r24, 0x02	; 2
    16a6:	85 bd       	out	0x25, r24	; 37
    16a8:	80 e0       	ldi	r24, 0x00	; 0
    16aa:	08 95       	ret
    16ac:	85 b5       	in	r24, 0x25	; 37
    16ae:	8b 7f       	andi	r24, 0xFB	; 251
    16b0:	85 bd       	out	0x25, r24	; 37
    16b2:	85 b5       	in	r24, 0x25	; 37
    16b4:	82 60       	ori	r24, 0x02	; 2
    16b6:	85 bd       	out	0x25, r24	; 37
    16b8:	85 b5       	in	r24, 0x25	; 37
    16ba:	81 60       	ori	r24, 0x01	; 1
    16bc:	85 bd       	out	0x25, r24	; 37
    16be:	85 b5       	in	r24, 0x25	; 37
    16c0:	84 60       	ori	r24, 0x04	; 4
    16c2:	85 bd       	out	0x25, r24	; 37
    16c4:	85 b5       	in	r24, 0x25	; 37
    16c6:	8d 7f       	andi	r24, 0xFD	; 253
    16c8:	85 bd       	out	0x25, r24	; 37
    16ca:	85 b5       	in	r24, 0x25	; 37
    16cc:	8e 7f       	andi	r24, 0xFE	; 254
    16ce:	85 bd       	out	0x25, r24	; 37
    16d0:	85 b5       	in	r24, 0x25	; 37
    16d2:	8b 7f       	andi	r24, 0xFB	; 251
    16d4:	85 bd       	out	0x25, r24	; 37
    16d6:	85 b5       	in	r24, 0x25	; 37
    16d8:	8d 7f       	andi	r24, 0xFD	; 253
    16da:	85 bd       	out	0x25, r24	; 37
    16dc:	85 b5       	in	r24, 0x25	; 37
    16de:	81 60       	ori	r24, 0x01	; 1
    16e0:	85 bd       	out	0x25, r24	; 37
    16e2:	80 e0       	ldi	r24, 0x00	; 0
    16e4:	08 95       	ret
    16e6:	85 b5       	in	r24, 0x25	; 37
    16e8:	82 60       	ori	r24, 0x02	; 2
    16ea:	85 bd       	out	0x25, r24	; 37
    16ec:	85 b5       	in	r24, 0x25	; 37
    16ee:	8e 7f       	andi	r24, 0xFE	; 254
    16f0:	85 bd       	out	0x25, r24	; 37
    16f2:	85 b5       	in	r24, 0x25	; 37
    16f4:	84 60       	ori	r24, 0x04	; 4
    16f6:	85 bd       	out	0x25, r24	; 37
    16f8:	80 e0       	ldi	r24, 0x00	; 0
    16fa:	08 95       	ret
    16fc:	85 b5       	in	r24, 0x25	; 37
    16fe:	82 60       	ori	r24, 0x02	; 2
    1700:	85 bd       	out	0x25, r24	; 37
    1702:	85 b5       	in	r24, 0x25	; 37
    1704:	84 60       	ori	r24, 0x04	; 4
    1706:	85 bd       	out	0x25, r24	; 37
    1708:	85 b5       	in	r24, 0x25	; 37
    170a:	81 60       	ori	r24, 0x01	; 1
    170c:	85 bd       	out	0x25, r24	; 37
    170e:	80 e0       	ldi	r24, 0x00	; 0
    1710:	08 95       	ret
    1712:	81 e0       	ldi	r24, 0x01	; 1
    1714:	08 95       	ret

00001716 <TMR_intDelay_ms>:
    1716:	cf 92       	push	r12
    1718:	df 92       	push	r13
    171a:	ef 92       	push	r14
    171c:	ff 92       	push	r15
    171e:	bc 01       	movw	r22, r24
    1720:	80 e0       	ldi	r24, 0x00	; 0
    1722:	90 e0       	ldi	r25, 0x00	; 0
    1724:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <__floatunsisf>
    1728:	20 e0       	ldi	r18, 0x00	; 0
    172a:	30 e0       	ldi	r19, 0x00	; 0
    172c:	4a e7       	ldi	r20, 0x7A	; 122
    172e:	54 e4       	ldi	r21, 0x44	; 68
    1730:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <__divsf3>
    1734:	6b 01       	movw	r12, r22
    1736:	7c 01       	movw	r14, r24
    1738:	27 e3       	ldi	r18, 0x37	; 55
    173a:	37 e3       	ldi	r19, 0x37	; 55
    173c:	46 e8       	ldi	r20, 0x86	; 134
    173e:	56 e4       	ldi	r21, 0x46	; 70
    1740:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <__gesf2>
    1744:	18 16       	cp	r1, r24
    1746:	0c f4       	brge	.+2      	; 0x174a <TMR_intDelay_ms+0x34>
    1748:	7c c0       	rjmp	.+248    	; 0x1842 <TMR_intDelay_ms+0x12c>
    174a:	15 bc       	out	0x25, r1	; 37
    174c:	2d eb       	ldi	r18, 0xBD	; 189
    174e:	37 e3       	ldi	r19, 0x37	; 55
    1750:	46 e8       	ldi	r20, 0x86	; 134
    1752:	5e e3       	ldi	r21, 0x3E	; 62
    1754:	c7 01       	movw	r24, r14
    1756:	b6 01       	movw	r22, r12
    1758:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__cmpsf2>
    175c:	88 23       	and	r24, r24
    175e:	c4 f4       	brge	.+48     	; 0x1790 <TMR_intDelay_ms+0x7a>
    1760:	a7 01       	movw	r20, r14
    1762:	96 01       	movw	r18, r12
    1764:	6d eb       	ldi	r22, 0xBD	; 189
    1766:	77 e3       	ldi	r23, 0x37	; 55
    1768:	86 e8       	ldi	r24, 0x86	; 134
    176a:	9e e3       	ldi	r25, 0x3E	; 62
    176c:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <__subsf3>
    1770:	2d eb       	ldi	r18, 0xBD	; 189
    1772:	37 e3       	ldi	r19, 0x37	; 55
    1774:	46 e8       	ldi	r20, 0x86	; 134
    1776:	5a e3       	ldi	r21, 0x3A	; 58
    1778:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <__divsf3>
    177c:	0e 94 67 0d 	call	0x1ace	; 0x1ace <__fixunssfsi>
    1780:	64 bd       	out	0x24, r22	; 36
    1782:	81 e0       	ldi	r24, 0x01	; 1
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <u16_g_overflow2Numbers+0x1>
    178a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <u16_g_overflow2Numbers>
    178e:	4f c0       	rjmp	.+158    	; 0x182e <TMR_intDelay_ms+0x118>
    1790:	2d eb       	ldi	r18, 0xBD	; 189
    1792:	37 e3       	ldi	r19, 0x37	; 55
    1794:	46 e8       	ldi	r20, 0x86	; 134
    1796:	5e e3       	ldi	r21, 0x3E	; 62
    1798:	c7 01       	movw	r24, r14
    179a:	b6 01       	movw	r22, r12
    179c:	0e 94 f0 0c 	call	0x19e0	; 0x19e0 <__cmpsf2>
    17a0:	81 11       	cpse	r24, r1
    17a2:	08 c0       	rjmp	.+16     	; 0x17b4 <TMR_intDelay_ms+0x9e>
    17a4:	14 bc       	out	0x24, r1	; 36
    17a6:	81 e0       	ldi	r24, 0x01	; 1
    17a8:	90 e0       	ldi	r25, 0x00	; 0
    17aa:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <u16_g_overflow2Numbers+0x1>
    17ae:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <u16_g_overflow2Numbers>
    17b2:	3d c0       	rjmp	.+122    	; 0x182e <TMR_intDelay_ms+0x118>
    17b4:	2d eb       	ldi	r18, 0xBD	; 189
    17b6:	37 e3       	ldi	r19, 0x37	; 55
    17b8:	46 e8       	ldi	r20, 0x86	; 134
    17ba:	5e e3       	ldi	r21, 0x3E	; 62
    17bc:	c7 01       	movw	r24, r14
    17be:	b6 01       	movw	r22, r12
    17c0:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <__divsf3>
    17c4:	0e 94 d9 0c 	call	0x19b2	; 0x19b2 <ceil>
    17c8:	0e 94 67 0d 	call	0x1ace	; 0x1ace <__fixunssfsi>
    17cc:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <u16_g_overflow2Numbers+0x1>
    17d0:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <u16_g_overflow2Numbers>
    17d4:	80 e0       	ldi	r24, 0x00	; 0
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <__floatunsisf>
    17dc:	20 e0       	ldi	r18, 0x00	; 0
    17de:	30 e0       	ldi	r19, 0x00	; 0
    17e0:	40 e8       	ldi	r20, 0x80	; 128
    17e2:	5f e3       	ldi	r21, 0x3F	; 63
    17e4:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <__subsf3>
    17e8:	2d eb       	ldi	r18, 0xBD	; 189
    17ea:	37 e3       	ldi	r19, 0x37	; 55
    17ec:	46 e8       	ldi	r20, 0x86	; 134
    17ee:	5e e3       	ldi	r21, 0x3E	; 62
    17f0:	0e 94 8e 0e 	call	0x1d1c	; 0x1d1c <__mulsf3>
    17f4:	9b 01       	movw	r18, r22
    17f6:	ac 01       	movw	r20, r24
    17f8:	c7 01       	movw	r24, r14
    17fa:	b6 01       	movw	r22, r12
    17fc:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <__subsf3>
    1800:	2d eb       	ldi	r18, 0xBD	; 189
    1802:	37 e3       	ldi	r19, 0x37	; 55
    1804:	46 e8       	ldi	r20, 0x86	; 134
    1806:	5a e3       	ldi	r21, 0x3A	; 58
    1808:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <__divsf3>
    180c:	9b 01       	movw	r18, r22
    180e:	ac 01       	movw	r20, r24
    1810:	60 e0       	ldi	r22, 0x00	; 0
    1812:	70 e0       	ldi	r23, 0x00	; 0
    1814:	80 e8       	ldi	r24, 0x80	; 128
    1816:	93 e4       	ldi	r25, 0x43	; 67
    1818:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <__subsf3>
    181c:	0e 94 67 0d 	call	0x1ace	; 0x1ace <__fixunssfsi>
    1820:	64 bd       	out	0x24, r22	; 36
    1822:	84 b5       	in	r24, 0x24	; 36
    1824:	90 e0       	ldi	r25, 0x00	; 0
    1826:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <u16_g_tcnt2InitialVal+0x1>
    182a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <u16_g_tcnt2InitialVal>
    182e:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <u16_g_overflow2Ticks+0x1>
    1832:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <u16_g_overflow2Ticks>
    1836:	80 e0       	ldi	r24, 0x00	; 0
    1838:	94 e0       	ldi	r25, 0x04	; 4
    183a:	0e 94 24 0b 	call	0x1648	; 0x1648 <TIMER_TMR2Start>
    183e:	80 e0       	ldi	r24, 0x00	; 0
    1840:	01 c0       	rjmp	.+2      	; 0x1844 <TMR_intDelay_ms+0x12e>
    1842:	81 e0       	ldi	r24, 0x01	; 1
    1844:	ff 90       	pop	r15
    1846:	ef 90       	pop	r14
    1848:	df 90       	pop	r13
    184a:	cf 90       	pop	r12
    184c:	08 95       	ret

0000184e <TMR_TMR2Stop>:
    184e:	85 b5       	in	r24, 0x25	; 37
    1850:	8e 7f       	andi	r24, 0xFE	; 254
    1852:	85 bd       	out	0x25, r24	; 37
    1854:	85 b5       	in	r24, 0x25	; 37
    1856:	8d 7f       	andi	r24, 0xFD	; 253
    1858:	85 bd       	out	0x25, r24	; 37
    185a:	85 b5       	in	r24, 0x25	; 37
    185c:	8b 7f       	andi	r24, 0xFB	; 251
    185e:	85 bd       	out	0x25, r24	; 37
    1860:	08 95       	ret

00001862 <__vector_5>:
    1862:	1f 92       	push	r1
    1864:	0f 92       	push	r0
    1866:	0f b6       	in	r0, 0x3f	; 63
    1868:	0f 92       	push	r0
    186a:	11 24       	eor	r1, r1
    186c:	2f 93       	push	r18
    186e:	3f 93       	push	r19
    1870:	4f 93       	push	r20
    1872:	5f 93       	push	r21
    1874:	6f 93       	push	r22
    1876:	7f 93       	push	r23
    1878:	8f 93       	push	r24
    187a:	9f 93       	push	r25
    187c:	af 93       	push	r26
    187e:	bf 93       	push	r27
    1880:	ef 93       	push	r30
    1882:	ff 93       	push	r31
    1884:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <u16_g_overflow2Ticks>
    1888:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <u16_g_overflow2Ticks+0x1>
    188c:	01 96       	adiw	r24, 0x01	; 1
    188e:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <u16_g_overflow2Ticks+0x1>
    1892:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <u16_g_overflow2Ticks>
    1896:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <u16_g_overflow2Numbers>
    189a:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <u16_g_overflow2Numbers+0x1>
    189e:	82 17       	cp	r24, r18
    18a0:	93 07       	cpc	r25, r19
    18a2:	48 f0       	brcs	.+18     	; 0x18b6 <__vector_5+0x54>
    18a4:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <u16_g_overflow2Ticks+0x1>
    18a8:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <u16_g_overflow2Ticks>
    18ac:	81 e0       	ldi	r24, 0x01	; 1
    18ae:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <u8_g_timeOut>
    18b2:	0e 94 27 0c 	call	0x184e	; 0x184e <TMR_TMR2Stop>
    18b6:	ff 91       	pop	r31
    18b8:	ef 91       	pop	r30
    18ba:	bf 91       	pop	r27
    18bc:	af 91       	pop	r26
    18be:	9f 91       	pop	r25
    18c0:	8f 91       	pop	r24
    18c2:	7f 91       	pop	r23
    18c4:	6f 91       	pop	r22
    18c6:	5f 91       	pop	r21
    18c8:	4f 91       	pop	r20
    18ca:	3f 91       	pop	r19
    18cc:	2f 91       	pop	r18
    18ce:	0f 90       	pop	r0
    18d0:	0f be       	out	0x3f, r0	; 63
    18d2:	0f 90       	pop	r0
    18d4:	1f 90       	pop	r1
    18d6:	18 95       	reti

000018d8 <__subsf3>:
    18d8:	50 58       	subi	r21, 0x80	; 128

000018da <__addsf3>:
    18da:	bb 27       	eor	r27, r27
    18dc:	aa 27       	eor	r26, r26
    18de:	0e 94 84 0c 	call	0x1908	; 0x1908 <__addsf3x>
    18e2:	0c 94 37 0e 	jmp	0x1c6e	; 0x1c6e <__fp_round>
    18e6:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__fp_pscA>
    18ea:	38 f0       	brcs	.+14     	; 0x18fa <__addsf3+0x20>
    18ec:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__fp_pscB>
    18f0:	20 f0       	brcs	.+8      	; 0x18fa <__addsf3+0x20>
    18f2:	39 f4       	brne	.+14     	; 0x1902 <__addsf3+0x28>
    18f4:	9f 3f       	cpi	r25, 0xFF	; 255
    18f6:	19 f4       	brne	.+6      	; 0x18fe <__addsf3+0x24>
    18f8:	26 f4       	brtc	.+8      	; 0x1902 <__addsf3+0x28>
    18fa:	0c 94 26 0e 	jmp	0x1c4c	; 0x1c4c <__fp_nan>
    18fe:	0e f4       	brtc	.+2      	; 0x1902 <__addsf3+0x28>
    1900:	e0 95       	com	r30
    1902:	e7 fb       	bst	r30, 7
    1904:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__fp_inf>

00001908 <__addsf3x>:
    1908:	e9 2f       	mov	r30, r25
    190a:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <__fp_split3>
    190e:	58 f3       	brcs	.-42     	; 0x18e6 <__addsf3+0xc>
    1910:	ba 17       	cp	r27, r26
    1912:	62 07       	cpc	r22, r18
    1914:	73 07       	cpc	r23, r19
    1916:	84 07       	cpc	r24, r20
    1918:	95 07       	cpc	r25, r21
    191a:	20 f0       	brcs	.+8      	; 0x1924 <__addsf3x+0x1c>
    191c:	79 f4       	brne	.+30     	; 0x193c <__addsf3x+0x34>
    191e:	a6 f5       	brtc	.+104    	; 0x1988 <__addsf3x+0x80>
    1920:	0c 94 82 0e 	jmp	0x1d04	; 0x1d04 <__fp_zero>
    1924:	0e f4       	brtc	.+2      	; 0x1928 <__addsf3x+0x20>
    1926:	e0 95       	com	r30
    1928:	0b 2e       	mov	r0, r27
    192a:	ba 2f       	mov	r27, r26
    192c:	a0 2d       	mov	r26, r0
    192e:	0b 01       	movw	r0, r22
    1930:	b9 01       	movw	r22, r18
    1932:	90 01       	movw	r18, r0
    1934:	0c 01       	movw	r0, r24
    1936:	ca 01       	movw	r24, r20
    1938:	a0 01       	movw	r20, r0
    193a:	11 24       	eor	r1, r1
    193c:	ff 27       	eor	r31, r31
    193e:	59 1b       	sub	r21, r25
    1940:	99 f0       	breq	.+38     	; 0x1968 <__addsf3x+0x60>
    1942:	59 3f       	cpi	r21, 0xF9	; 249
    1944:	50 f4       	brcc	.+20     	; 0x195a <__addsf3x+0x52>
    1946:	50 3e       	cpi	r21, 0xE0	; 224
    1948:	68 f1       	brcs	.+90     	; 0x19a4 <__addsf3x+0x9c>
    194a:	1a 16       	cp	r1, r26
    194c:	f0 40       	sbci	r31, 0x00	; 0
    194e:	a2 2f       	mov	r26, r18
    1950:	23 2f       	mov	r18, r19
    1952:	34 2f       	mov	r19, r20
    1954:	44 27       	eor	r20, r20
    1956:	58 5f       	subi	r21, 0xF8	; 248
    1958:	f3 cf       	rjmp	.-26     	; 0x1940 <__addsf3x+0x38>
    195a:	46 95       	lsr	r20
    195c:	37 95       	ror	r19
    195e:	27 95       	ror	r18
    1960:	a7 95       	ror	r26
    1962:	f0 40       	sbci	r31, 0x00	; 0
    1964:	53 95       	inc	r21
    1966:	c9 f7       	brne	.-14     	; 0x195a <__addsf3x+0x52>
    1968:	7e f4       	brtc	.+30     	; 0x1988 <__addsf3x+0x80>
    196a:	1f 16       	cp	r1, r31
    196c:	ba 0b       	sbc	r27, r26
    196e:	62 0b       	sbc	r22, r18
    1970:	73 0b       	sbc	r23, r19
    1972:	84 0b       	sbc	r24, r20
    1974:	ba f0       	brmi	.+46     	; 0x19a4 <__addsf3x+0x9c>
    1976:	91 50       	subi	r25, 0x01	; 1
    1978:	a1 f0       	breq	.+40     	; 0x19a2 <__addsf3x+0x9a>
    197a:	ff 0f       	add	r31, r31
    197c:	bb 1f       	adc	r27, r27
    197e:	66 1f       	adc	r22, r22
    1980:	77 1f       	adc	r23, r23
    1982:	88 1f       	adc	r24, r24
    1984:	c2 f7       	brpl	.-16     	; 0x1976 <__addsf3x+0x6e>
    1986:	0e c0       	rjmp	.+28     	; 0x19a4 <__addsf3x+0x9c>
    1988:	ba 0f       	add	r27, r26
    198a:	62 1f       	adc	r22, r18
    198c:	73 1f       	adc	r23, r19
    198e:	84 1f       	adc	r24, r20
    1990:	48 f4       	brcc	.+18     	; 0x19a4 <__addsf3x+0x9c>
    1992:	87 95       	ror	r24
    1994:	77 95       	ror	r23
    1996:	67 95       	ror	r22
    1998:	b7 95       	ror	r27
    199a:	f7 95       	ror	r31
    199c:	9e 3f       	cpi	r25, 0xFE	; 254
    199e:	08 f0       	brcs	.+2      	; 0x19a2 <__addsf3x+0x9a>
    19a0:	b0 cf       	rjmp	.-160    	; 0x1902 <__addsf3+0x28>
    19a2:	93 95       	inc	r25
    19a4:	88 0f       	add	r24, r24
    19a6:	08 f0       	brcs	.+2      	; 0x19aa <__addsf3x+0xa2>
    19a8:	99 27       	eor	r25, r25
    19aa:	ee 0f       	add	r30, r30
    19ac:	97 95       	ror	r25
    19ae:	87 95       	ror	r24
    19b0:	08 95       	ret

000019b2 <ceil>:
    19b2:	0e 94 6a 0e 	call	0x1cd4	; 0x1cd4 <__fp_trunc>
    19b6:	90 f0       	brcs	.+36     	; 0x19dc <ceil+0x2a>
    19b8:	9f 37       	cpi	r25, 0x7F	; 127
    19ba:	48 f4       	brcc	.+18     	; 0x19ce <ceil+0x1c>
    19bc:	91 11       	cpse	r25, r1
    19be:	16 f4       	brtc	.+4      	; 0x19c4 <ceil+0x12>
    19c0:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__fp_szero>
    19c4:	60 e0       	ldi	r22, 0x00	; 0
    19c6:	70 e0       	ldi	r23, 0x00	; 0
    19c8:	80 e8       	ldi	r24, 0x80	; 128
    19ca:	9f e3       	ldi	r25, 0x3F	; 63
    19cc:	08 95       	ret
    19ce:	26 f0       	brts	.+8      	; 0x19d8 <ceil+0x26>
    19d0:	1b 16       	cp	r1, r27
    19d2:	61 1d       	adc	r22, r1
    19d4:	71 1d       	adc	r23, r1
    19d6:	81 1d       	adc	r24, r1
    19d8:	0c 94 fd 0d 	jmp	0x1bfa	; 0x1bfa <__fp_mintl>
    19dc:	0c 94 18 0e 	jmp	0x1c30	; 0x1c30 <__fp_mpack>

000019e0 <__cmpsf2>:
    19e0:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__fp_cmp>
    19e4:	08 f4       	brcc	.+2      	; 0x19e8 <__cmpsf2+0x8>
    19e6:	81 e0       	ldi	r24, 0x01	; 1
    19e8:	08 95       	ret

000019ea <__divsf3>:
    19ea:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <__divsf3x>
    19ee:	0c 94 37 0e 	jmp	0x1c6e	; 0x1c6e <__fp_round>
    19f2:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__fp_pscB>
    19f6:	58 f0       	brcs	.+22     	; 0x1a0e <__divsf3+0x24>
    19f8:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__fp_pscA>
    19fc:	40 f0       	brcs	.+16     	; 0x1a0e <__divsf3+0x24>
    19fe:	29 f4       	brne	.+10     	; 0x1a0a <__divsf3+0x20>
    1a00:	5f 3f       	cpi	r21, 0xFF	; 255
    1a02:	29 f0       	breq	.+10     	; 0x1a0e <__divsf3+0x24>
    1a04:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__fp_inf>
    1a08:	51 11       	cpse	r21, r1
    1a0a:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__fp_szero>
    1a0e:	0c 94 26 0e 	jmp	0x1c4c	; 0x1c4c <__fp_nan>

00001a12 <__divsf3x>:
    1a12:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <__fp_split3>
    1a16:	68 f3       	brcs	.-38     	; 0x19f2 <__divsf3+0x8>

00001a18 <__divsf3_pse>:
    1a18:	99 23       	and	r25, r25
    1a1a:	b1 f3       	breq	.-20     	; 0x1a08 <__divsf3+0x1e>
    1a1c:	55 23       	and	r21, r21
    1a1e:	91 f3       	breq	.-28     	; 0x1a04 <__divsf3+0x1a>
    1a20:	95 1b       	sub	r25, r21
    1a22:	55 0b       	sbc	r21, r21
    1a24:	bb 27       	eor	r27, r27
    1a26:	aa 27       	eor	r26, r26
    1a28:	62 17       	cp	r22, r18
    1a2a:	73 07       	cpc	r23, r19
    1a2c:	84 07       	cpc	r24, r20
    1a2e:	38 f0       	brcs	.+14     	; 0x1a3e <__divsf3_pse+0x26>
    1a30:	9f 5f       	subi	r25, 0xFF	; 255
    1a32:	5f 4f       	sbci	r21, 0xFF	; 255
    1a34:	22 0f       	add	r18, r18
    1a36:	33 1f       	adc	r19, r19
    1a38:	44 1f       	adc	r20, r20
    1a3a:	aa 1f       	adc	r26, r26
    1a3c:	a9 f3       	breq	.-22     	; 0x1a28 <__divsf3_pse+0x10>
    1a3e:	35 d0       	rcall	.+106    	; 0x1aaa <__divsf3_pse+0x92>
    1a40:	0e 2e       	mov	r0, r30
    1a42:	3a f0       	brmi	.+14     	; 0x1a52 <__divsf3_pse+0x3a>
    1a44:	e0 e8       	ldi	r30, 0x80	; 128
    1a46:	32 d0       	rcall	.+100    	; 0x1aac <__divsf3_pse+0x94>
    1a48:	91 50       	subi	r25, 0x01	; 1
    1a4a:	50 40       	sbci	r21, 0x00	; 0
    1a4c:	e6 95       	lsr	r30
    1a4e:	00 1c       	adc	r0, r0
    1a50:	ca f7       	brpl	.-14     	; 0x1a44 <__divsf3_pse+0x2c>
    1a52:	2b d0       	rcall	.+86     	; 0x1aaa <__divsf3_pse+0x92>
    1a54:	fe 2f       	mov	r31, r30
    1a56:	29 d0       	rcall	.+82     	; 0x1aaa <__divsf3_pse+0x92>
    1a58:	66 0f       	add	r22, r22
    1a5a:	77 1f       	adc	r23, r23
    1a5c:	88 1f       	adc	r24, r24
    1a5e:	bb 1f       	adc	r27, r27
    1a60:	26 17       	cp	r18, r22
    1a62:	37 07       	cpc	r19, r23
    1a64:	48 07       	cpc	r20, r24
    1a66:	ab 07       	cpc	r26, r27
    1a68:	b0 e8       	ldi	r27, 0x80	; 128
    1a6a:	09 f0       	breq	.+2      	; 0x1a6e <__divsf3_pse+0x56>
    1a6c:	bb 0b       	sbc	r27, r27
    1a6e:	80 2d       	mov	r24, r0
    1a70:	bf 01       	movw	r22, r30
    1a72:	ff 27       	eor	r31, r31
    1a74:	93 58       	subi	r25, 0x83	; 131
    1a76:	5f 4f       	sbci	r21, 0xFF	; 255
    1a78:	3a f0       	brmi	.+14     	; 0x1a88 <__divsf3_pse+0x70>
    1a7a:	9e 3f       	cpi	r25, 0xFE	; 254
    1a7c:	51 05       	cpc	r21, r1
    1a7e:	78 f0       	brcs	.+30     	; 0x1a9e <__divsf3_pse+0x86>
    1a80:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__fp_inf>
    1a84:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__fp_szero>
    1a88:	5f 3f       	cpi	r21, 0xFF	; 255
    1a8a:	e4 f3       	brlt	.-8      	; 0x1a84 <__divsf3_pse+0x6c>
    1a8c:	98 3e       	cpi	r25, 0xE8	; 232
    1a8e:	d4 f3       	brlt	.-12     	; 0x1a84 <__divsf3_pse+0x6c>
    1a90:	86 95       	lsr	r24
    1a92:	77 95       	ror	r23
    1a94:	67 95       	ror	r22
    1a96:	b7 95       	ror	r27
    1a98:	f7 95       	ror	r31
    1a9a:	9f 5f       	subi	r25, 0xFF	; 255
    1a9c:	c9 f7       	brne	.-14     	; 0x1a90 <__divsf3_pse+0x78>
    1a9e:	88 0f       	add	r24, r24
    1aa0:	91 1d       	adc	r25, r1
    1aa2:	96 95       	lsr	r25
    1aa4:	87 95       	ror	r24
    1aa6:	97 f9       	bld	r25, 7
    1aa8:	08 95       	ret
    1aaa:	e1 e0       	ldi	r30, 0x01	; 1
    1aac:	66 0f       	add	r22, r22
    1aae:	77 1f       	adc	r23, r23
    1ab0:	88 1f       	adc	r24, r24
    1ab2:	bb 1f       	adc	r27, r27
    1ab4:	62 17       	cp	r22, r18
    1ab6:	73 07       	cpc	r23, r19
    1ab8:	84 07       	cpc	r24, r20
    1aba:	ba 07       	cpc	r27, r26
    1abc:	20 f0       	brcs	.+8      	; 0x1ac6 <__divsf3_pse+0xae>
    1abe:	62 1b       	sub	r22, r18
    1ac0:	73 0b       	sbc	r23, r19
    1ac2:	84 0b       	sbc	r24, r20
    1ac4:	ba 0b       	sbc	r27, r26
    1ac6:	ee 1f       	adc	r30, r30
    1ac8:	88 f7       	brcc	.-30     	; 0x1aac <__divsf3_pse+0x94>
    1aca:	e0 95       	com	r30
    1acc:	08 95       	ret

00001ace <__fixunssfsi>:
    1ace:	0e 94 50 0e 	call	0x1ca0	; 0x1ca0 <__fp_splitA>
    1ad2:	88 f0       	brcs	.+34     	; 0x1af6 <__fixunssfsi+0x28>
    1ad4:	9f 57       	subi	r25, 0x7F	; 127
    1ad6:	98 f0       	brcs	.+38     	; 0x1afe <__fixunssfsi+0x30>
    1ad8:	b9 2f       	mov	r27, r25
    1ada:	99 27       	eor	r25, r25
    1adc:	b7 51       	subi	r27, 0x17	; 23
    1ade:	b0 f0       	brcs	.+44     	; 0x1b0c <__fixunssfsi+0x3e>
    1ae0:	e1 f0       	breq	.+56     	; 0x1b1a <__fixunssfsi+0x4c>
    1ae2:	66 0f       	add	r22, r22
    1ae4:	77 1f       	adc	r23, r23
    1ae6:	88 1f       	adc	r24, r24
    1ae8:	99 1f       	adc	r25, r25
    1aea:	1a f0       	brmi	.+6      	; 0x1af2 <__fixunssfsi+0x24>
    1aec:	ba 95       	dec	r27
    1aee:	c9 f7       	brne	.-14     	; 0x1ae2 <__fixunssfsi+0x14>
    1af0:	14 c0       	rjmp	.+40     	; 0x1b1a <__fixunssfsi+0x4c>
    1af2:	b1 30       	cpi	r27, 0x01	; 1
    1af4:	91 f0       	breq	.+36     	; 0x1b1a <__fixunssfsi+0x4c>
    1af6:	0e 94 82 0e 	call	0x1d04	; 0x1d04 <__fp_zero>
    1afa:	b1 e0       	ldi	r27, 0x01	; 1
    1afc:	08 95       	ret
    1afe:	0c 94 82 0e 	jmp	0x1d04	; 0x1d04 <__fp_zero>
    1b02:	67 2f       	mov	r22, r23
    1b04:	78 2f       	mov	r23, r24
    1b06:	88 27       	eor	r24, r24
    1b08:	b8 5f       	subi	r27, 0xF8	; 248
    1b0a:	39 f0       	breq	.+14     	; 0x1b1a <__fixunssfsi+0x4c>
    1b0c:	b9 3f       	cpi	r27, 0xF9	; 249
    1b0e:	cc f3       	brlt	.-14     	; 0x1b02 <__fixunssfsi+0x34>
    1b10:	86 95       	lsr	r24
    1b12:	77 95       	ror	r23
    1b14:	67 95       	ror	r22
    1b16:	b3 95       	inc	r27
    1b18:	d9 f7       	brne	.-10     	; 0x1b10 <__fixunssfsi+0x42>
    1b1a:	3e f4       	brtc	.+14     	; 0x1b2a <__fixunssfsi+0x5c>
    1b1c:	90 95       	com	r25
    1b1e:	80 95       	com	r24
    1b20:	70 95       	com	r23
    1b22:	61 95       	neg	r22
    1b24:	7f 4f       	sbci	r23, 0xFF	; 255
    1b26:	8f 4f       	sbci	r24, 0xFF	; 255
    1b28:	9f 4f       	sbci	r25, 0xFF	; 255
    1b2a:	08 95       	ret

00001b2c <__floatunsisf>:
    1b2c:	e8 94       	clt
    1b2e:	09 c0       	rjmp	.+18     	; 0x1b42 <__floatsisf+0x12>

00001b30 <__floatsisf>:
    1b30:	97 fb       	bst	r25, 7
    1b32:	3e f4       	brtc	.+14     	; 0x1b42 <__floatsisf+0x12>
    1b34:	90 95       	com	r25
    1b36:	80 95       	com	r24
    1b38:	70 95       	com	r23
    1b3a:	61 95       	neg	r22
    1b3c:	7f 4f       	sbci	r23, 0xFF	; 255
    1b3e:	8f 4f       	sbci	r24, 0xFF	; 255
    1b40:	9f 4f       	sbci	r25, 0xFF	; 255
    1b42:	99 23       	and	r25, r25
    1b44:	a9 f0       	breq	.+42     	; 0x1b70 <__floatsisf+0x40>
    1b46:	f9 2f       	mov	r31, r25
    1b48:	96 e9       	ldi	r25, 0x96	; 150
    1b4a:	bb 27       	eor	r27, r27
    1b4c:	93 95       	inc	r25
    1b4e:	f6 95       	lsr	r31
    1b50:	87 95       	ror	r24
    1b52:	77 95       	ror	r23
    1b54:	67 95       	ror	r22
    1b56:	b7 95       	ror	r27
    1b58:	f1 11       	cpse	r31, r1
    1b5a:	f8 cf       	rjmp	.-16     	; 0x1b4c <__floatsisf+0x1c>
    1b5c:	fa f4       	brpl	.+62     	; 0x1b9c <__floatsisf+0x6c>
    1b5e:	bb 0f       	add	r27, r27
    1b60:	11 f4       	brne	.+4      	; 0x1b66 <__floatsisf+0x36>
    1b62:	60 ff       	sbrs	r22, 0
    1b64:	1b c0       	rjmp	.+54     	; 0x1b9c <__floatsisf+0x6c>
    1b66:	6f 5f       	subi	r22, 0xFF	; 255
    1b68:	7f 4f       	sbci	r23, 0xFF	; 255
    1b6a:	8f 4f       	sbci	r24, 0xFF	; 255
    1b6c:	9f 4f       	sbci	r25, 0xFF	; 255
    1b6e:	16 c0       	rjmp	.+44     	; 0x1b9c <__floatsisf+0x6c>
    1b70:	88 23       	and	r24, r24
    1b72:	11 f0       	breq	.+4      	; 0x1b78 <__floatsisf+0x48>
    1b74:	96 e9       	ldi	r25, 0x96	; 150
    1b76:	11 c0       	rjmp	.+34     	; 0x1b9a <__floatsisf+0x6a>
    1b78:	77 23       	and	r23, r23
    1b7a:	21 f0       	breq	.+8      	; 0x1b84 <__floatsisf+0x54>
    1b7c:	9e e8       	ldi	r25, 0x8E	; 142
    1b7e:	87 2f       	mov	r24, r23
    1b80:	76 2f       	mov	r23, r22
    1b82:	05 c0       	rjmp	.+10     	; 0x1b8e <__floatsisf+0x5e>
    1b84:	66 23       	and	r22, r22
    1b86:	71 f0       	breq	.+28     	; 0x1ba4 <__floatsisf+0x74>
    1b88:	96 e8       	ldi	r25, 0x86	; 134
    1b8a:	86 2f       	mov	r24, r22
    1b8c:	70 e0       	ldi	r23, 0x00	; 0
    1b8e:	60 e0       	ldi	r22, 0x00	; 0
    1b90:	2a f0       	brmi	.+10     	; 0x1b9c <__floatsisf+0x6c>
    1b92:	9a 95       	dec	r25
    1b94:	66 0f       	add	r22, r22
    1b96:	77 1f       	adc	r23, r23
    1b98:	88 1f       	adc	r24, r24
    1b9a:	da f7       	brpl	.-10     	; 0x1b92 <__floatsisf+0x62>
    1b9c:	88 0f       	add	r24, r24
    1b9e:	96 95       	lsr	r25
    1ba0:	87 95       	ror	r24
    1ba2:	97 f9       	bld	r25, 7
    1ba4:	08 95       	ret

00001ba6 <__fp_cmp>:
    1ba6:	99 0f       	add	r25, r25
    1ba8:	00 08       	sbc	r0, r0
    1baa:	55 0f       	add	r21, r21
    1bac:	aa 0b       	sbc	r26, r26
    1bae:	e0 e8       	ldi	r30, 0x80	; 128
    1bb0:	fe ef       	ldi	r31, 0xFE	; 254
    1bb2:	16 16       	cp	r1, r22
    1bb4:	17 06       	cpc	r1, r23
    1bb6:	e8 07       	cpc	r30, r24
    1bb8:	f9 07       	cpc	r31, r25
    1bba:	c0 f0       	brcs	.+48     	; 0x1bec <__fp_cmp+0x46>
    1bbc:	12 16       	cp	r1, r18
    1bbe:	13 06       	cpc	r1, r19
    1bc0:	e4 07       	cpc	r30, r20
    1bc2:	f5 07       	cpc	r31, r21
    1bc4:	98 f0       	brcs	.+38     	; 0x1bec <__fp_cmp+0x46>
    1bc6:	62 1b       	sub	r22, r18
    1bc8:	73 0b       	sbc	r23, r19
    1bca:	84 0b       	sbc	r24, r20
    1bcc:	95 0b       	sbc	r25, r21
    1bce:	39 f4       	brne	.+14     	; 0x1bde <__fp_cmp+0x38>
    1bd0:	0a 26       	eor	r0, r26
    1bd2:	61 f0       	breq	.+24     	; 0x1bec <__fp_cmp+0x46>
    1bd4:	23 2b       	or	r18, r19
    1bd6:	24 2b       	or	r18, r20
    1bd8:	25 2b       	or	r18, r21
    1bda:	21 f4       	brne	.+8      	; 0x1be4 <__fp_cmp+0x3e>
    1bdc:	08 95       	ret
    1bde:	0a 26       	eor	r0, r26
    1be0:	09 f4       	brne	.+2      	; 0x1be4 <__fp_cmp+0x3e>
    1be2:	a1 40       	sbci	r26, 0x01	; 1
    1be4:	a6 95       	lsr	r26
    1be6:	8f ef       	ldi	r24, 0xFF	; 255
    1be8:	81 1d       	adc	r24, r1
    1bea:	81 1d       	adc	r24, r1
    1bec:	08 95       	ret

00001bee <__fp_inf>:
    1bee:	97 f9       	bld	r25, 7
    1bf0:	9f 67       	ori	r25, 0x7F	; 127
    1bf2:	80 e8       	ldi	r24, 0x80	; 128
    1bf4:	70 e0       	ldi	r23, 0x00	; 0
    1bf6:	60 e0       	ldi	r22, 0x00	; 0
    1bf8:	08 95       	ret

00001bfa <__fp_mintl>:
    1bfa:	88 23       	and	r24, r24
    1bfc:	71 f4       	brne	.+28     	; 0x1c1a <__fp_mintl+0x20>
    1bfe:	77 23       	and	r23, r23
    1c00:	21 f0       	breq	.+8      	; 0x1c0a <__fp_mintl+0x10>
    1c02:	98 50       	subi	r25, 0x08	; 8
    1c04:	87 2b       	or	r24, r23
    1c06:	76 2f       	mov	r23, r22
    1c08:	07 c0       	rjmp	.+14     	; 0x1c18 <__fp_mintl+0x1e>
    1c0a:	66 23       	and	r22, r22
    1c0c:	11 f4       	brne	.+4      	; 0x1c12 <__fp_mintl+0x18>
    1c0e:	99 27       	eor	r25, r25
    1c10:	0d c0       	rjmp	.+26     	; 0x1c2c <__fp_mintl+0x32>
    1c12:	90 51       	subi	r25, 0x10	; 16
    1c14:	86 2b       	or	r24, r22
    1c16:	70 e0       	ldi	r23, 0x00	; 0
    1c18:	60 e0       	ldi	r22, 0x00	; 0
    1c1a:	2a f0       	brmi	.+10     	; 0x1c26 <__fp_mintl+0x2c>
    1c1c:	9a 95       	dec	r25
    1c1e:	66 0f       	add	r22, r22
    1c20:	77 1f       	adc	r23, r23
    1c22:	88 1f       	adc	r24, r24
    1c24:	da f7       	brpl	.-10     	; 0x1c1c <__fp_mintl+0x22>
    1c26:	88 0f       	add	r24, r24
    1c28:	96 95       	lsr	r25
    1c2a:	87 95       	ror	r24
    1c2c:	97 f9       	bld	r25, 7
    1c2e:	08 95       	ret

00001c30 <__fp_mpack>:
    1c30:	9f 3f       	cpi	r25, 0xFF	; 255
    1c32:	31 f0       	breq	.+12     	; 0x1c40 <__fp_mpack_finite+0xc>

00001c34 <__fp_mpack_finite>:
    1c34:	91 50       	subi	r25, 0x01	; 1
    1c36:	20 f4       	brcc	.+8      	; 0x1c40 <__fp_mpack_finite+0xc>
    1c38:	87 95       	ror	r24
    1c3a:	77 95       	ror	r23
    1c3c:	67 95       	ror	r22
    1c3e:	b7 95       	ror	r27
    1c40:	88 0f       	add	r24, r24
    1c42:	91 1d       	adc	r25, r1
    1c44:	96 95       	lsr	r25
    1c46:	87 95       	ror	r24
    1c48:	97 f9       	bld	r25, 7
    1c4a:	08 95       	ret

00001c4c <__fp_nan>:
    1c4c:	9f ef       	ldi	r25, 0xFF	; 255
    1c4e:	80 ec       	ldi	r24, 0xC0	; 192
    1c50:	08 95       	ret

00001c52 <__fp_pscA>:
    1c52:	00 24       	eor	r0, r0
    1c54:	0a 94       	dec	r0
    1c56:	16 16       	cp	r1, r22
    1c58:	17 06       	cpc	r1, r23
    1c5a:	18 06       	cpc	r1, r24
    1c5c:	09 06       	cpc	r0, r25
    1c5e:	08 95       	ret

00001c60 <__fp_pscB>:
    1c60:	00 24       	eor	r0, r0
    1c62:	0a 94       	dec	r0
    1c64:	12 16       	cp	r1, r18
    1c66:	13 06       	cpc	r1, r19
    1c68:	14 06       	cpc	r1, r20
    1c6a:	05 06       	cpc	r0, r21
    1c6c:	08 95       	ret

00001c6e <__fp_round>:
    1c6e:	09 2e       	mov	r0, r25
    1c70:	03 94       	inc	r0
    1c72:	00 0c       	add	r0, r0
    1c74:	11 f4       	brne	.+4      	; 0x1c7a <__fp_round+0xc>
    1c76:	88 23       	and	r24, r24
    1c78:	52 f0       	brmi	.+20     	; 0x1c8e <__fp_round+0x20>
    1c7a:	bb 0f       	add	r27, r27
    1c7c:	40 f4       	brcc	.+16     	; 0x1c8e <__fp_round+0x20>
    1c7e:	bf 2b       	or	r27, r31
    1c80:	11 f4       	brne	.+4      	; 0x1c86 <__fp_round+0x18>
    1c82:	60 ff       	sbrs	r22, 0
    1c84:	04 c0       	rjmp	.+8      	; 0x1c8e <__fp_round+0x20>
    1c86:	6f 5f       	subi	r22, 0xFF	; 255
    1c88:	7f 4f       	sbci	r23, 0xFF	; 255
    1c8a:	8f 4f       	sbci	r24, 0xFF	; 255
    1c8c:	9f 4f       	sbci	r25, 0xFF	; 255
    1c8e:	08 95       	ret

00001c90 <__fp_split3>:
    1c90:	57 fd       	sbrc	r21, 7
    1c92:	90 58       	subi	r25, 0x80	; 128
    1c94:	44 0f       	add	r20, r20
    1c96:	55 1f       	adc	r21, r21
    1c98:	59 f0       	breq	.+22     	; 0x1cb0 <__fp_splitA+0x10>
    1c9a:	5f 3f       	cpi	r21, 0xFF	; 255
    1c9c:	71 f0       	breq	.+28     	; 0x1cba <__fp_splitA+0x1a>
    1c9e:	47 95       	ror	r20

00001ca0 <__fp_splitA>:
    1ca0:	88 0f       	add	r24, r24
    1ca2:	97 fb       	bst	r25, 7
    1ca4:	99 1f       	adc	r25, r25
    1ca6:	61 f0       	breq	.+24     	; 0x1cc0 <__fp_splitA+0x20>
    1ca8:	9f 3f       	cpi	r25, 0xFF	; 255
    1caa:	79 f0       	breq	.+30     	; 0x1cca <__fp_splitA+0x2a>
    1cac:	87 95       	ror	r24
    1cae:	08 95       	ret
    1cb0:	12 16       	cp	r1, r18
    1cb2:	13 06       	cpc	r1, r19
    1cb4:	14 06       	cpc	r1, r20
    1cb6:	55 1f       	adc	r21, r21
    1cb8:	f2 cf       	rjmp	.-28     	; 0x1c9e <__fp_split3+0xe>
    1cba:	46 95       	lsr	r20
    1cbc:	f1 df       	rcall	.-30     	; 0x1ca0 <__fp_splitA>
    1cbe:	08 c0       	rjmp	.+16     	; 0x1cd0 <__fp_splitA+0x30>
    1cc0:	16 16       	cp	r1, r22
    1cc2:	17 06       	cpc	r1, r23
    1cc4:	18 06       	cpc	r1, r24
    1cc6:	99 1f       	adc	r25, r25
    1cc8:	f1 cf       	rjmp	.-30     	; 0x1cac <__fp_splitA+0xc>
    1cca:	86 95       	lsr	r24
    1ccc:	71 05       	cpc	r23, r1
    1cce:	61 05       	cpc	r22, r1
    1cd0:	08 94       	sec
    1cd2:	08 95       	ret

00001cd4 <__fp_trunc>:
    1cd4:	0e 94 50 0e 	call	0x1ca0	; 0x1ca0 <__fp_splitA>
    1cd8:	a0 f0       	brcs	.+40     	; 0x1d02 <__fp_trunc+0x2e>
    1cda:	be e7       	ldi	r27, 0x7E	; 126
    1cdc:	b9 17       	cp	r27, r25
    1cde:	88 f4       	brcc	.+34     	; 0x1d02 <__fp_trunc+0x2e>
    1ce0:	bb 27       	eor	r27, r27
    1ce2:	9f 38       	cpi	r25, 0x8F	; 143
    1ce4:	60 f4       	brcc	.+24     	; 0x1cfe <__fp_trunc+0x2a>
    1ce6:	16 16       	cp	r1, r22
    1ce8:	b1 1d       	adc	r27, r1
    1cea:	67 2f       	mov	r22, r23
    1cec:	78 2f       	mov	r23, r24
    1cee:	88 27       	eor	r24, r24
    1cf0:	98 5f       	subi	r25, 0xF8	; 248
    1cf2:	f7 cf       	rjmp	.-18     	; 0x1ce2 <__fp_trunc+0xe>
    1cf4:	86 95       	lsr	r24
    1cf6:	77 95       	ror	r23
    1cf8:	67 95       	ror	r22
    1cfa:	b1 1d       	adc	r27, r1
    1cfc:	93 95       	inc	r25
    1cfe:	96 39       	cpi	r25, 0x96	; 150
    1d00:	c8 f3       	brcs	.-14     	; 0x1cf4 <__fp_trunc+0x20>
    1d02:	08 95       	ret

00001d04 <__fp_zero>:
    1d04:	e8 94       	clt

00001d06 <__fp_szero>:
    1d06:	bb 27       	eor	r27, r27
    1d08:	66 27       	eor	r22, r22
    1d0a:	77 27       	eor	r23, r23
    1d0c:	cb 01       	movw	r24, r22
    1d0e:	97 f9       	bld	r25, 7
    1d10:	08 95       	ret

00001d12 <__gesf2>:
    1d12:	0e 94 d3 0d 	call	0x1ba6	; 0x1ba6 <__fp_cmp>
    1d16:	08 f4       	brcc	.+2      	; 0x1d1a <__gesf2+0x8>
    1d18:	8f ef       	ldi	r24, 0xFF	; 255
    1d1a:	08 95       	ret

00001d1c <__mulsf3>:
    1d1c:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <__mulsf3x>
    1d20:	0c 94 37 0e 	jmp	0x1c6e	; 0x1c6e <__fp_round>
    1d24:	0e 94 29 0e 	call	0x1c52	; 0x1c52 <__fp_pscA>
    1d28:	38 f0       	brcs	.+14     	; 0x1d38 <__mulsf3+0x1c>
    1d2a:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <__fp_pscB>
    1d2e:	20 f0       	brcs	.+8      	; 0x1d38 <__mulsf3+0x1c>
    1d30:	95 23       	and	r25, r21
    1d32:	11 f0       	breq	.+4      	; 0x1d38 <__mulsf3+0x1c>
    1d34:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__fp_inf>
    1d38:	0c 94 26 0e 	jmp	0x1c4c	; 0x1c4c <__fp_nan>
    1d3c:	11 24       	eor	r1, r1
    1d3e:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__fp_szero>

00001d42 <__mulsf3x>:
    1d42:	0e 94 48 0e 	call	0x1c90	; 0x1c90 <__fp_split3>
    1d46:	70 f3       	brcs	.-36     	; 0x1d24 <__mulsf3+0x8>

00001d48 <__mulsf3_pse>:
    1d48:	95 9f       	mul	r25, r21
    1d4a:	c1 f3       	breq	.-16     	; 0x1d3c <__mulsf3+0x20>
    1d4c:	95 0f       	add	r25, r21
    1d4e:	50 e0       	ldi	r21, 0x00	; 0
    1d50:	55 1f       	adc	r21, r21
    1d52:	62 9f       	mul	r22, r18
    1d54:	f0 01       	movw	r30, r0
    1d56:	72 9f       	mul	r23, r18
    1d58:	bb 27       	eor	r27, r27
    1d5a:	f0 0d       	add	r31, r0
    1d5c:	b1 1d       	adc	r27, r1
    1d5e:	63 9f       	mul	r22, r19
    1d60:	aa 27       	eor	r26, r26
    1d62:	f0 0d       	add	r31, r0
    1d64:	b1 1d       	adc	r27, r1
    1d66:	aa 1f       	adc	r26, r26
    1d68:	64 9f       	mul	r22, r20
    1d6a:	66 27       	eor	r22, r22
    1d6c:	b0 0d       	add	r27, r0
    1d6e:	a1 1d       	adc	r26, r1
    1d70:	66 1f       	adc	r22, r22
    1d72:	82 9f       	mul	r24, r18
    1d74:	22 27       	eor	r18, r18
    1d76:	b0 0d       	add	r27, r0
    1d78:	a1 1d       	adc	r26, r1
    1d7a:	62 1f       	adc	r22, r18
    1d7c:	73 9f       	mul	r23, r19
    1d7e:	b0 0d       	add	r27, r0
    1d80:	a1 1d       	adc	r26, r1
    1d82:	62 1f       	adc	r22, r18
    1d84:	83 9f       	mul	r24, r19
    1d86:	a0 0d       	add	r26, r0
    1d88:	61 1d       	adc	r22, r1
    1d8a:	22 1f       	adc	r18, r18
    1d8c:	74 9f       	mul	r23, r20
    1d8e:	33 27       	eor	r19, r19
    1d90:	a0 0d       	add	r26, r0
    1d92:	61 1d       	adc	r22, r1
    1d94:	23 1f       	adc	r18, r19
    1d96:	84 9f       	mul	r24, r20
    1d98:	60 0d       	add	r22, r0
    1d9a:	21 1d       	adc	r18, r1
    1d9c:	82 2f       	mov	r24, r18
    1d9e:	76 2f       	mov	r23, r22
    1da0:	6a 2f       	mov	r22, r26
    1da2:	11 24       	eor	r1, r1
    1da4:	9f 57       	subi	r25, 0x7F	; 127
    1da6:	50 40       	sbci	r21, 0x00	; 0
    1da8:	9a f0       	brmi	.+38     	; 0x1dd0 <__mulsf3_pse+0x88>
    1daa:	f1 f0       	breq	.+60     	; 0x1de8 <__mulsf3_pse+0xa0>
    1dac:	88 23       	and	r24, r24
    1dae:	4a f0       	brmi	.+18     	; 0x1dc2 <__mulsf3_pse+0x7a>
    1db0:	ee 0f       	add	r30, r30
    1db2:	ff 1f       	adc	r31, r31
    1db4:	bb 1f       	adc	r27, r27
    1db6:	66 1f       	adc	r22, r22
    1db8:	77 1f       	adc	r23, r23
    1dba:	88 1f       	adc	r24, r24
    1dbc:	91 50       	subi	r25, 0x01	; 1
    1dbe:	50 40       	sbci	r21, 0x00	; 0
    1dc0:	a9 f7       	brne	.-22     	; 0x1dac <__mulsf3_pse+0x64>
    1dc2:	9e 3f       	cpi	r25, 0xFE	; 254
    1dc4:	51 05       	cpc	r21, r1
    1dc6:	80 f0       	brcs	.+32     	; 0x1de8 <__mulsf3_pse+0xa0>
    1dc8:	0c 94 f7 0d 	jmp	0x1bee	; 0x1bee <__fp_inf>
    1dcc:	0c 94 83 0e 	jmp	0x1d06	; 0x1d06 <__fp_szero>
    1dd0:	5f 3f       	cpi	r21, 0xFF	; 255
    1dd2:	e4 f3       	brlt	.-8      	; 0x1dcc <__mulsf3_pse+0x84>
    1dd4:	98 3e       	cpi	r25, 0xE8	; 232
    1dd6:	d4 f3       	brlt	.-12     	; 0x1dcc <__mulsf3_pse+0x84>
    1dd8:	86 95       	lsr	r24
    1dda:	77 95       	ror	r23
    1ddc:	67 95       	ror	r22
    1dde:	b7 95       	ror	r27
    1de0:	f7 95       	ror	r31
    1de2:	e7 95       	ror	r30
    1de4:	9f 5f       	subi	r25, 0xFF	; 255
    1de6:	c1 f7       	brne	.-16     	; 0x1dd8 <__mulsf3_pse+0x90>
    1de8:	fe 2b       	or	r31, r30
    1dea:	88 0f       	add	r24, r24
    1dec:	91 1d       	adc	r25, r1
    1dee:	96 95       	lsr	r25
    1df0:	87 95       	ror	r24
    1df2:	97 f9       	bld	r25, 7
    1df4:	08 95       	ret

00001df6 <__itoa_ncheck>:
    1df6:	bb 27       	eor	r27, r27
    1df8:	4a 30       	cpi	r20, 0x0A	; 10
    1dfa:	31 f4       	brne	.+12     	; 0x1e08 <__itoa_ncheck+0x12>
    1dfc:	99 23       	and	r25, r25
    1dfe:	22 f4       	brpl	.+8      	; 0x1e08 <__itoa_ncheck+0x12>
    1e00:	bd e2       	ldi	r27, 0x2D	; 45
    1e02:	90 95       	com	r25
    1e04:	81 95       	neg	r24
    1e06:	9f 4f       	sbci	r25, 0xFF	; 255
    1e08:	0c 94 07 0f 	jmp	0x1e0e	; 0x1e0e <__utoa_common>

00001e0c <__utoa_ncheck>:
    1e0c:	bb 27       	eor	r27, r27

00001e0e <__utoa_common>:
    1e0e:	fb 01       	movw	r30, r22
    1e10:	55 27       	eor	r21, r21
    1e12:	aa 27       	eor	r26, r26
    1e14:	88 0f       	add	r24, r24
    1e16:	99 1f       	adc	r25, r25
    1e18:	aa 1f       	adc	r26, r26
    1e1a:	a4 17       	cp	r26, r20
    1e1c:	10 f0       	brcs	.+4      	; 0x1e22 <__utoa_common+0x14>
    1e1e:	a4 1b       	sub	r26, r20
    1e20:	83 95       	inc	r24
    1e22:	50 51       	subi	r21, 0x10	; 16
    1e24:	b9 f7       	brne	.-18     	; 0x1e14 <__utoa_common+0x6>
    1e26:	a0 5d       	subi	r26, 0xD0	; 208
    1e28:	aa 33       	cpi	r26, 0x3A	; 58
    1e2a:	08 f0       	brcs	.+2      	; 0x1e2e <__utoa_common+0x20>
    1e2c:	a9 5d       	subi	r26, 0xD9	; 217
    1e2e:	a1 93       	st	Z+, r26
    1e30:	00 97       	sbiw	r24, 0x00	; 0
    1e32:	79 f7       	brne	.-34     	; 0x1e12 <__utoa_common+0x4>
    1e34:	b1 11       	cpse	r27, r1
    1e36:	b1 93       	st	Z+, r27
    1e38:	11 92       	st	Z+, r1
    1e3a:	cb 01       	movw	r24, r22
    1e3c:	0c 94 20 0f 	jmp	0x1e40	; 0x1e40 <strrev>

00001e40 <strrev>:
    1e40:	dc 01       	movw	r26, r24
    1e42:	fc 01       	movw	r30, r24
    1e44:	67 2f       	mov	r22, r23
    1e46:	71 91       	ld	r23, Z+
    1e48:	77 23       	and	r23, r23
    1e4a:	e1 f7       	brne	.-8      	; 0x1e44 <strrev+0x4>
    1e4c:	32 97       	sbiw	r30, 0x02	; 2
    1e4e:	04 c0       	rjmp	.+8      	; 0x1e58 <strrev+0x18>
    1e50:	7c 91       	ld	r23, X
    1e52:	6d 93       	st	X+, r22
    1e54:	70 83       	st	Z, r23
    1e56:	62 91       	ld	r22, -Z
    1e58:	ae 17       	cp	r26, r30
    1e5a:	bf 07       	cpc	r27, r31
    1e5c:	c8 f3       	brcs	.-14     	; 0x1e50 <strrev+0x10>
    1e5e:	08 95       	ret

00001e60 <_exit>:
    1e60:	f8 94       	cli

00001e62 <__stop_program>:
    1e62:	ff cf       	rjmp	.-2      	; 0x1e62 <__stop_program>
>>>>>>> main
